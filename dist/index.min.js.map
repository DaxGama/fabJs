{"version":3,"file":"index.min.js","sources":["../src/config.ts","../src/util/internals/console.ts","../src/filters/GLProbes/GLProbe.ts","../src/filters/GLProbes/WebGLProbe.ts","../src/env/browser.ts","../src/env/index.ts","../src/cache.ts","../src/constants.ts","../src/ClassRegistry.ts","../src/util/animation/AnimationRegistry.ts","../src/Observable.ts","../src/util/internals/removeFromArray.ts","../src/util/misc/cos.ts","../src/util/misc/sin.ts","../src/Point.ts","../src/Collection.ts","../src/CommonMethods.ts","../src/util/animation/AnimationFrameProvider.ts","../src/util/internals/uid.ts","../src/util/misc/dom.ts","../src/util/misc/radiansDegreesConversion.ts","../src/util/misc/matrix.ts","../src/util/misc/objectEnlive.ts","../src/util/misc/pick.ts","../src/color/color_map.ts","../src/color/util.ts","../src/color/Color.ts","../src/color/constants.ts","../src/util/misc/toFixed.ts","../src/util/misc/svgParsing.ts","../src/util/typeAssertions.ts","../src/util/dom_misc.ts","../src/canvas/DOMManagers/util.ts","../src/canvas/DOMManagers/StaticCanvasDOMManager.ts","../src/canvas/StaticCanvasOptions.ts","../src/canvas/StaticCanvas.ts","../src/util/dom_event.ts","../src/util/misc/boundingBoxFromPoints.ts","../src/util/misc/objectTransforms.ts","../src/util/misc/planeChange.ts","../src/controls/fireEvent.ts","../src/util/misc/resolveOrigin.ts","../src/controls/util.ts","../src/controls/drag.ts","../src/shapes/Object/FabricObjectSVGExportMixin.ts","../src/parser/getSvgRegex.ts","../src/parser/constants.ts","../src/util/misc/vectors.ts","../src/Shadow.ts","../src/util/misc/capValue.ts","../src/shapes/Object/defaultValues.ts","../src/util/animation/easing.ts","../src/util/animation/AnimationBase.ts","../src/util/animation/ValueAnimation.ts","../src/util/animation/ArrayAnimation.ts","../src/util/animation/ColorAnimation.ts","../src/util/animation/animate.ts","../src/Intersection.ts","../src/shapes/Object/ObjectGeometry.ts","../src/shapes/Object/Object.ts","../src/controls/wrapWithFireEvent.ts","../src/controls/wrapWithFixedAnchor.ts","../src/controls/changeWidth.ts","../src/controls/controlRendering.ts","../src/controls/Control.ts","../src/controls/rotate.ts","../src/controls/scale.ts","../src/controls/skew.ts","../src/controls/scaleSkew.ts","../src/controls/commonControls.ts","../src/shapes/Object/InteractiveObject.ts","../src/util/applyMixins.ts","../src/shapes/Object/FabricObject.ts","../src/util/misc/isTransparent.ts","../src/util/misc/projectStroke/StrokeProjectionsBase.ts","../src/util/misc/projectStroke/StrokeLineJoinProjections.ts","../src/util/misc/projectStroke/StrokeLineCapProjections.ts","../src/util/misc/projectStroke/index.ts","../src/util/internals/findRight.ts","../src/util/internals/cloneStyles.ts","../src/util/lang_string.ts","../src/util/misc/textStyles.ts","../src/parser/attributes.ts","../src/parser/selectorMatches.ts","../src/parser/elementMatchesRule.ts","../src/parser/doesSomeParentMatch.ts","../src/parser/normalizeAttr.ts","../src/util/internals/cleanupSvgAttribute.ts","../src/parser/parseTransformAttribute.ts","../src/parser/normalizeValue.ts","../src/parser/parseFontDeclaration.ts","../src/parser/parseStyleString.ts","../src/parser/parseStyleAttribute.ts","../src/parser/parseStyleObject.ts","../src/parser/setStrokeFillOpacity.ts","../src/parser/parseAttributes.ts","../src/parser/getGlobalStylesForElement.ts","../src/shapes/Rect.ts","../src/LayoutManager/constants.ts","../src/LayoutManager/LayoutStrategies/utils.ts","../src/LayoutManager/LayoutStrategies/LayoutStrategy.ts","../src/LayoutManager/LayoutStrategies/FitContentLayout.ts","../src/LayoutManager/LayoutManager.ts","../src/shapes/Group.ts","../src/util/misc/groupSVGElements.ts","../src/util/misc/findScaleTo.ts","../src/util/path/regex.ts","../src/util/path/index.ts","../src/util/dom_style.ts","../src/util/misc/mergeClipPaths.ts","../src/util/internals/getRandomInt.ts","../src/util/internals/dom_request.ts","../src/util/transform_matrix_removal.ts","../src/util/misc/rotatePoint.ts","../src/canvas/DOMManagers/CanvasDOMManager.ts","../src/canvas/SelectableCanvas.ts","../src/canvas/CanvasOptions.ts","../src/canvas/TextEditingManager.ts","../src/canvas/Canvas.ts","../src/gradient/constants.ts","../src/util/internals/ifNaN.ts","../src/parser/percent.ts","../src/gradient/parser/parseColorStops.ts","../src/gradient/parser/misc.ts","../src/gradient/parser/parseCoords.ts","../src/gradient/Gradient.ts","../src/Pattern/Pattern.ts","../src/brushes/BaseBrush.ts","../src/shapes/Path.ts","../src/brushes/PencilBrush.ts","../src/shapes/Circle.ts","../src/shapes/Line.ts","../src/shapes/Triangle.ts","../src/shapes/Ellipse.ts","../src/parser/parsePointsAttribute.ts","../src/shapes/Polyline.ts","../src/shapes/Polygon.ts","../src/shapes/Text/constants.ts","../src/shapes/Text/StyledText.ts","../src/shapes/Text/TextSVGExportMixin.ts","../src/shapes/Text/Text.ts","../src/shapes/IText/DraggableTextDelegate.ts","../src/shapes/IText/ITextBehavior.ts","../src/shapes/IText/ITextKeyBehavior.ts","../src/shapes/IText/ITextClickBehavior.ts","../src/shapes/IText/constants.ts","../src/shapes/IText/IText.ts","../src/shapes/Textbox.ts","../src/LayoutManager/LayoutStrategies/ClipPathLayout.ts","../src/LayoutManager/LayoutStrategies/FixedLayout.ts","../src/LayoutManager/ActiveSelectionLayoutManager.ts","../src/shapes/ActiveSelection.ts","../src/filters/Canvas2dFilterBackend.ts","../src/filters/WebGLFilterBackend.ts","../src/filters/FilterBackend.ts","../src/shapes/Image.ts","../src/parser/applyViewboxTransform.ts","../src/parser/getTagName.ts","../src/parser/hasInvalidAncestor.ts","../src/parser/getMultipleNodes.ts","../src/parser/recursivelyParseGradientsXlink.ts","../src/parser/getGradientDefs.ts","../src/parser/getCSSRules.ts","../src/parser/elements_parser.ts","../src/parser/parseSVGDocument.ts","../src/parser/parseUseDirectives.ts","../src/controls/polyControl.ts","../src/controls/pathControl.ts","../src/filters/utils.ts","../src/filters/shaders/baseFilter.ts","../src/filters/BaseFilter.ts","../src/filters/shaders/blendColor.ts","../src/filters/BlendColor.ts","../src/filters/shaders/blendImage.ts","../src/filters/BlendImage.ts","../src/filters/Blur.ts","../src/filters/shaders/blur.ts","../src/filters/Brightness.ts","../src/filters/shaders/brightness.ts","../src/filters/ColorMatrix.ts","../src/filters/shaders/colorMatrix.ts","../src/filters/ColorMatrixFilters.ts","../src/filters/Composed.ts","../src/filters/Contrast.ts","../src/filters/shaders/constrast.ts","../src/filters/shaders/convolute.ts","../src/filters/Convolute.ts","../src/filters/shaders/gamma.ts","../src/filters/Gamma.ts","../src/filters/shaders/grayscale.ts","../src/filters/Grayscale.ts","../src/filters/HueRotation.ts","../src/filters/Invert.ts","../src/filters/shaders/invert.ts","../src/filters/Noise.ts","../src/filters/shaders/noise.ts","../src/filters/Pixelate.ts","../src/filters/shaders/pixelate.ts","../src/filters/RemoveColor.ts","../src/filters/shaders/removeColor.ts","../src/filters/Resize.ts","../src/filters/Saturation.ts","../src/filters/shaders/saturation.ts","../src/filters/Vibrance.ts","../src/filters/shaders/vibrance.ts","../src/brushes/CircleBrush.ts","../src/brushes/PatternBrush.ts","../src/brushes/SprayBrush.ts","../src/parser/loadSVGFromString.ts","../src/parser/loadSVGFromURL.ts"],"sourcesContent":["export type TConfiguration = Partial<BaseConfiguration>;\n\nclass BaseConfiguration {\n  /**\n   * Browser-specific constant to adjust CanvasRenderingContext2D.shadowBlur value,\n   * which is unitless and not rendered equally across browsers.\n   *\n   * Values that work quite well (as of October 2017) are:\n   * - Chrome: 1.5\n   * - Edge: 1.75\n   * - Firefox: 0.9\n   * - Safari: 0.95\n   *\n   * @since 2.0.0\n   * @type Number\n   * @default 1\n   */\n  browserShadowBlurConstant = 1;\n\n  /**\n   * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\n   */\n  DPI = 96;\n\n  /**\n   * Device Pixel Ratio\n   * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n   */\n  devicePixelRatio =\n    typeof window !== 'undefined' ? window.devicePixelRatio : 1; // eslint-disable-line no-restricted-globals\n\n  /**\n   * Pixel limit for cache canvases. 1Mpx , 4Mpx should be fine.\n   * @since 1.7.14\n   * @type Number\n   * @default\n   */\n  perfLimitSizeTotal = 2097152;\n\n  /**\n   * Pixel limit for cache canvases width or height. IE fixes the maximum at 5000\n   * @since 1.7.14\n   * @type Number\n   * @default\n   */\n  maxCacheSideLimit = 4096;\n\n  /**\n   * Lowest pixel limit for cache canvases, set at 256PX\n   * @since 1.7.14\n   * @type Number\n   * @default\n   */\n  minCacheSideLimit = 256;\n\n  /**\n   * When 'true', style information is not retained when copy/pasting text, making\n   * pasted text use destination style.\n   * Defaults to 'false'.\n   * @type Boolean\n   * @default\n   * @deprecated\n   */\n  disableStyleCopyPaste = false;\n\n  /**\n   * Enable webgl for filtering picture is available\n   * A filtering backend will be initialized, this will both take memory and\n   * time since a default 2048x2048 canvas will be created for the gl context\n   * @since 2.0.0\n   * @type Boolean\n   * @default\n   */\n  enableGLFiltering = true;\n\n  /**\n   * if webgl is enabled and available, textureSize will determine the size\n   * of the canvas backend\n   *\n   * In order to support old hardware set to `2048` to avoid OOM\n   *\n   * @since 2.0.0\n   * @type Number\n   * @default\n   */\n  textureSize = 4096;\n\n  /**\n   * Skip performance testing of setupGLContext and force the use of putImageData that seems to be the one that works best on\n   * Chrome + old hardware. if your users are experiencing empty images after filtering you may try to force this to true\n   * this has to be set before instantiating the filtering backend ( before filtering the first image )\n   * @type Boolean\n   * @default false\n   */\n  forceGLPutImageData = false;\n\n  /**\n   * If disabled boundsOfCurveCache is not used. For apps that make heavy usage of pencil drawing probably disabling it is better\n   * With the standard behaviour of fabric to translate all curves in absolute commands and by not subtracting the starting point from\n   * the curve is very hard to hit any cache.\n   * Enable only if you know why it could be useful.\n   * Candidate for removal/simplification\n   * @default false\n   */\n  cachesBoundsOfCurve = false;\n\n  /**\n   * Map of font files\n   * Map<fontFamily, pathToFile> of font files\n   */\n  fontPaths: Record</** fontFamily */ string, /** pathToFile */ string> = {};\n\n  /**\n   * Defines the number of fraction digits to use when serializing object values.\n   * Used in exporting methods (`toObject`, `toJSON`, `toSVG`)\n   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\n   */\n  NUM_FRACTION_DIGITS = 4;\n}\n\nexport class Configuration extends BaseConfiguration {\n  constructor(config?: TConfiguration) {\n    super();\n    this.configure(config);\n  }\n\n  configure(config: TConfiguration = {}) {\n    Object.assign(this, config);\n  }\n\n  /**\n   * Map<fontFamily, pathToFile> of font files\n   */\n  addFonts(\n    paths: Record</** fontFamily */ string, /** pathToFile */ string> = {},\n  ) {\n    this.fontPaths = {\n      ...this.fontPaths,\n      ...paths,\n    };\n  }\n\n  removeFonts(fontFamilys: string[] = []) {\n    fontFamilys.forEach((fontFamily) => {\n      delete this.fontPaths[fontFamily];\n    });\n  }\n\n  clearFonts() {\n    this.fontPaths = {};\n  }\n\n  restoreDefaults<T extends BaseConfiguration>(keys?: (keyof T)[]) {\n    const defaults = new BaseConfiguration() as T;\n    const config =\n      keys?.reduce((acc, key) => {\n        acc[key] = defaults[key];\n        return acc;\n      }, {} as T) || defaults;\n    this.configure(config);\n  }\n}\n\nexport const config = new Configuration();\n","export const log = (\n  severity: 'log' | 'warn' | 'error',\n  ...optionalParams: any[]\n) =>\n  // eslint-disable-next-line no-restricted-syntax\n  console[severity]('fabric', ...optionalParams);\n\nexport class FabricError extends Error {\n  constructor(message?: string, options?: ErrorOptions) {\n    super(`fabric: ${message}`, options);\n  }\n}\n\nexport class SignalAbortedError extends FabricError {\n  constructor(context: string) {\n    super(`${context} 'options.signal' is in 'aborted' state`);\n  }\n}\n","export type GLPrecision = 'lowp' | 'mediump' | 'highp';\n\nexport abstract class GLProbe {\n  declare GLPrecision: GLPrecision | undefined;\n  abstract queryWebGL(canvas: HTMLCanvasElement): void;\n  abstract isSupported(textureSize: number): boolean;\n}\n","import { log } from '../../util/internals/console';\nimport { GLProbe } from './GLProbe';\nimport type { GLPrecision } from './GLProbe';\n\n/**\n * Lazy initialize WebGL constants\n */\nexport class WebGLProbe extends GLProbe {\n  declare maxTextureSize?: number;\n\n  /**\n   * Tests if webgl supports certain precision\n   * @param {WebGL} Canvas WebGL context to test on\n   * @param {GLPrecision} Precision to test can be any of following\n   * @returns {Boolean} Whether the user's browser WebGL supports given precision.\n   */\n  private testPrecision(\n    gl: WebGLRenderingContext,\n    precision: GLPrecision,\n  ): boolean {\n    const fragmentSource = `precision ${precision} float;\\nvoid main(){}`;\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    if (!fragmentShader) {\n      return false;\n    }\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    return !!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS);\n  }\n\n  /**\n   * query browser for WebGL\n   */\n  queryWebGL(canvas: HTMLCanvasElement) {\n    const gl = canvas.getContext('webgl');\n    if (gl) {\n      this.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n      this.GLPrecision = (['highp', 'mediump', 'lowp'] as const).find(\n        (precision) => this.testPrecision(gl, precision),\n      );\n      gl.getExtension('WEBGL_lose_context')!.loseContext();\n      log('log', `WebGL: max texture size ${this.maxTextureSize}`);\n    }\n  }\n\n  isSupported(textureSize: number) {\n    return !!this.maxTextureSize && this.maxTextureSize >= textureSize;\n  }\n}\n","/* eslint-disable no-restricted-globals */\nimport { WebGLProbe } from '../filters/GLProbes/WebGLProbe';\nimport type { TCopyPasteData, TFabricEnv } from './types';\n\nconst copyPasteData: TCopyPasteData = {};\n\nexport const getEnv = (): TFabricEnv => {\n  return {\n    document,\n    window,\n    isTouchSupported:\n      'ontouchstart' in window ||\n      'ontouchstart' in document ||\n      (window && window.navigator && window.navigator.maxTouchPoints > 0),\n    WebGLProbe: new WebGLProbe(),\n    dispose() {\n      // noop\n    },\n    copyPasteData,\n  };\n};\n","/**\n * This file is consumed by fabric.\n * The `./node` and `./browser` files define the env variable that is used by this module.\n * The `./browser` module is defined to be the default env and doesn't set the env at all.\n * This is done in order to support isomorphic usage for browser and node applications\n * since window and document aren't defined at time of import in SSR, we can't set env so we avoid it by deferring to the default env.\n */\n\nimport { config } from '../config';\nimport { getEnv as getBrowserEnv } from './browser';\nimport type { TFabricEnv } from './types';\nimport type { DOMWindow } from 'jsdom';\n\nlet env: TFabricEnv;\n\n/**\n * Sets the environment variables used by fabric.\\\n * This is exposed for special cases, such as configuring a test environment, and should be used with care.\n *\n * **CAUTION**: Must be called before using the package.\n *\n * @example\n * <caption>Passing `window` and `document` objects to fabric (in case they are mocked or something)</caption>\n * import { getEnv, setEnv } from 'fabric';\n * // we want fabric to use the `window` and `document` objects exposed by the environment we are running in.\n * setEnv({ ...getEnv(), window, document });\n * // done with setup, using fabric is now safe\n */\nexport const setEnv = (value: TFabricEnv) => {\n  env = value;\n};\n\n/**\n * In order to support SSR we **MUST** access the browser env only after the window has loaded\n */\nexport const getEnv = () => env || (env = getBrowserEnv());\n\nexport const getFabricDocument = (): Document => getEnv().document;\n\nexport const getFabricWindow = (): (Window & typeof globalThis) | DOMWindow =>\n  getEnv().window;\n\n/**\n * @returns the config value if defined, fallbacks to the environment value\n */\nexport const getDevicePixelRatio = () =>\n  Math.max(config.devicePixelRatio ?? getFabricWindow().devicePixelRatio, 1);\n","import { config } from './config';\nimport type { TRectBounds } from './typedefs';\n\nexport class Cache {\n  /**\n   * Cache of widths of chars in text rendering.\n   */\n  charWidthsCache: Record<\n    /** fontFamily */ string,\n    Record<\n      /** fontStyleCacheKey */ string,\n      Record</** char */ string, /** width */ number>\n    >\n  > = {};\n\n  /**\n   * @return {Object} reference to cache\n   */\n  getFontCache({\n    fontFamily,\n    fontStyle,\n    fontWeight,\n  }: {\n    fontFamily: string;\n    fontStyle: string;\n    fontWeight: string | number;\n  }) {\n    fontFamily = fontFamily.toLowerCase();\n    if (!this.charWidthsCache[fontFamily]) {\n      this.charWidthsCache[fontFamily] = {};\n    }\n    const fontCache = this.charWidthsCache[fontFamily];\n    const cacheKey = `${fontStyle.toLowerCase()}_${(\n      fontWeight + ''\n    ).toLowerCase()}`;\n    if (!fontCache[cacheKey]) {\n      fontCache[cacheKey] = {};\n    }\n    return fontCache[cacheKey];\n  }\n\n  /**\n   * Clear char widths cache for the given font family or all the cache if no\n   * fontFamily is specified.\n   * Use it if you know you are loading fonts in a lazy way and you are not waiting\n   * for custom fonts to load properly when adding text objects to the canvas.\n   * If a text object is added when its own font is not loaded yet, you will get wrong\n   * measurement and so wrong bounding boxes.\n   * After the font cache is cleared, either change the textObject text content or call\n   * initDimensions() to trigger a recalculation\n   * @param {String} [fontFamily] font family to clear\n   */\n  clearFontCache(fontFamily?: string) {\n    fontFamily = (fontFamily || '').toLowerCase();\n    if (!fontFamily) {\n      this.charWidthsCache = {};\n    } else if (this.charWidthsCache[fontFamily]) {\n      delete this.charWidthsCache[fontFamily];\n    }\n  }\n\n  /**\n   * Given current aspect ratio, determines the max width and height that can\n   * respect the total allowed area for the cache.\n   * @param {number} ar aspect ratio\n   * @return {number[]} Limited dimensions X and Y\n   */\n  limitDimsByArea(ar: number) {\n    const { perfLimitSizeTotal } = config;\n    const roughWidth = Math.sqrt(perfLimitSizeTotal * ar);\n    // we are not returning a point on purpose, to avoid circular dependencies\n    // this is an internal utility\n    return [\n      Math.floor(roughWidth),\n      Math.floor(perfLimitSizeTotal / roughWidth),\n    ];\n  }\n\n  /**\n   * This object keeps the results of the boundsOfCurve calculation mapped by the joined arguments necessary to calculate it.\n   * It does speed up calculation, if you parse and add always the same paths, but in case of heavy usage of freedrawing\n   * you do not get any speed benefit and you get a big object in memory.\n   * The object was a private variable before, while now is appended to the lib so that you have access to it and you\n   * can eventually clear it.\n   * It was an internal variable, is accessible since version 2.3.4\n   */\n  boundsOfCurveCache: Record<string, TRectBounds> = {};\n}\n\nexport const cache = new Cache();\n","import type { TMat2D } from './typedefs';\n// use this syntax so babel plugin see this import here\nimport { version } from '../package.json';\n\nexport const VERSION = version;\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport function noop() {}\n\nexport const halfPI = Math.PI / 2;\nexport const twoMathPi = Math.PI * 2;\nexport const PiBy180 = Math.PI / 180;\n\nexport const iMatrix = Object.freeze([1, 0, 0, 1, 0, 0]) as TMat2D;\nexport const DEFAULT_SVG_FONT_SIZE = 16;\nexport const ALIASING_LIMIT = 2;\n\n/* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\nexport const kRect = 1 - 0.5522847498;\n\nexport const CENTER = 'center';\nexport const LEFT = 'left';\nexport const TOP = 'top';\nexport const BOTTOM = 'bottom';\nexport const RIGHT = 'right';\nexport const NONE = 'none';\n\nexport const reNewline = /\\r?\\n/;\n\nexport const MOVING = 'moving';\nexport const SCALING = 'scaling';\nexport const ROTATING = 'rotating';\nexport const ROTATE = 'rotate';\nexport const SKEWING = 'skewing';\nexport const RESIZING = 'resizing';\nexport const MODIFY_POLY = 'modifyPoly';\nexport const MODIFY_PATH = 'modifyPath';\nexport const CHANGED = 'changed';\nexport const SCALE = 'scale';\nexport const SCALE_X = 'scaleX';\nexport const SCALE_Y = 'scaleY';\nexport const SKEW_X = 'skewX';\nexport const SKEW_Y = 'skewY';\nexport const FILL = 'fill';\nexport const STROKE = 'stroke';\nexport const MODIFIED = 'modified';\n","import { FabricError } from './util/internals/console';\n\n/*\n * This Map connects the objects type value with their\n * class implementation. It used from any object to understand which are\n * the classes to enlive when requesting a object.type = 'path' for example.\n * Objects uses it for clipPath, Canvas uses it for everything.\n * This is necessary for generic code to run and enlive instances from serialized representation.\n * You can customize which classes get enlived from SVG parsing using this classRegistry.\n * The Registry start empty and gets filled in depending which files you import.\n * If you want to be able to parse arbitrary SVGs or JSON representation of canvases, coming from\n * different sources you will need to import all fabric because you may need all classes.\n */\n\nexport const JSON = 'json';\nexport const SVG = 'svg';\n\nexport class ClassRegistry {\n  declare [JSON]: Map<string, any>;\n  declare [SVG]: Map<string, any>;\n\n  constructor() {\n    this[JSON] = new Map();\n    this[SVG] = new Map();\n  }\n\n  has(classType: string): boolean {\n    return this[JSON].has(classType);\n  }\n\n  getClass<T>(classType: string): T {\n    const constructor = this[JSON].get(classType);\n    if (!constructor) {\n      throw new FabricError(`No class registered for ${classType}`);\n    }\n    return constructor;\n  }\n\n  setClass(classConstructor: any, classType?: string) {\n    if (classType) {\n      this[JSON].set(classType, classConstructor);\n    } else {\n      this[JSON].set(classConstructor.type, classConstructor);\n      // legacy\n      // @TODO: needs to be removed in fabric 7 or 8\n      this[JSON].set(classConstructor.type.toLowerCase(), classConstructor);\n    }\n  }\n\n  getSVGClass(SVGTagName: string): any {\n    return this[SVG].get(SVGTagName);\n  }\n\n  setSVGClass(classConstructor: any, SVGTagName?: string) {\n    this[SVG].set(\n      SVGTagName ?? classConstructor.type.toLowerCase(),\n      classConstructor,\n    );\n  }\n}\n\nexport const classRegistry = new ClassRegistry();\n","import type { StaticCanvas } from '../../canvas/StaticCanvas';\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\nimport type { AnimationBase } from './AnimationBase';\n\n/**\n * Array holding all running animations\n */\nclass AnimationRegistry extends Array<AnimationBase> {\n  /**\n   * Remove a single animation using an animation context\n   * @param {AnimationBase} context\n   */\n  remove(context: AnimationBase) {\n    const index = this.indexOf(context);\n    index > -1 && this.splice(index, 1);\n  }\n\n  /**\n   * Cancel all running animations on the next frame\n   */\n  cancelAll() {\n    const animations = this.splice(0);\n    animations.forEach((animation) => animation.abort());\n    return animations;\n  }\n\n  /**\n   * Cancel all running animations attached to a canvas on the next frame\n   * @param {StaticCanvas} canvas\n   */\n  cancelByCanvas(canvas: StaticCanvas) {\n    if (!canvas) {\n      return [];\n    }\n    const animations = this.filter(\n      (animation) =>\n        animation.target === canvas ||\n        (typeof animation.target === 'object' &&\n          (animation.target as FabricObject)?.canvas === canvas),\n    );\n    animations.forEach((animation) => animation.abort());\n    return animations;\n  }\n\n  /**\n   * Cancel all running animations for target on the next frame\n   * @param target\n   */\n  cancelByTarget(target: AnimationBase['target']) {\n    if (!target) {\n      return [];\n    }\n    const animations = this.filter((animation) => animation.target === target);\n    animations.forEach((animation) => animation.abort());\n    return animations;\n  }\n}\n\nexport const runningAnimations = new AnimationRegistry();\n","export type TEventCallback<T = any> = (options: T) => any;\n\ntype EventRegistryObject<E> = {\n  [K in keyof E]?: TEventCallback<E[K]>;\n};\n\n/**\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\n * @see {@link http://fabricjs.com/events|Events demo}\n */\nexport class Observable<EventSpec> {\n  private __eventListeners: Record<keyof EventSpec, TEventCallback[]> =\n    {} as Record<keyof EventSpec, TEventCallback[]>;\n\n  /**\n   * Observes specified event\n   * @alias on\n   * @param {string} eventName Event name (eg. 'after:render')\n   * @param {EventRegistryObject} handlers key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n   * @return {Function} disposer\n   */\n  on<K extends keyof EventSpec, E extends EventSpec[K]>(\n    eventName: K,\n    handler: TEventCallback<E>,\n  ): VoidFunction;\n  on(handlers: EventRegistryObject<EventSpec>): VoidFunction;\n  on<K extends keyof EventSpec, E extends EventSpec[K]>(\n    arg0: K | EventRegistryObject<EventSpec>,\n    handler?: TEventCallback<E>,\n  ): VoidFunction {\n    if (!this.__eventListeners) {\n      this.__eventListeners = {} as Record<keyof EventSpec, TEventCallback[]>;\n    }\n    if (typeof arg0 === 'object') {\n      // one object with key/value pairs was passed\n      Object.entries(arg0).forEach(([eventName, handler]) => {\n        this.on(eventName as K, handler as TEventCallback);\n      });\n      return () => this.off(arg0);\n    } else if (handler) {\n      const eventName = arg0;\n      if (!this.__eventListeners[eventName]) {\n        this.__eventListeners[eventName] = [];\n      }\n      this.__eventListeners[eventName].push(handler);\n      return () => this.off(eventName, handler);\n    } else {\n      // noop\n      return () => false;\n    }\n  }\n\n  /**\n   * Observes specified event **once**\n   * @alias once\n   * @param {string} eventName Event name (eg. 'after:render')\n   * @param {EventRegistryObject} handlers key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n   * @return {Function} disposer\n   */\n  once<K extends keyof EventSpec, E extends EventSpec[K]>(\n    eventName: K,\n    handler: TEventCallback<E>,\n  ): VoidFunction;\n  once(handlers: EventRegistryObject<EventSpec>): VoidFunction;\n  once<K extends keyof EventSpec, E extends EventSpec[K]>(\n    arg0: K | EventRegistryObject<EventSpec>,\n    handler?: TEventCallback<E>,\n  ): VoidFunction {\n    if (typeof arg0 === 'object') {\n      // one object with key/value pairs was passed\n      const disposers: VoidFunction[] = [];\n      Object.entries(arg0).forEach(([eventName, handler]) => {\n        disposers.push(this.once(eventName as K, handler as TEventCallback));\n      });\n      return () => disposers.forEach((d) => d());\n    } else if (handler) {\n      const disposer = this.on<K, E>(\n        arg0,\n        function onceHandler(this: Observable<EventSpec>, ...args) {\n          handler.call(this, ...args);\n          disposer();\n        },\n      );\n      return disposer;\n    } else {\n      // noop\n      return () => false;\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} eventName\n   * @param {Function} [handler]\n   */\n  private _removeEventListener<K extends keyof EventSpec>(\n    eventName: K,\n    handler?: TEventCallback,\n  ) {\n    if (!this.__eventListeners[eventName]) {\n      return;\n    }\n\n    if (handler) {\n      const eventListener = this.__eventListeners[eventName];\n      const index = eventListener.indexOf(handler);\n      index > -1 && eventListener.splice(index, 1);\n    } else {\n      this.__eventListeners[eventName] = [];\n    }\n  }\n\n  /**\n   * Unsubscribe all event listeners for eventname.\n   * Do not use this pattern. You could kill internal fabricJS events.\n   * We know we should have protected events for internal flows, but we don't have yet\n   * @deprecated\n   * @param {string} eventName event name (eg. 'after:render')\n   */\n  off<K extends keyof EventSpec>(eventName: K): void;\n  /**\n   * unsubscribe an event listener\n   * @param {string} eventName event name (eg. 'after:render')\n   * @param {TEventCallback} handler event listener to unsubscribe\n   */\n  off<K extends keyof EventSpec>(eventName: K, handler: TEventCallback): void;\n  /**\n   * unsubscribe event listeners\n   * @param handlers handlers key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   */\n  off(handlers: EventRegistryObject<EventSpec>): void;\n  /**\n   * unsubscribe all event listeners\n   */\n  off(): void;\n  off<K extends keyof EventSpec>(\n    arg0?: K | EventRegistryObject<EventSpec>,\n    handler?: TEventCallback,\n  ) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    // remove all key/value pairs (event name -> event handler)\n    if (typeof arg0 === 'undefined') {\n      for (const eventName in this.__eventListeners) {\n        this._removeEventListener(eventName);\n      }\n    }\n    // one object with key/value pairs was passed\n    else if (typeof arg0 === 'object') {\n      Object.entries(arg0).forEach(([eventName, handler]) => {\n        this._removeEventListener(eventName as K, handler as TEventCallback);\n      });\n    } else {\n      this._removeEventListener(arg0, handler);\n    }\n  }\n\n  /**\n   * Fires event with an optional options object\n   * @param {String} eventName Event name to fire\n   * @param {Object} [options] Options object\n   */\n  fire<K extends keyof EventSpec>(eventName: K, options?: EventSpec[K]) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    const listenersForEvent = this.__eventListeners[eventName]?.concat();\n    if (listenersForEvent) {\n      for (let i = 0; i < listenersForEvent.length; i++) {\n        listenersForEvent[i].call(this, options || {});\n      }\n    }\n  }\n}\n","/**\n * Removes value from an array.\n * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\n * @param {Array} array\n * @param {*} value\n * @return {Array} original array\n */\nexport const removeFromArray = <T>(array: T[], value: T): T[] => {\n  const idx = array.indexOf(value);\n  if (idx !== -1) {\n    array.splice(idx, 1);\n  }\n  return array;\n};\n","import type { TRadian } from '../../typedefs';\nimport { halfPI } from '../../constants';\n\n/**\n * Calculate the cos of an angle, avoiding returning floats for known results\n * This function is here just to avoid getting 0.999999999999999 when dealing\n * with numbers that are really 1 or 0.\n * @param {TRadian} angle the angle\n * @return {Number} the cosin value for angle.\n */\nexport const cos = (angle: TRadian): number => {\n  if (angle === 0) {\n    return 1;\n  }\n  const angleSlice = Math.abs(angle) / halfPI;\n  switch (angleSlice) {\n    case 1:\n    case 3:\n      return 0;\n    case 2:\n      return -1;\n  }\n  return Math.cos(angle);\n};\n","import type { TRadian } from '../../typedefs';\nimport { halfPI } from '../../constants';\n\n/**\n * Calculate the cos of an angle, avoiding returning floats for known results\n * This function is here just to avoid getting 0.999999999999999 when dealing\n * with numbers that are really 1 or 0.\n * @param {TRadian} angle the angle\n * @return {Number} the sin value for angle.\n */\nexport const sin = (angle: TRadian): number => {\n  if (angle === 0) {\n    return 0;\n  }\n  const angleSlice = angle / halfPI;\n  const value = Math.sign(angle);\n  switch (angleSlice) {\n    case 1:\n      return value;\n    case 2:\n      return 0;\n    case 3:\n      return -value;\n  }\n  return Math.sin(angle);\n};\n","import type { TMat2D, TRadian } from './typedefs';\nimport { cos } from './util/misc/cos';\nimport { sin } from './util/misc/sin';\n\nexport interface XY {\n  x: number;\n  y: number;\n}\n\n/**\n * Adaptation of work of Kevin Lindsey(kevin@kevlindev.com)\n */\nexport class Point implements XY {\n  declare x: number;\n\n  declare y: number;\n\n  constructor();\n  constructor(x: number, y: number);\n  constructor(point?: XY);\n  constructor(arg0: number | XY = 0, y = 0) {\n    if (typeof arg0 === 'object') {\n      this.x = arg0.x;\n      this.y = arg0.y;\n    } else {\n      this.x = arg0;\n      this.y = y;\n    }\n  }\n\n  /**\n   * Adds another point to this one and returns another one\n   * @param {XY} that\n   * @return {Point} new Point instance with added values\n   */\n  add(that: XY): Point {\n    return new Point(this.x + that.x, this.y + that.y);\n  }\n\n  /**\n   * Adds another point to this one\n   * @param {XY} that\n   * @return {Point} thisArg\n   * @chainable\n   * @deprecated\n   */\n  addEquals(that: XY): Point {\n    this.x += that.x;\n    this.y += that.y;\n    return this;\n  }\n\n  /**\n   * Adds value to this point and returns a new one\n   * @param {Number} scalar\n   * @return {Point} new Point with added value\n   */\n  scalarAdd(scalar: number): Point {\n    return new Point(this.x + scalar, this.y + scalar);\n  }\n\n  /**\n   * Adds value to this point\n   * @param {Number} scalar\n   * @return {Point} thisArg\n   * @chainable\n   * @deprecated\n   */\n  scalarAddEquals(scalar: number): Point {\n    this.x += scalar;\n    this.y += scalar;\n    return this;\n  }\n\n  /**\n   * Subtracts another point from this point and returns a new one\n   * @param {XY} that\n   * @return {Point} new Point object with subtracted values\n   */\n  subtract(that: XY): Point {\n    return new Point(this.x - that.x, this.y - that.y);\n  }\n\n  /**\n   * Subtracts another point from this point\n   * @param {XY} that\n   * @return {Point} thisArg\n   * @chainable\n   * @deprecated\n   */\n  subtractEquals(that: XY): Point {\n    this.x -= that.x;\n    this.y -= that.y;\n    return this;\n  }\n\n  /**\n   * Subtracts value from this point and returns a new one\n   * @param {Number} scalar\n   * @return {Point}\n   */\n  scalarSubtract(scalar: number): Point {\n    return new Point(this.x - scalar, this.y - scalar);\n  }\n\n  /**\n   * Subtracts value from this point\n   * @param {Number} scalar\n   * @return {Point} thisArg\n   * @chainable\n   * @deprecated\n   */\n  scalarSubtractEquals(scalar: number): Point {\n    this.x -= scalar;\n    this.y -= scalar;\n    return this;\n  }\n\n  /**\n   * Multiplies this point by another value and returns a new one\n   * @param {XY} that\n   * @return {Point}\n   */\n  multiply(that: XY): Point {\n    return new Point(this.x * that.x, this.y * that.y);\n  }\n\n  /**\n   * Multiplies this point by a value and returns a new one\n   * @param {Number} scalar\n   * @return {Point}\n   */\n  scalarMultiply(scalar: number): Point {\n    return new Point(this.x * scalar, this.y * scalar);\n  }\n\n  /**\n   * Multiplies this point by a value\n   * @param {Number} scalar\n   * @return {Point} thisArg\n   * @chainable\n   * @deprecated\n   */\n  scalarMultiplyEquals(scalar: number): Point {\n    this.x *= scalar;\n    this.y *= scalar;\n    return this;\n  }\n\n  /**\n   * Divides this point by another and returns a new one\n   * @param {XY} that\n   * @return {Point}\n   */\n  divide(that: XY): Point {\n    return new Point(this.x / that.x, this.y / that.y);\n  }\n\n  /**\n   * Divides this point by a value and returns a new one\n   * @param {Number} scalar\n   * @return {Point}\n   */\n  scalarDivide(scalar: number): Point {\n    return new Point(this.x / scalar, this.y / scalar);\n  }\n\n  /**\n   * Divides this point by a value\n   * @param {Number} scalar\n   * @return {Point} thisArg\n   * @chainable\n   * @deprecated\n   */\n  scalarDivideEquals(scalar: number): Point {\n    this.x /= scalar;\n    this.y /= scalar;\n    return this;\n  }\n\n  /**\n   * Returns true if this point is equal to another one\n   * @param {XY} that\n   * @return {Boolean}\n   */\n  eq(that: XY): boolean {\n    return this.x === that.x && this.y === that.y;\n  }\n\n  /**\n   * Returns true if this point is less than another one\n   * @param {XY} that\n   * @return {Boolean}\n   */\n  lt(that: XY): boolean {\n    return this.x < that.x && this.y < that.y;\n  }\n\n  /**\n   * Returns true if this point is less than or equal to another one\n   * @param {XY} that\n   * @return {Boolean}\n   */\n  lte(that: XY): boolean {\n    return this.x <= that.x && this.y <= that.y;\n  }\n\n  /**\n\n   * Returns true if this point is greater another one\n   * @param {XY} that\n   * @return {Boolean}\n   */\n  gt(that: XY): boolean {\n    return this.x > that.x && this.y > that.y;\n  }\n\n  /**\n   * Returns true if this point is greater than or equal to another one\n   * @param {XY} that\n   * @return {Boolean}\n   */\n  gte(that: XY): boolean {\n    return this.x >= that.x && this.y >= that.y;\n  }\n\n  /**\n   * Returns new point which is the result of linear interpolation with this one and another one\n   * @param {XY} that\n   * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\n   * @return {Point}\n   */\n  lerp(that: XY, t = 0.5): Point {\n    t = Math.max(Math.min(1, t), 0);\n    return new Point(\n      this.x + (that.x - this.x) * t,\n      this.y + (that.y - this.y) * t,\n    );\n  }\n\n  /**\n   * Returns distance from this point and another one\n   * @param {XY} that\n   * @return {Number}\n   */\n  distanceFrom(that: XY): number {\n    const dx = this.x - that.x,\n      dy = this.y - that.y;\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n\n  /**\n   * Returns the point between this point and another one\n   * @param {XY} that\n   * @return {Point}\n   */\n  midPointFrom(that: XY): Point {\n    return this.lerp(that);\n  }\n\n  /**\n   * Returns a new point which is the min of this and another one\n   * @param {XY} that\n   * @return {Point}\n   */\n  min(that: XY): Point {\n    return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n  }\n\n  /**\n   * Returns a new point which is the max of this and another one\n   * @param {XY} that\n   * @return {Point}\n   */\n  max(that: XY): Point {\n    return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n  }\n\n  /**\n   * Returns string representation of this point\n   * @return {String}\n   */\n  toString(): string {\n    return `${this.x},${this.y}`;\n  }\n\n  /**\n   * Sets x/y of this point\n   * @param {Number} x\n   * @param {Number} y\n   * @chainable\n   */\n  setXY(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n\n  /**\n   * Sets x of this point\n   * @param {Number} x\n   * @chainable\n   */\n  setX(x: number) {\n    this.x = x;\n    return this;\n  }\n\n  /**\n   * Sets y of this point\n   * @param {Number} y\n   * @chainable\n   */\n  setY(y: number) {\n    this.y = y;\n    return this;\n  }\n\n  /**\n   * Sets x/y of this point from another point\n   * @param {XY} that\n   * @chainable\n   */\n  setFromPoint(that: XY) {\n    this.x = that.x;\n    this.y = that.y;\n    return this;\n  }\n\n  /**\n   * Swaps x/y of this point and another point\n   * @param {XY} that\n   */\n  swap(that: XY) {\n    const x = this.x,\n      y = this.y;\n    this.x = that.x;\n    this.y = that.y;\n    that.x = x;\n    that.y = y;\n  }\n\n  /**\n   * return a cloned instance of the point\n   * @return {Point}\n   */\n  clone(): Point {\n    return new Point(this.x, this.y);\n  }\n\n  /**\n   * Rotates `point` around `origin` with `radians`\n   * @static\n   * @memberOf fabric.util\n   * @param {XY} origin The origin of the rotation\n   * @param {TRadian} radians The radians of the angle for the rotation\n   * @return {Point} The new rotated point\n   */\n  rotate(radians: TRadian, origin: XY = ZERO): Point {\n    // TODO benchmark and verify the add and subtract how much cost\n    // and then in case early return if no origin is passed\n    const sinus = sin(radians),\n      cosinus = cos(radians);\n    const p = this.subtract(origin);\n    const rotated = new Point(\n      p.x * cosinus - p.y * sinus,\n      p.x * sinus + p.y * cosinus,\n    );\n    return rotated.add(origin);\n  }\n\n  /**\n   * Apply transform t to point p\n   * @static\n   * @memberOf fabric.util\n   * @param  {TMat2D} t The transform\n   * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n   * @return {Point} The transformed point\n   */\n  transform(t: TMat2D, ignoreOffset = false): Point {\n    return new Point(\n      t[0] * this.x + t[2] * this.y + (ignoreOffset ? 0 : t[4]),\n      t[1] * this.x + t[3] * this.y + (ignoreOffset ? 0 : t[5]),\n    );\n  }\n}\n\nexport const ZERO = new Point(0, 0);\n","import type { Constructor, TBBox } from './typedefs';\nimport { removeFromArray } from './util/internals/removeFromArray';\nimport { Point } from './Point';\nimport type { ActiveSelection } from './shapes/ActiveSelection';\nimport type { Group } from './shapes/Group';\nimport type { InteractiveFabricObject } from './shapes/Object/InteractiveObject';\nimport type { FabricObject } from './shapes/Object/FabricObject';\n\nexport const isCollection = (\n  fabricObject?: FabricObject,\n): fabricObject is Group | ActiveSelection => {\n  return !!fabricObject && Array.isArray((fabricObject as Group)._objects);\n};\n\nexport function createCollectionMixin<TBase extends Constructor>(Base: TBase) {\n  class Collection extends Base {\n    /**\n     * @type {FabricObject[]}\n     * @TODO needs to end up in the constructor too\n     */\n    _objects: FabricObject[] = [];\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _onObjectAdded(object: FabricObject) {\n      // subclasses should override this method\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _onObjectRemoved(object: FabricObject) {\n      // subclasses should override this method\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _onStackOrderChanged(object: FabricObject) {\n      // subclasses should override this method\n    }\n\n    /**\n     * Adds objects to collection\n     * Objects should be instances of (or inherit from) FabricObject\n     * @param {...FabricObject[]} objects to add\n     * @returns {number} new array length\n     */\n    add(...objects: FabricObject[]): number {\n      const size = this._objects.push(...objects);\n      objects.forEach((object) => this._onObjectAdded(object));\n      return size;\n    }\n\n    /**\n     * Inserts an object into collection at specified index\n     * @param {number} index Index to insert object at\n     * @param {...FabricObject[]} objects Object(s) to insert\n     * @returns {number} new array length\n     */\n    insertAt(index: number, ...objects: FabricObject[]) {\n      this._objects.splice(index, 0, ...objects);\n      objects.forEach((object) => this._onObjectAdded(object));\n      return this._objects.length;\n    }\n\n    /**\n     * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n     * @private\n     * @param {...FabricObject[]} objects objects to remove\n     * @returns {FabricObject[]} removed objects\n     */\n    remove(...objects: FabricObject[]) {\n      const array = this._objects,\n        removed: FabricObject[] = [];\n      objects.forEach((object) => {\n        const index = array.indexOf(object);\n        // only call onObjectRemoved if an object was actually removed\n        if (index !== -1) {\n          array.splice(index, 1);\n          removed.push(object);\n          this._onObjectRemoved(object);\n        }\n      });\n      return removed;\n    }\n\n    /**\n     * Executes given function for each object in this group\n     * A simple shortcut for getObjects().forEach, before es6 was more complicated,\n     * now is just a shortcut.\n     * @param {Function} callback\n     *                   Callback invoked with current object as first argument,\n     *                   index - as second and an array of all objects - as third.\n     */\n    forEachObject(\n      callback: (\n        object: FabricObject,\n        index: number,\n        array: FabricObject[],\n      ) => any,\n    ) {\n      this.getObjects().forEach((object, index, objects) =>\n        callback(object, index, objects),\n      );\n    }\n\n    /**\n     * Returns an array of children objects of this instance\n     * @param {...String} [types] When specified, only objects of these types are returned\n     * @return {Array}\n     */\n    getObjects(...types: string[]) {\n      if (types.length === 0) {\n        return [...this._objects];\n      }\n      return this._objects.filter((o) => o.isType(...types));\n    }\n\n    /**\n     * Returns object at specified index\n     * @param {Number} index\n     * @return {Object} object at index\n     */\n    item(index: number) {\n      return this._objects[index];\n    }\n\n    /**\n     * Returns true if collection contains no objects\n     * @return {Boolean} true if collection is empty\n     */\n    isEmpty() {\n      return this._objects.length === 0;\n    }\n\n    /**\n     * Returns a size of a collection (i.e: length of an array containing its objects)\n     * @return {Number} Collection size\n     */\n    size() {\n      return this._objects.length;\n    }\n\n    /**\n     * Returns true if collection contains an object.\\\n     * **Prefer using {@link FabricObject#isDescendantOf} for performance reasons**\n     * instead of `a.contains(b)` use `b.isDescendantOf(a)`\n     * @param {Object} object Object to check against\n     * @param {Boolean} [deep=false] `true` to check all descendants, `false` to check only `_objects`\n     * @return {Boolean} `true` if collection contains an object\n     */\n    contains(object: FabricObject, deep?: boolean): boolean {\n      if (this._objects.includes(object)) {\n        return true;\n      } else if (deep) {\n        return this._objects.some(\n          (obj) =>\n            obj instanceof Collection &&\n            (obj as unknown as Collection).contains(object, true),\n        );\n      }\n      return false;\n    }\n\n    /**\n     * Returns number representation of a collection complexity\n     * @return {Number} complexity\n     */\n    complexity() {\n      return this._objects.reduce((memo, current) => {\n        memo += current.complexity ? current.complexity() : 0;\n        return memo;\n      }, 0);\n    }\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the bottom of the stack of drawn objects\n     * @param {fabric.Object} object Object to send to back\n     * @returns {boolean} true if change occurred\n     */\n    sendObjectToBack(object: FabricObject) {\n      if (!object || object === this._objects[0]) {\n        return false;\n      }\n      removeFromArray(this._objects, object);\n      this._objects.unshift(object);\n      this._onStackOrderChanged(object);\n      return true;\n    }\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the top of the stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @returns {boolean} true if change occurred\n     */\n    bringObjectToFront(object: FabricObject) {\n      if (!object || object === this._objects[this._objects.length - 1]) {\n        return false;\n      }\n      removeFromArray(this._objects, object);\n      this._objects.push(object);\n      this._onStackOrderChanged(object);\n      return true;\n    }\n\n    /**\n     * Moves an object or a selection down in stack of drawn objects\n     * An optional parameter, `intersecting` allows to move the object in behind\n     * the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {boolean} [intersecting] If `true`, send object behind next lower intersecting object\n     * @returns {boolean} true if change occurred\n     */\n    sendObjectBackwards(object: FabricObject, intersecting?: boolean) {\n      if (!object) {\n        return false;\n      }\n      const idx = this._objects.indexOf(object);\n      if (idx !== 0) {\n        // if object is not on the bottom of stack\n        const newIdx = this.findNewLowerIndex(object, idx, intersecting);\n        removeFromArray(this._objects, object);\n        this._objects.splice(newIdx, 0, object);\n        this._onStackOrderChanged(object);\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Moves an object or a selection up in stack of drawn objects\n     * An optional parameter, intersecting allows to move the object in front\n     * of the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n     * @returns {boolean} true if change occurred\n     */\n    bringObjectForward(object: FabricObject, intersecting?: boolean) {\n      if (!object) {\n        return false;\n      }\n      const idx = this._objects.indexOf(object);\n      if (idx !== this._objects.length - 1) {\n        // if object is not on top of stack (last item in an array)\n        const newIdx = this.findNewUpperIndex(object, idx, intersecting);\n        removeFromArray(this._objects, object);\n        this._objects.splice(newIdx, 0, object);\n        this._onStackOrderChanged(object);\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Moves an object to specified level in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {number} index Position to move to\n     * @returns {boolean} true if change occurred\n     */\n    moveObjectTo(object: FabricObject, index: number) {\n      if (object === this._objects[index]) {\n        return false;\n      }\n      removeFromArray(this._objects, object);\n      this._objects.splice(index, 0, object);\n      this._onStackOrderChanged(object);\n      return true;\n    }\n\n    findNewLowerIndex(\n      object: FabricObject,\n      idx: number,\n      intersecting?: boolean,\n    ) {\n      let newIdx;\n\n      if (intersecting) {\n        newIdx = idx;\n        // traverse down the stack looking for the nearest intersecting object\n        for (let i = idx - 1; i >= 0; --i) {\n          if (object.isOverlapping(this._objects[i])) {\n            newIdx = i;\n            break;\n          }\n        }\n      } else {\n        newIdx = idx - 1;\n      }\n\n      return newIdx;\n    }\n\n    findNewUpperIndex(\n      object: FabricObject,\n      idx: number,\n      intersecting?: boolean,\n    ) {\n      let newIdx;\n\n      if (intersecting) {\n        newIdx = idx;\n        // traverse up the stack looking for the nearest intersecting object\n        for (let i = idx + 1; i < this._objects.length; ++i) {\n          if (object.isOverlapping(this._objects[i])) {\n            newIdx = i;\n            break;\n          }\n        }\n      } else {\n        newIdx = idx + 1;\n      }\n\n      return newIdx;\n    }\n\n    /**\n     * Given a bounding box, return all the objects of the collection that are contained in the bounding box.\n     * If `includeIntersecting` is true, return also the objects that intersect the bounding box as well.\n     * This is meant to work with selection. Is not a generic method.\n     * @param {TBBox} bbox a bounding box in scene coordinates\n     * @param {{ includeIntersecting?: boolean }} options an object with includeIntersecting\n     * @returns array of objects contained in the bounding box, ordered from top to bottom stacking wise\n     */\n    collectObjects(\n      { left, top, width, height }: TBBox,\n      { includeIntersecting = true }: { includeIntersecting?: boolean } = {},\n    ) {\n      const objects: InteractiveFabricObject[] = [],\n        tl = new Point(left, top),\n        br = tl.add(new Point(width, height));\n\n      // we iterate reverse order to collect top first in case of click.\n      for (let i = this._objects.length - 1; i >= 0; i--) {\n        const object = this._objects[i] as unknown as InteractiveFabricObject;\n        if (\n          object.selectable &&\n          object.visible &&\n          ((includeIntersecting && object.intersectsWithRect(tl, br)) ||\n            object.isContainedWithinRect(tl, br) ||\n            (includeIntersecting && object.containsPoint(tl)) ||\n            (includeIntersecting && object.containsPoint(br)))\n        ) {\n          objects.push(object);\n        }\n      }\n\n      return objects;\n    }\n  }\n\n  // https://github.com/microsoft/TypeScript/issues/32080\n  return Collection as typeof Collection & TBase;\n}\n","import { Observable } from './Observable';\n\nexport class CommonMethods<EventSpec> extends Observable<EventSpec> {\n  /**\n   * Sets object's properties from options, for initialization only\n   * @protected\n   * @param {Object} [options] Options object\n   */\n  protected _setOptions(options: any = {}) {\n    for (const prop in options) {\n      this.set(prop, options[prop]);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _setObject(obj: Record<string, any>) {\n    for (const prop in obj) {\n      this._set(prop, obj[prop]);\n    }\n  }\n\n  /**\n   * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n   * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n   * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n   */\n  set(key: string | Record<string, any>, value?: any) {\n    if (typeof key === 'object') {\n      this._setObject(key);\n    } else {\n      this._set(key, value);\n    }\n    return this;\n  }\n\n  _set(key: string, value: any) {\n    this[key as keyof this] = value;\n  }\n\n  /**\n   * Toggles specified property from `true` to `false` or from `false` to `true`\n   * @param {String} property Property to toggle\n   */\n  toggle(property: string) {\n    const value = this.get(property);\n    if (typeof value === 'boolean') {\n      this.set(property, !value);\n    }\n    return this;\n  }\n\n  /**\n   * Basic getter\n   * @param {String} property Property name\n   * @return {*} value of a property\n   */\n  get(property: string): any {\n    return this[property as keyof this];\n  }\n}\n","import { getFabricWindow } from '../../env';\n\nexport function requestAnimFrame(callback: FrameRequestCallback): number {\n  return getFabricWindow().requestAnimationFrame(callback);\n}\n\nexport function cancelAnimFrame(handle: number): void {\n  return getFabricWindow().cancelAnimationFrame(handle);\n}\n","let id = 0;\n\nexport const uid = () => id++;\n","import { getFabricDocument } from '../../env';\nimport type { ImageFormat, TSize } from '../../typedefs';\nimport { FabricError } from '../internals/console';\n/**\n * Creates canvas element\n * @return {CanvasElement} initialized canvas element\n */\nexport const createCanvasElement = (): HTMLCanvasElement => {\n  const element = getFabricDocument().createElement('canvas');\n  if (!element || typeof element.getContext === 'undefined') {\n    throw new FabricError('Failed to create `canvas` element');\n  }\n  return element;\n};\n\n/**\n * Creates image element (works on client and node)\n * @return {HTMLImageElement} HTML image element\n */\nexport const createImage = (): HTMLImageElement =>\n  getFabricDocument().createElement('img');\n\n/**\n * Creates a canvas element that is a copy of another and is also painted\n * @param {CanvasElement} canvas to copy size and content of\n * @return {CanvasElement} initialized canvas element\n */\nexport const copyCanvasElement = (\n  canvas: HTMLCanvasElement,\n): HTMLCanvasElement => {\n  const newCanvas = createCanvasElementFor(canvas);\n  newCanvas.getContext('2d')?.drawImage(canvas, 0, 0);\n  return newCanvas;\n};\n\nexport const createCanvasElementFor = (\n  canvas: HTMLCanvasElement | ImageData | HTMLImageElement | TSize,\n): HTMLCanvasElement => {\n  const newCanvas = createCanvasElement();\n  newCanvas.width = canvas.width;\n  newCanvas.height = canvas.height;\n  return newCanvas;\n};\n\n/**\n * since 2.6.0 moved from canvas instance to utility.\n * possibly useless\n * @param {CanvasElement} canvasEl to copy size and content of\n * @param {String} format 'jpeg' or 'png', in some browsers 'webp' is ok too\n * @param {Number} quality <= 1 and > 0\n * @return {String} data url\n */\nexport const toDataURL = (\n  canvasEl: HTMLCanvasElement,\n  format: ImageFormat,\n  quality: number,\n) => canvasEl.toDataURL(`image/${format}`, quality);\n\nexport const isHTMLCanvas = (\n  canvas?: HTMLCanvasElement | string,\n): canvas is HTMLCanvasElement => {\n  return !!canvas && (canvas as HTMLCanvasElement).getContext !== undefined;\n};\n","import type { TRadian, TDegree } from '../../typedefs';\nimport { PiBy180 } from '../../constants';\n\n/**\n * Transforms degrees to radians.\n * @param {TDegree} degrees value in degrees\n * @return {TRadian} value in radians\n */\nexport const degreesToRadians = (degrees: TDegree): TRadian =>\n  (degrees * PiBy180) as TRadian;\n\n/**\n * Transforms radians to degrees.\n * @param {TRadian} radians value in radians\n * @return {TDegree} value in degrees\n */\nexport const radiansToDegrees = (radians: TRadian): TDegree =>\n  (radians / PiBy180) as TDegree;\n","import { iMatrix } from '../../constants';\nimport type { XY } from '../../Point';\nimport { Point } from '../../Point';\nimport type { TDegree, TRadian, TMat2D } from '../../typedefs';\nimport { cos } from './cos';\nimport { degreesToRadians, radiansToDegrees } from './radiansDegreesConversion';\nimport { sin } from './sin';\n\nexport type TRotateMatrixArgs = {\n  angle?: TDegree;\n};\n\nexport type TTranslateMatrixArgs = {\n  translateX?: number;\n  translateY?: number;\n};\n\nexport type TScaleMatrixArgs = {\n  scaleX?: number;\n  scaleY?: number;\n  flipX?: boolean;\n  flipY?: boolean;\n  skewX?: TDegree;\n  skewY?: TDegree;\n};\n\nexport type TComposeMatrixArgs = TTranslateMatrixArgs &\n  TRotateMatrixArgs &\n  TScaleMatrixArgs;\n\nexport type TQrDecomposeOut = Required<\n  Omit<TComposeMatrixArgs, 'flipX' | 'flipY'>\n>;\n\nexport const isIdentityMatrix = (mat: TMat2D) =>\n  mat.every((value, index) => value === iMatrix[index]);\n\n/**\n * Apply transform t to point p\n * @deprecated use {@link Point#transform}\n * @param  {Point | XY} p The point to transform\n * @param  {Array} t The transform\n * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n * @return {Point} The transformed point\n */\nexport const transformPoint = (\n  p: XY,\n  t: TMat2D,\n  ignoreOffset?: boolean,\n): Point => new Point(p).transform(t, ignoreOffset);\n\n/**\n * Invert transformation t\n * @param {Array} t The transform\n * @return {Array} The inverted transform\n */\nexport const invertTransform = (t: TMat2D): TMat2D => {\n  const a = 1 / (t[0] * t[3] - t[1] * t[2]),\n    r = [a * t[3], -a * t[1], -a * t[2], a * t[0], 0, 0] as TMat2D,\n    { x, y } = new Point(t[4], t[5]).transform(r, true);\n  r[4] = -x;\n  r[5] = -y;\n  return r;\n};\n\n/**\n * Multiply matrix A by matrix B to nest transformations\n * @param  {TMat2D} a First transformMatrix\n * @param  {TMat2D} b Second transformMatrix\n * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\n * @return {TMat2D} The product of the two transform matrices\n */\nexport const multiplyTransformMatrices = (\n  a: TMat2D,\n  b: TMat2D,\n  is2x2?: boolean,\n): TMat2D =>\n  [\n    a[0] * b[0] + a[2] * b[1],\n    a[1] * b[0] + a[3] * b[1],\n    a[0] * b[2] + a[2] * b[3],\n    a[1] * b[2] + a[3] * b[3],\n    is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4],\n    is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5],\n  ] as TMat2D;\n\n/**\n * Multiplies {@link matrices} such that a matrix defines the plane for the rest of the matrices **after** it\n *\n * `multiplyTransformMatrixArray([A, B, C, D])` is equivalent to `A(B(C(D)))`\n *\n * @param matrices an array of matrices\n * @param [is2x2] flag to multiply matrices as 2x2 matrices\n * @returns the multiplication product\n */\nexport const multiplyTransformMatrixArray = (\n  matrices: (TMat2D | undefined | null | false)[],\n  is2x2?: boolean,\n) =>\n  matrices.reduceRight(\n    (product: TMat2D, curr) =>\n      curr && product\n        ? multiplyTransformMatrices(curr, product, is2x2)\n        : curr || product,\n    undefined as unknown as TMat2D,\n  ) || iMatrix.concat();\n\nexport const calcPlaneRotation = ([a, b]: TMat2D) =>\n  Math.atan2(b, a) as TRadian;\n\n/**\n * Decomposes standard 2x3 matrix into transform components\n * @param  {TMat2D} a transformMatrix\n * @return {Object} Components of transform\n */\nexport const qrDecompose = (a: TMat2D): TQrDecomposeOut => {\n  const angle = calcPlaneRotation(a),\n    denom = Math.pow(a[0], 2) + Math.pow(a[1], 2),\n    scaleX = Math.sqrt(denom),\n    scaleY = (a[0] * a[3] - a[2] * a[1]) / scaleX,\n    skewX = Math.atan2(a[0] * a[2] + a[1] * a[3], denom);\n  return {\n    angle: radiansToDegrees(angle),\n    scaleX,\n    scaleY,\n    skewX: radiansToDegrees(skewX),\n    skewY: 0 as TDegree,\n    translateX: a[4] || 0,\n    translateY: a[5] || 0,\n  };\n};\n\n/**\n * Generate a translation matrix\n *\n * A translation matrix in the form of\n * [ 1 0 x ]\n * [ 0 1 y ]\n * [ 0 0 1 ]\n *\n * See @link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform#translate for more details\n *\n * @param {number} x translation on X axis\n * @param {number} [y] translation on Y axis\n * @returns {TMat2D} matrix\n */\nexport const createTranslateMatrix = (x: number, y = 0): TMat2D => [\n  1,\n  0,\n  0,\n  1,\n  x,\n  y,\n];\n\n/**\n * Generate a rotation matrix around around a point (x,y), defaulting to (0,0)\n *\n * A matrix in the form of\n * [cos(a) -sin(a) -x*cos(a)+y*sin(a)+x]\n * [sin(a)  cos(a) -x*sin(a)-y*cos(a)+y]\n * [0       0      1                 ]\n *\n *\n * @param {TDegree} angle rotation in degrees\n * @param {XY} [pivotPoint] pivot point to rotate around\n * @returns {TMat2D} matrix\n */\nexport function createRotateMatrix(\n  { angle = 0 }: TRotateMatrixArgs = {},\n  { x = 0, y = 0 }: Partial<XY> = {},\n): TMat2D {\n  const angleRadiant = degreesToRadians(angle),\n    cosValue = cos(angleRadiant),\n    sinValue = sin(angleRadiant);\n  return [\n    cosValue,\n    sinValue,\n    -sinValue,\n    cosValue,\n    x ? x - (cosValue * x - sinValue * y) : 0,\n    y ? y - (sinValue * x + cosValue * y) : 0,\n  ];\n}\n\n/**\n * Generate a scale matrix around the point (0,0)\n *\n * A matrix in the form of\n * [x 0 0]\n * [0 y 0]\n * [0 0 1]\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform#scale\n *\n * @param {number} x scale on X axis\n * @param {number} [y] scale on Y axis\n * @returns {TMat2D} matrix\n */\nexport const createScaleMatrix = (x: number, y: number = x): TMat2D => [\n  x,\n  0,\n  0,\n  y,\n  0,\n  0,\n];\n\nexport const angleToSkew = (angle: TDegree) =>\n  Math.tan(degreesToRadians(angle));\n\nexport const skewToAngle = (value: TRadian) =>\n  radiansToDegrees(Math.atan(value));\n\n/**\n * Generate a skew matrix for the X axis\n *\n * A matrix in the form of\n * [1 x 0]\n * [0 1 0]\n * [0 0 1]\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform#skewx\n *\n * @param {TDegree} skewValue translation on X axis\n * @returns {TMat2D} matrix\n */\nexport const createSkewXMatrix = (skewValue: TDegree): TMat2D => [\n  1,\n  0,\n  angleToSkew(skewValue),\n  1,\n  0,\n  0,\n];\n\n/**\n * Generate a skew matrix for the Y axis\n *\n * A matrix in the form of\n * [1 0 0]\n * [y 1 0]\n * [0 0 1]\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform#skewy\n *\n * @param {TDegree} skewValue translation on Y axis\n * @returns {TMat2D} matrix\n */\nexport const createSkewYMatrix = (skewValue: TDegree): TMat2D => [\n  1,\n  angleToSkew(skewValue),\n  0,\n  1,\n  0,\n  0,\n];\n\n/**\n * Returns a transform matrix starting from an object of the same kind of\n * the one returned from qrDecompose, useful also if you want to calculate some\n * transformations from an object that is not enlived yet.\n * is called DimensionsTransformMatrix because those properties are the one that influence\n * the size of the resulting box of the object.\n * @param  {Object} options\n * @param  {Number} [options.scaleX]\n * @param  {Number} [options.scaleY]\n * @param  {Boolean} [options.flipX]\n * @param  {Boolean} [options.flipY]\n * @param  {Number} [options.skewX]\n * @param  {Number} [options.skewY]\n * @return {Number[]} transform matrix\n */\nexport const calcDimensionsMatrix = ({\n  scaleX = 1,\n  scaleY = 1,\n  flipX = false,\n  flipY = false,\n  skewX = 0 as TDegree,\n  skewY = 0 as TDegree,\n}: TScaleMatrixArgs) => {\n  let matrix = createScaleMatrix(\n    flipX ? -scaleX : scaleX,\n    flipY ? -scaleY : scaleY,\n  );\n  if (skewX) {\n    matrix = multiplyTransformMatrices(matrix, createSkewXMatrix(skewX), true);\n  }\n  if (skewY) {\n    matrix = multiplyTransformMatrices(matrix, createSkewYMatrix(skewY), true);\n  }\n  return matrix;\n};\n\n/**\n * Returns a transform matrix starting from an object of the same kind of\n * the one returned from qrDecompose, useful also if you want to calculate some\n * transformations from an object that is not enlived yet\n * Before changing this function look at: src/benchmarks/calcTransformMatrix.mjs\n * @param  {Object} options\n * @param  {Number} [options.angle]\n * @param  {Number} [options.scaleX]\n * @param  {Number} [options.scaleY]\n * @param  {Boolean} [options.flipX]\n * @param  {Boolean} [options.flipY]\n * @param  {Number} [options.skewX]\n * @param  {Number} [options.skewY]\n * @param  {Number} [options.translateX]\n * @param  {Number} [options.translateY]\n * @return {Number[]} transform matrix\n */\nexport const composeMatrix = (options: TComposeMatrixArgs): TMat2D => {\n  const { translateX = 0, translateY = 0, angle = 0 as TDegree } = options;\n  let matrix = createTranslateMatrix(translateX, translateY);\n  if (angle) {\n    matrix = multiplyTransformMatrices(matrix, createRotateMatrix({ angle }));\n  }\n  const scaleMatrix = calcDimensionsMatrix(options);\n  if (!isIdentityMatrix(scaleMatrix)) {\n    matrix = multiplyTransformMatrices(matrix, scaleMatrix);\n  }\n  return matrix;\n};\n","import { noop } from '../../constants';\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\nimport type {\n  Abortable,\n  Constructor,\n  TCrossOrigin,\n  TFiller,\n} from '../../typedefs';\nimport { createImage } from './dom';\nimport { classRegistry } from '../../ClassRegistry';\nimport type { BaseFilter } from '../../filters/BaseFilter';\nimport type { FabricObject as BaseFabricObject } from '../../shapes/Object/Object';\nimport { FabricError, SignalAbortedError } from '../internals/console';\nimport type { Shadow } from '../../Shadow';\n\nexport type LoadImageOptions = Abortable & {\n  /**\n   * cors value for the image loading, default to anonymous\n   */\n  crossOrigin?: TCrossOrigin;\n};\n\n/**\n * Loads image element from given url and resolve it, or catch.\n * @param {String} url URL representing an image\n * @param {LoadImageOptions} [options] image loading options\n * @returns {Promise<HTMLImageElement>} the loaded image.\n */\nexport const loadImage = (\n  url: string,\n  { signal, crossOrigin = null }: LoadImageOptions = {},\n) =>\n  new Promise<HTMLImageElement>(function (resolve, reject) {\n    if (signal && signal.aborted) {\n      return reject(new SignalAbortedError('loadImage'));\n    }\n    const img = createImage();\n    let abort: EventListenerOrEventListenerObject;\n    if (signal) {\n      abort = function (err: Event) {\n        img.src = '';\n        reject(err);\n      };\n      signal.addEventListener('abort', abort, { once: true });\n    }\n    const done = function () {\n      img.onload = img.onerror = null;\n      abort && signal?.removeEventListener('abort', abort);\n      resolve(img);\n    };\n    if (!url) {\n      done();\n      return;\n    }\n    img.onload = done;\n    img.onerror = function () {\n      abort && signal?.removeEventListener('abort', abort);\n      reject(new FabricError(`Error loading ${img.src}`));\n    };\n    crossOrigin && (img.crossOrigin = crossOrigin);\n    img.src = url;\n  });\n\nexport type EnlivenObjectOptions = Abortable & {\n  /**\n   * Method for further parsing of object elements,\n   * called after each fabric object created.\n   */\n  reviver?: <\n    T extends\n      | BaseFabricObject\n      | FabricObject\n      | BaseFilter<string>\n      | Shadow\n      | TFiller,\n  >(\n    serializedObj: Record<string, any>,\n    instance: T,\n  ) => void;\n};\n\n/**\n * @TODO type this correctly.\n * Creates corresponding fabric instances from their object representations\n * @param {Object[]} objects Objects to enliven\n * @param {EnlivenObjectOptions} [options]\n * @param {(serializedObj: object, instance: FabricObject) => any} [options.reviver] Method for further parsing of object elements,\n * called after each fabric object created.\n * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n * @returns {Promise<FabricObject[]>}\n */\nexport const enlivenObjects = <\n  T extends\n    | BaseFabricObject\n    | FabricObject\n    | BaseFilter<string>\n    | Shadow\n    | TFiller,\n>(\n  objects: any[],\n  { signal, reviver = noop }: EnlivenObjectOptions = {},\n) =>\n  new Promise<T[]>((resolve, reject) => {\n    const instances: T[] = [];\n    signal && signal.addEventListener('abort', reject, { once: true });\n    Promise.all(\n      objects.map((obj) =>\n        classRegistry\n          .getClass<\n            Constructor<T> & {\n              fromObject(options: any, context: Abortable): Promise<T>;\n            }\n          >(obj.type)\n          .fromObject(obj, { signal })\n          .then((fabricInstance) => {\n            reviver(obj, fabricInstance);\n            instances.push(fabricInstance);\n            return fabricInstance;\n          }),\n      ),\n    )\n      .then(resolve)\n      .catch((error) => {\n        // cleanup\n        instances.forEach((instance) => {\n          (instance as FabricObject).dispose &&\n            (instance as FabricObject).dispose();\n        });\n        reject(error);\n      })\n      .finally(() => {\n        signal && signal.removeEventListener('abort', reject);\n      });\n  });\n\n/**\n * Creates corresponding fabric instances residing in an object, e.g. `clipPath`\n * @param {Object} object with properties to enlive ( fill, stroke, clipPath, path )\n * @param {object} [options]\n * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n * @returns {Promise<Record<string, FabricObject | TFiller | null>>} the input object with enlived values\n */\nexport const enlivenObjectEnlivables = <\n  R = Record<string, FabricObject | TFiller | null>,\n>(\n  serializedObject: any,\n  { signal }: Abortable = {},\n) =>\n  new Promise<R>((resolve, reject) => {\n    const instances: (FabricObject | TFiller | Shadow)[] = [];\n    signal && signal.addEventListener('abort', reject, { once: true });\n    // enlive every possible property\n    const promises = Object.values(serializedObject).map((value: any) => {\n      if (!value) {\n        return value;\n      }\n      /**\n       * clipPath or shadow or gradient or text on a path or a pattern,\n       * or the backgroundImage or overlayImage of canvas\n       * If we have a type and there is a classe registered for it, we enlive it.\n       * If there is no class registered for it we return the value as is\n       * */\n      if (value.type && classRegistry.has(value.type)) {\n        return enlivenObjects<FabricObject | Shadow | TFiller>([value], {\n          signal,\n        }).then(([enlived]) => {\n          instances.push(enlived);\n          return enlived;\n        });\n      }\n      return value;\n    });\n    const keys = Object.keys(serializedObject);\n    Promise.all(promises)\n      .then((enlived) => {\n        return enlived.reduce((acc, instance, index) => {\n          acc[keys[index]] = instance;\n          return acc;\n        }, {});\n      })\n      .then(resolve)\n      .catch((error) => {\n        // cleanup\n        instances.forEach((instance: any) => {\n          instance.dispose && instance.dispose();\n        });\n        reject(error);\n      })\n      .finally(() => {\n        signal && signal.removeEventListener('abort', reject);\n      });\n  });\n","/**\n * Populates an object with properties of another object\n * @param {Object} source Source object\n * @param {string[]} properties Properties names to include\n * @returns object populated with the picked keys\n */\nexport const pick = <T extends Record<string, any>>(\n  source: T,\n  keys: (keyof T)[] = [],\n) => {\n  return keys.reduce((o, key) => {\n    if (key in source) {\n      o[key] = source[key];\n    }\n    return o;\n  }, {} as Partial<T>);\n};\n\nexport const pickBy = <T extends Record<string, any>>(\n  source: T,\n  predicate: <K extends keyof T>(value: T[K], key: K, collection: T) => boolean,\n) => {\n  return (Object.keys(source) as (keyof T)[]).reduce((o, key) => {\n    if (predicate(source[key], key, source)) {\n      o[key] = source[key];\n    }\n    return o;\n  }, {} as Partial<T>);\n};\n","/**\n * Map of the 148 color names with HEX code\n * @see: https://www.w3.org/TR/css3-color/#svg-color\n */\nexport const ColorNameMap = {\n  aliceblue: '#F0F8FF',\n  antiquewhite: '#FAEBD7',\n  aqua: '#0FF',\n  aquamarine: '#7FFFD4',\n  azure: '#F0FFFF',\n  beige: '#F5F5DC',\n  bisque: '#FFE4C4',\n  black: '#000',\n  blanchedalmond: '#FFEBCD',\n  blue: '#00F',\n  blueviolet: '#8A2BE2',\n  brown: '#A52A2A',\n  burlywood: '#DEB887',\n  cadetblue: '#5F9EA0',\n  chartreuse: '#7FFF00',\n  chocolate: '#D2691E',\n  coral: '#FF7F50',\n  cornflowerblue: '#6495ED',\n  cornsilk: '#FFF8DC',\n  crimson: '#DC143C',\n  cyan: '#0FF',\n  darkblue: '#00008B',\n  darkcyan: '#008B8B',\n  darkgoldenrod: '#B8860B',\n  darkgray: '#A9A9A9',\n  darkgrey: '#A9A9A9',\n  darkgreen: '#006400',\n  darkkhaki: '#BDB76B',\n  darkmagenta: '#8B008B',\n  darkolivegreen: '#556B2F',\n  darkorange: '#FF8C00',\n  darkorchid: '#9932CC',\n  darkred: '#8B0000',\n  darksalmon: '#E9967A',\n  darkseagreen: '#8FBC8F',\n  darkslateblue: '#483D8B',\n  darkslategray: '#2F4F4F',\n  darkslategrey: '#2F4F4F',\n  darkturquoise: '#00CED1',\n  darkviolet: '#9400D3',\n  deeppink: '#FF1493',\n  deepskyblue: '#00BFFF',\n  dimgray: '#696969',\n  dimgrey: '#696969',\n  dodgerblue: '#1E90FF',\n  firebrick: '#B22222',\n  floralwhite: '#FFFAF0',\n  forestgreen: '#228B22',\n  fuchsia: '#F0F',\n  gainsboro: '#DCDCDC',\n  ghostwhite: '#F8F8FF',\n  gold: '#FFD700',\n  goldenrod: '#DAA520',\n  gray: '#808080',\n  grey: '#808080',\n  green: '#008000',\n  greenyellow: '#ADFF2F',\n  honeydew: '#F0FFF0',\n  hotpink: '#FF69B4',\n  indianred: '#CD5C5C',\n  indigo: '#4B0082',\n  ivory: '#FFFFF0',\n  khaki: '#F0E68C',\n  lavender: '#E6E6FA',\n  lavenderblush: '#FFF0F5',\n  lawngreen: '#7CFC00',\n  lemonchiffon: '#FFFACD',\n  lightblue: '#ADD8E6',\n  lightcoral: '#F08080',\n  lightcyan: '#E0FFFF',\n  lightgoldenrodyellow: '#FAFAD2',\n  lightgray: '#D3D3D3',\n  lightgrey: '#D3D3D3',\n  lightgreen: '#90EE90',\n  lightpink: '#FFB6C1',\n  lightsalmon: '#FFA07A',\n  lightseagreen: '#20B2AA',\n  lightskyblue: '#87CEFA',\n  lightslategray: '#789',\n  lightslategrey: '#789',\n  lightsteelblue: '#B0C4DE',\n  lightyellow: '#FFFFE0',\n  lime: '#0F0',\n  limegreen: '#32CD32',\n  linen: '#FAF0E6',\n  magenta: '#F0F',\n  maroon: '#800000',\n  mediumaquamarine: '#66CDAA',\n  mediumblue: '#0000CD',\n  mediumorchid: '#BA55D3',\n  mediumpurple: '#9370DB',\n  mediumseagreen: '#3CB371',\n  mediumslateblue: '#7B68EE',\n  mediumspringgreen: '#00FA9A',\n  mediumturquoise: '#48D1CC',\n  mediumvioletred: '#C71585',\n  midnightblue: '#191970',\n  mintcream: '#F5FFFA',\n  mistyrose: '#FFE4E1',\n  moccasin: '#FFE4B5',\n  navajowhite: '#FFDEAD',\n  navy: '#000080',\n  oldlace: '#FDF5E6',\n  olive: '#808000',\n  olivedrab: '#6B8E23',\n  orange: '#FFA500',\n  orangered: '#FF4500',\n  orchid: '#DA70D6',\n  palegoldenrod: '#EEE8AA',\n  palegreen: '#98FB98',\n  paleturquoise: '#AFEEEE',\n  palevioletred: '#DB7093',\n  papayawhip: '#FFEFD5',\n  peachpuff: '#FFDAB9',\n  peru: '#CD853F',\n  pink: '#FFC0CB',\n  plum: '#DDA0DD',\n  powderblue: '#B0E0E6',\n  purple: '#800080',\n  rebeccapurple: '#639',\n  red: '#F00',\n  rosybrown: '#BC8F8F',\n  royalblue: '#4169E1',\n  saddlebrown: '#8B4513',\n  salmon: '#FA8072',\n  sandybrown: '#F4A460',\n  seagreen: '#2E8B57',\n  seashell: '#FFF5EE',\n  sienna: '#A0522D',\n  silver: '#C0C0C0',\n  skyblue: '#87CEEB',\n  slateblue: '#6A5ACD',\n  slategray: '#708090',\n  slategrey: '#708090',\n  snow: '#FFFAFA',\n  springgreen: '#00FF7F',\n  steelblue: '#4682B4',\n  tan: '#D2B48C',\n  teal: '#008080',\n  thistle: '#D8BFD8',\n  tomato: '#FF6347',\n  turquoise: '#40E0D0',\n  violet: '#EE82EE',\n  wheat: '#F5DEB3',\n  white: '#FFF',\n  whitesmoke: '#F5F5F5',\n  yellow: '#FF0',\n  yellowgreen: '#9ACD32',\n};\n","import type { TRGBAColorSource } from './typedefs';\n\n/**\n * @param {Number} p\n * @param {Number} q\n * @param {Number} t\n * @return {Number}\n */\nexport const hue2rgb = (p: number, q: number, t: number): number => {\n  if (t < 0) {\n    t += 1;\n  }\n  if (t > 1) {\n    t -= 1;\n  }\n  if (t < 1 / 6) {\n    return p + (q - p) * 6 * t;\n  }\n  if (t < 1 / 2) {\n    return q;\n  }\n  if (t < 2 / 3) {\n    return p + (q - p) * (2 / 3 - t) * 6;\n  }\n  return p;\n};\n\n/**\n * Adapted from {@link https://gist.github.com/mjackson/5311256 https://gist.github.com/mjackson}\n * @param {Number} r Red color value\n * @param {Number} g Green color value\n * @param {Number} b Blue color value\n * @param {Number} a Alpha color value pass through\n * @return {TRGBColorSource} Hsl color\n */\nexport const rgb2Hsl = (\n  r: number,\n  g: number,\n  b: number,\n  a: number,\n): TRGBAColorSource => {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n  const maxValue = Math.max(r, g, b),\n    minValue = Math.min(r, g, b);\n\n  let h!: number, s: number;\n  const l = (maxValue + minValue) / 2;\n\n  if (maxValue === minValue) {\n    h = s = 0; // achromatic\n  } else {\n    const d = maxValue - minValue;\n    s = l > 0.5 ? d / (2 - maxValue - minValue) : d / (maxValue + minValue);\n    switch (maxValue) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n    h /= 6;\n  }\n\n  return [Math.round(h * 360), Math.round(s * 100), Math.round(l * 100), a];\n};\n\nexport const fromAlphaToFloat = (value = '1') =>\n  parseFloat(value) / (value.endsWith('%') ? 100 : 1);\n\n/**\n * Convert a value in the inclusive range [0, 255] to hex\n */\nexport const hexify = (value: number) =>\n  Math.min(Math.round(value), 255).toString(16).toUpperCase().padStart(2, '0');\n\n/**\n * Calculate the grey average value for rgb and pass through alpha\n */\nexport const greyAverage = ([\n  r,\n  g,\n  b,\n  a = 1,\n]: TRGBAColorSource): TRGBAColorSource => {\n  const avg = Math.round(r * 0.3 + g * 0.59 + b * 0.11);\n  return [avg, avg, avg, a];\n};\n","import { radiansToDegrees } from '../util/misc/radiansDegreesConversion';\nimport { ColorNameMap } from './color_map';\nimport { reHSLa, reHex, reRGBa } from './constants';\nimport type { TRGBAColorSource, TColorArg } from './typedefs';\nimport {\n  hue2rgb,\n  hexify,\n  rgb2Hsl,\n  fromAlphaToFloat,\n  greyAverage,\n} from './util';\n\n/**\n * @class Color common color operations\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors colors}\n */\nexport class Color {\n  private declare _source: TRGBAColorSource;\n  isUnrecognised = false;\n\n  /**\n   *\n   * @param {string} [color] optional in hex or rgb(a) or hsl format or from known color list\n   */\n  constructor(color?: TColorArg) {\n    if (!color) {\n      // we default to black as canvas does\n      this.setSource([0, 0, 0, 1]);\n    } else if (color instanceof Color) {\n      this.setSource([...color._source]);\n    } else if (Array.isArray(color)) {\n      const [r, g, b, a = 1] = color;\n      this.setSource([r, g, b, a]);\n    } else {\n      this.setSource(this._tryParsingColor(color));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} [color] Color value to parse\n   * @returns {TRGBAColorSource}\n   */\n  protected _tryParsingColor(color: string) {\n    if (color in ColorNameMap) {\n      color = ColorNameMap[color as keyof typeof ColorNameMap];\n    }\n    return color === 'transparent'\n      ? ([255, 255, 255, 0] as TRGBAColorSource)\n      : Color.sourceFromHex(color) ||\n          Color.sourceFromRgb(color) ||\n          Color.sourceFromHsl(color) ||\n          // color is not recognized\n          // we default to black as canvas does\n          // eslint-disable-next-line no-constant-binary-expression\n          ((this.isUnrecognised = true) && ([0, 0, 0, 1] as TRGBAColorSource));\n  }\n\n  /**\n   * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n   * @return {TRGBAColorSource}\n   */\n  getSource() {\n    return this._source;\n  }\n\n  /**\n   * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n   * @param {TRGBAColorSource} source\n   */\n  setSource(source: TRGBAColorSource) {\n    this._source = source;\n  }\n\n  /**\n   * Returns color representation in RGB format\n   * @return {String} ex: rgb(0-255,0-255,0-255)\n   */\n  toRgb() {\n    const [r, g, b] = this.getSource();\n    return `rgb(${r},${g},${b})`;\n  }\n\n  /**\n   * Returns color representation in RGBA format\n   * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\n   */\n  toRgba() {\n    return `rgba(${this.getSource().join(',')})`;\n  }\n\n  /**\n   * Returns color representation in HSL format\n   * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\n   */\n  toHsl() {\n    const [h, s, l] = rgb2Hsl(...this.getSource());\n    return `hsl(${h},${s}%,${l}%)`;\n  }\n\n  /**\n   * Returns color representation in HSLA format\n   * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\n   */\n  toHsla() {\n    const [h, s, l, a] = rgb2Hsl(...this.getSource());\n    return `hsla(${h},${s}%,${l}%,${a})`;\n  }\n\n  /**\n   * Returns color representation in HEX format\n   * @return {String} ex: FF5555\n   */\n  toHex() {\n    const fullHex = this.toHexa();\n    return fullHex.slice(0, 6);\n  }\n\n  /**\n   * Returns color representation in HEXA format\n   * @return {String} ex: FF5555CC\n   */\n  toHexa() {\n    const [r, g, b, a] = this.getSource();\n    return `${hexify(r)}${hexify(g)}${hexify(b)}${hexify(Math.round(a * 255))}`;\n  }\n\n  /**\n   * Gets value of alpha channel for this color\n   * @return {Number} 0-1\n   */\n  getAlpha() {\n    return this.getSource()[3];\n  }\n\n  /**\n   * Sets value of alpha channel for this color\n   * @param {Number} alpha Alpha value 0-1\n   * @return {Color} thisArg\n   */\n  setAlpha(alpha: number) {\n    this._source[3] = alpha;\n    return this;\n  }\n\n  /**\n   * Transforms color to its grayscale representation\n   * @return {Color} thisArg\n   */\n  toGrayscale() {\n    this.setSource(greyAverage(this.getSource()));\n    return this;\n  }\n\n  /**\n   * Transforms color to its black and white representation\n   * @param {Number} threshold\n   * @return {Color} thisArg\n   */\n  toBlackWhite(threshold: number) {\n    const [average, , , a] = greyAverage(this.getSource()),\n      bOrW = average < (threshold || 127) ? 0 : 255;\n    this.setSource([bOrW, bOrW, bOrW, a]);\n    return this;\n  }\n\n  /**\n   * Overlays color with another color\n   * @param {String|Color} otherColor\n   * @return {Color} thisArg\n   */\n  overlayWith(otherColor: string | Color) {\n    if (!(otherColor instanceof Color)) {\n      otherColor = new Color(otherColor);\n    }\n\n    const source = this.getSource(),\n      otherAlpha = 0.5,\n      otherSource = otherColor.getSource(),\n      [R, G, B] = source.map((value, index) =>\n        Math.round(value * (1 - otherAlpha) + otherSource[index] * otherAlpha),\n      );\n\n    this.setSource([R, G, B, source[3]]);\n    return this;\n  }\n\n  /**\n   * Returns new color object, when given a color in RGB format\n   * @memberOf Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\n   * @return {Color}\n   */\n  static fromRgb(color: string): Color {\n    return Color.fromRgba(color);\n  }\n\n  /**\n   * Returns new color object, when given a color in RGBA format\n   * @static\n   * @function\n   * @memberOf Color\n   * @param {String} color\n   * @return {Color}\n   */\n  static fromRgba(color: string): Color {\n    return new Color(Color.sourceFromRgb(color));\n  }\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\n   * @memberOf Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\n   * @return {TRGBAColorSource | undefined} source\n   */\n  static sourceFromRgb(color: string): TRGBAColorSource | undefined {\n    const match = color.match(reRGBa());\n    if (match) {\n      const [r, g, b] = match.slice(1, 4).map((value) => {\n        const parsedValue = parseFloat(value);\n        return value.endsWith('%')\n          ? Math.round(parsedValue * 2.55)\n          : parsedValue;\n      });\n      return [r, g, b, fromAlphaToFloat(match[4])];\n    }\n  }\n\n  /**\n   * Returns new color object, when given a color in HSL format\n   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\n   * @memberOf Color\n   * @return {Color}\n   */\n  static fromHsl(color: string): Color {\n    return Color.fromHsla(color);\n  }\n\n  /**\n   * Returns new color object, when given a color in HSLA format\n   * @static\n   * @function\n   * @memberOf Color\n   * @param {String} color\n   * @return {Color}\n   */\n  static fromHsla(color: string): Color {\n    return new Color(Color.sourceFromHsl(color));\n  }\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\n   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n   * @memberOf Color\n   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\n   * @return {TRGBAColorSource | undefined} source\n   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\n   */\n  static sourceFromHsl(color: string): TRGBAColorSource | undefined {\n    const match = color.match(reHSLa());\n    if (!match) {\n      return;\n    }\n    const match1degrees = Color.parseAngletoDegrees(match[1]);\n\n    const h = (((match1degrees % 360) + 360) % 360) / 360,\n      s = parseFloat(match[2]) / 100,\n      l = parseFloat(match[3]) / 100;\n    let r: number, g: number, b: number;\n\n    if (s === 0) {\n      r = g = b = l;\n    } else {\n      const q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\n        p = l * 2 - q;\n\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [\n      Math.round(r * 255),\n      Math.round(g * 255),\n      Math.round(b * 255),\n      fromAlphaToFloat(match[4]),\n    ];\n  }\n\n  /**\n   * Returns new color object, when given a color in HEX format\n   * @static\n   * @memberOf Color\n   * @param {String} color Color value ex: FF5555\n   * @return {Color}\n   */\n  static fromHex(color: string): Color {\n    return new Color(Color.sourceFromHex(color));\n  }\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\n   * @static\n   * @memberOf Color\n   * @param {String} color ex: FF5555 or FF5544CC (RGBa)\n   * @return {TRGBAColorSource | undefined} source\n   */\n  static sourceFromHex(color: string): TRGBAColorSource | undefined {\n    if (color.match(reHex())) {\n      const value = color.slice(color.indexOf('#') + 1),\n        isShortNotation = value.length <= 4;\n      let expandedValue: string[];\n      if (isShortNotation) {\n        expandedValue = value.split('').map((hex) => hex + hex);\n      } else {\n        expandedValue = value.match(/.{2}/g)!;\n      }\n      const [r, g, b, a = 255] = expandedValue.map((hexCouple) =>\n        parseInt(hexCouple, 16),\n      );\n      return [r, g, b, a / 255];\n    }\n  }\n\n  /**\n   * Converts a string that could be any angle notation (50deg, 0.5turn, 2rad)\n   * into degrees without the 'deg' suffix\n   * @static\n   * @memberOf Color\n   * @param {String} value ex: 0deg, 0.5turn, 2rad\n   * @return {Number} number in degrees or NaN if inputs are invalid\n   */\n  static parseAngletoDegrees(value: string): number {\n    const lowercase = value.toLowerCase();\n    const numeric = parseFloat(lowercase);\n\n    if (lowercase.includes('rad')) {\n      return radiansToDegrees(numeric);\n    }\n\n    if (lowercase.includes('turn')) {\n      return numeric * 360;\n    }\n\n    // Value is probably just a number already in degrees eg '50'\n    return numeric;\n  }\n}\n","/**\n * Regex matching color in RGB or RGBA formats (ex: `rgb(0, 0, 0)`, `rgba(255, 100, 10, 0.5)`, `rgba( 255 , 100 , 10 , 0.5 )`, `rgb(1,1,1)`, `rgba(100%, 60%, 10%, 0.5)`)\n * Also matching rgba(r g b / a) as per new specs\n * https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/rgb\n * Formal syntax at the time of writing:\n * <rgb()> =\n *  rgb( [ <percentage> | none ]{3} [ / [ <alpha-value> | none ] ]? )  |\n *  rgb( [ <number> | none ]{3} [ / [ <alpha-value> | none ] ]? )\n * <alpha-value> = <number> | <percentage>\n *\n * For learners this is how you can read this regex\n * Regular expression for matching an rgba or rgb CSS color value\n *\n * /^          # Beginning of the string\n * rgba?       # \"rgb\" or \"rgba\"\n * \\(\\s*       # Opening parenthesis and optional whitespace\n * (\\d{0,3}    # 0 to three digits R channel\n *  (?:\\.\\d+)? # Optional decimal with one or more digits\n * )           # End of capturing group for the first color component\n * %?          # Optional percent sign after the first color component\n * \\s*         # Optional whitespace\n * [\\s|,]      # Separator between color components can be a space or comma\n * \\s*         # Optional whitespace\n * (\\d{0,3}    # 0 to three digits G channel\n *  (?:\\.\\d+)? # Optional decimal with one or more digits\n * )           # End of capturing group for the second color component\n * %?          # Optional percent sign after the second color component\n * \\s*         # Optional whitespace\n * [\\s|,]      # Separator between color components can be a space or comma\n * \\s*         # Optional whitespace\n * (\\d{0,3}    # 0 to three digits B channel\n *  (?:\\.\\d+)? # Optional decimal with one or more digits\n * )           # End of capturing group for the third color component\n * %?          # Optional percent sign after the third color component\n * \\s*         # Optional whitespace\n * (?:         # Beginning of non-capturing group for alpha value\n *  \\s*        # Optional whitespace\n *  [,/]       # Comma or slash separator for alpha value\n *  \\s*        # Optional whitespace\n *  (\\d{0,3}   # Zero to three digits\n *    (?:\\.\\d+)? # Optional decimal with one or more digits\n *  )          # End of capturing group for alpha value\n *  %?         # Optional percent sign after alpha value\n *  \\s*        # Optional whitespace\n * )?          # End of non-capturing group for alpha value (optional)\n * \\)          # Closing parenthesis\n * $           # End of the string\n *\n * The alpha channel can be in the format 0.4 .7 or 1 or 73%\n *\n * WARNING this regex doesn't fail on off spec colors. it matches everything that could be a color.\n * So the spec does not allow for `rgba(30 , 45%  35, 49%)` but this will work anyways for us\n */\nexport const reRGBa = () =>\n  /^rgba?\\(\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*[\\s|,]\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*[\\s|,]\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*(?:\\s*[,/]\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*)?\\)$/i;\n\n/**\n * Regex matching color in HSL or HSLA formats (ex: hsl(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\n * Also matching rgba(r g b / a) as per new specs\n * https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/hsl\n * Formal syntax at the time of writing:\n * <hsl()> =\n *   hsl( [ <hue> | none ] [ <percentage> | none ] [ <percentage> | none ] [ / [ <alpha-value> | none ] ]? )\n *\n * <hue> =\n *   <number>  |\n *   <angle>\n *\n * <alpha-value> =\n *   <number>      |\n *   <percentage>\n *\n * For learners this is how you can read this regex\n * Regular expression for matching an hsla or hsl CSS color value\n *\n * /^hsla?\\(         // Matches the beginning of the string and the opening parenthesis of \"hsl\" or \"hsla\"\n * \\s*               // Matches any whitespace characters (space, tab, etc.) zero or more times\n * (\\d{0,3}          // Hue: 0 to three digits - start capture in a group\n * (?:\\.\\d+)?        // Hue: Optional (non capture group) decimal with one or more digits.\n * (?:deg|turn|rad)? // Hue: Optionally include suffix deg or turn or rad\n * )                 // Hue: End capture group\n * \\s*               // Matches any whitespace characters zero or more times\n * [\\s|,]            // Matches a space, tab or comma\n * \\s*               // Matches any whitespace characters zero or more times\n * (\\d{0,3}          // Saturation: 0 to three digits - start capture in a group\n * (?:\\.\\d+)?        // Saturation: Optional decimal with one or more digits in a non-capturing group\n * %?)               // Saturation: match optional % character and end capture group\n * \\s*               // Matches any whitespace characters zero or more times\n * [\\s|,]            // Matches a space, tab or comma\n * \\s*               // Matches any whitespace characters zero or more times\n * (\\d{0,3}          // Lightness: 0 to three digits - start capture in a group\n * (?:\\.\\d+)?        // Lightness: Optional decimal with one or more digits in a non-capturing group\n * %?)                // Lightness: match % character and end capture group\n * \\s*               // Matches any whitespace characters zero or more times\n * (?:               // Alpha: Begins a non-capturing group for the alpha value\n *   \\s*             // Matches any whitespace characters zero or more times\n *   [,/]            // Matches a comma or forward slash\n *   \\s*             // Matches any whitespace characters zero or more times\n *   (\\d*(?:\\.\\d+)?%?) // Matches zero or more digits, optionally followed by a decimal point and one or more digits, followed by an optional percentage sign and captures it in a group\n *   \\s*             // Matches any whitespace characters zero or more times\n * )?                // Makes the alpha value group optional\n * \\)                // Matches the closing parenthesis\n * $/i               // Matches the end of the string and sets the regular expression to case-insensitive mode\n *\n * WARNING this regex doesn't fail on off spec colors. It matches everything that could be a color.\n * So the spec does not allow `hsl(30 , 45%  35, 49%)` but this will work anyways for us.\n */\nexport const reHSLa = () =>\n  /^hsla?\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?(?:deg|turn|rad)?)\\s*[\\s|,]\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*[\\s|,]\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*(?:\\s*[,/]\\s*(\\d*(?:\\.\\d+)?%?)\\s*)?\\)$/i;\n\n/**\n * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\n */\nexport const reHex = () => /^#?(([0-9a-f]){3,4}|([0-9a-f]{2}){3,4})$/i;\n","/**\n * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\n * @param {number|string} number number to operate on\n * @param {number} fractionDigits number of fraction digits to \"leave\"\n * @return {number}\n */\nexport const toFixed = (number: number | string, fractionDigits: number) =>\n  parseFloat(Number(number).toFixed(fractionDigits));\n","import { Color } from '../../color/Color';\nimport { config } from '../../config';\nimport { DEFAULT_SVG_FONT_SIZE, FILL, NONE } from '../../constants';\nimport type {\n  TBBox,\n  TMat2D,\n  SVGElementName,\n  SupportedSVGUnit,\n} from '../../typedefs';\nimport { toFixed } from './toFixed';\n\n/**\n * Returns array of attributes for given svg that fabric parses\n * @param {SVGElementName} type Type of svg element (eg. 'circle')\n * @return {Array} string names of supported attributes\n */\nexport const getSvgAttributes = (type: SVGElementName) => {\n  const commonAttributes = ['instantiated_by_use', 'style', 'id', 'class'];\n  switch (type) {\n    case 'linearGradient':\n      return commonAttributes.concat([\n        'x1',\n        'y1',\n        'x2',\n        'y2',\n        'gradientUnits',\n        'gradientTransform',\n      ]);\n    case 'radialGradient':\n      return commonAttributes.concat([\n        'gradientUnits',\n        'gradientTransform',\n        'cx',\n        'cy',\n        'r',\n        'fx',\n        'fy',\n        'fr',\n      ]);\n    case 'stop':\n      return commonAttributes.concat(['offset', 'stop-color', 'stop-opacity']);\n  }\n  return commonAttributes;\n};\n\n/**\n * Converts from attribute value to pixel value if applicable.\n * Returns converted pixels or original value not converted.\n * @param {string} value number to operate on\n * @param {number} fontSize\n * @return {number}\n */\nexport const parseUnit = (value: string, fontSize = DEFAULT_SVG_FONT_SIZE) => {\n  const unit = /\\D{0,2}$/.exec(value),\n    number = parseFloat(value);\n  const dpi = config.DPI;\n  switch (unit?.[0] as SupportedSVGUnit) {\n    case 'mm':\n      return (number * dpi) / 25.4;\n\n    case 'cm':\n      return (number * dpi) / 2.54;\n\n    case 'in':\n      return number * dpi;\n\n    case 'pt':\n      return (number * dpi) / 72; // or * 4 / 3\n\n    case 'pc':\n      return ((number * dpi) / 72) * 12; // or * 16\n\n    case 'em':\n      return number * fontSize;\n\n    default:\n      return number;\n  }\n};\n\nexport type MeetOrSlice = 'meet' | 'slice';\n\nexport type MinMidMax = 'Min' | 'Mid' | 'Max' | 'none';\n\nexport type TPreserveArParsed = {\n  meetOrSlice: MeetOrSlice;\n  alignX: MinMidMax;\n  alignY: MinMidMax;\n};\n\n// align can be either none or undefined or a combination of mid/max\nconst parseAlign = (align: string): MinMidMax[] => {\n  //divide align in alignX and alignY\n  if (align && align !== NONE) {\n    return [align.slice(1, 4) as MinMidMax, align.slice(5, 8) as MinMidMax];\n  } else if (align === NONE) {\n    return [align, align];\n  }\n  return ['Mid', 'Mid'];\n};\n\n/**\n * Parse preserveAspectRatio attribute from element\n * https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/preserveAspectRatio\n * @param {string} attribute to be parsed\n * @return {Object} an object containing align and meetOrSlice attribute\n */\nexport const parsePreserveAspectRatioAttribute = (\n  attribute: string,\n): TPreserveArParsed => {\n  const [firstPart, secondPart] = attribute.trim().split(' ') as [\n    MinMidMax,\n    MeetOrSlice | undefined,\n  ];\n  const [alignX, alignY] = parseAlign(firstPart);\n  return {\n    meetOrSlice: secondPart || 'meet',\n    alignX,\n    alignY,\n  };\n};\n\n/**\n * given an array of 6 number returns something like `\"matrix(...numbers)\"`\n * @param {TMat2D} transform an array with 6 numbers\n * @return {String} transform matrix for svg\n */\nexport const matrixToSVG = (transform: TMat2D) =>\n  'matrix(' +\n  transform\n    .map((value) => toFixed(value, config.NUM_FRACTION_DIGITS))\n    .join(' ') +\n  ')';\n\n/**\n * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\n * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\n * @param prop\n * @param value\n * @param {boolean} inlineStyle The default is inline style, the separator used is \":\", The other is \"=\"\n * @returns\n */\nexport const colorPropToSVG = (\n  prop: string,\n  value?: any,\n  inlineStyle = true,\n) => {\n  let colorValue;\n  let opacityValue;\n  if (!value) {\n    colorValue = 'none';\n  } else if (value.toLive) {\n    colorValue = `url(#SVGID_${value.id})`;\n  } else {\n    const color = new Color(value),\n      opacity = color.getAlpha();\n\n    colorValue = color.toRgb();\n    if (opacity !== 1) {\n      opacityValue = opacity.toString();\n    }\n  }\n  if (inlineStyle) {\n    return `${prop}: ${colorValue}; ${\n      opacityValue ? `${prop}-opacity: ${opacityValue}; ` : ''\n    }`;\n  } else {\n    return `${prop}=\"${colorValue}\" ${\n      opacityValue ? `${prop}-opacity=\"${opacityValue}\" ` : ''\n    }`;\n  }\n};\n\nexport const createSVGRect = (\n  color: string,\n  { left, top, width, height }: TBBox,\n  precision = config.NUM_FRACTION_DIGITS,\n) => {\n  const svgColor = colorPropToSVG(FILL, color, false);\n  const [x, y, w, h] = [left, top, width, height].map((value) =>\n    toFixed(value, precision),\n  );\n  return `<rect ${svgColor} x=\"${x}\" y=\"${y}\" width=\"${w}\" height=\"${h}\"></rect>`;\n};\n","import type { FabricObject } from '../shapes/Object/Object';\nimport type { TFiller } from '../typedefs';\nimport type { FabricText } from '../shapes/Text/Text';\nimport type { Pattern } from '../Pattern';\nimport type { Path } from '../shapes/Path';\nimport type { ActiveSelection } from '../shapes/ActiveSelection';\n\nexport const isFiller = (\n  filler: TFiller | string | null,\n): filler is TFiller => {\n  return !!filler && (filler as TFiller).toLive !== undefined;\n};\n\nexport const isSerializableFiller = (\n  filler: TFiller | string | null,\n): filler is TFiller => {\n  return !!filler && typeof (filler as TFiller).toObject === 'function';\n};\n\nexport const isPattern = (filler: TFiller): filler is Pattern => {\n  return (\n    !!filler && (filler as Pattern).offsetX !== undefined && 'source' in filler\n  );\n};\n\nexport const isTextObject = (\n  fabricObject?: FabricObject,\n): fabricObject is FabricText => {\n  return (\n    !!fabricObject &&\n    typeof (fabricObject as FabricText)._renderText === 'function'\n  );\n};\n\nexport const isPath = (fabricObject?: FabricObject): fabricObject is Path => {\n  // we could use instanceof but that would mean pulling in Text code for a simple check\n  // @todo discuss what to do and how to do\n  return (\n    !!fabricObject &&\n    typeof (fabricObject as Path)._renderPathCommands === 'function'\n  );\n};\n\nexport const isActiveSelection = (\n  fabricObject?: FabricObject,\n): fabricObject is ActiveSelection =>\n  !!fabricObject && 'multiSelectionStacking' in fabricObject;\n","/**\n * Returns element scroll offsets\n * @param {HTMLElement} element Element to operate on\n * @return {Object} Object with left/top values\n */\nexport function getScrollLeftTop(element: HTMLElement | null) {\n  const doc = element && getDocumentFromElement(element);\n  let left = 0,\n    top = 0;\n  if (!element || !doc) {\n    return { left, top };\n  }\n  let elementLoop: HTMLElement | Document | ShadowRoot = element;\n  const docElement = doc.documentElement,\n    body = doc.body || {\n      scrollLeft: 0,\n      scrollTop: 0,\n    };\n  // While loop checks (and then sets element to) .parentNode OR .host\n  //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\n  //  but the .parentNode of a root ShadowDOM node will always be null, instead\n  //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\n  while (\n    elementLoop &&\n    (elementLoop.parentNode || (elementLoop as unknown as ShadowRoot).host)\n  ) {\n    elementLoop = (elementLoop.parentNode ||\n      (elementLoop as unknown as ShadowRoot).host) as\n      | HTMLElement\n      | Document\n      | ShadowRoot;\n    if (elementLoop === doc) {\n      left = body.scrollLeft || docElement.scrollLeft || 0;\n      top = body.scrollTop || docElement.scrollTop || 0;\n    } else {\n      left += (elementLoop as HTMLElement).scrollLeft || 0;\n      top += (elementLoop as HTMLElement).scrollTop || 0;\n    }\n\n    if (\n      elementLoop.nodeType === 1 &&\n      (elementLoop as HTMLElement).style.position === 'fixed'\n    ) {\n      break;\n    }\n  }\n\n  return { left, top };\n}\n\nexport const getDocumentFromElement = (el: HTMLElement) =>\n  el.ownerDocument || null;\n\nexport const getWindowFromElement = (el: HTMLElement) =>\n  el.ownerDocument?.defaultView || null;\n","import { NONE } from '../../constants';\nimport type { TSize } from '../../typedefs';\nimport {\n  getDocumentFromElement,\n  getWindowFromElement,\n  getScrollLeftTop,\n} from '../../util/dom_misc';\n\nexport const setCanvasDimensions = (\n  el: HTMLCanvasElement,\n  ctx: CanvasRenderingContext2D,\n  { width, height }: TSize,\n  retinaScaling = 1,\n) => {\n  el.width = width;\n  el.height = height;\n  if (retinaScaling > 1) {\n    el.setAttribute('width', (width * retinaScaling).toString());\n    el.setAttribute('height', (height * retinaScaling).toString());\n    ctx.scale(retinaScaling, retinaScaling);\n  }\n};\n\nexport type CSSDimensions = {\n  width: number | string;\n  height: number | string;\n};\n\nexport const setCSSDimensions = (\n  el: HTMLElement,\n  { width, height }: Partial<CSSDimensions>,\n) => {\n  width && (el.style.width = typeof width === 'number' ? `${width}px` : width);\n  height &&\n    (el.style.height = typeof height === 'number' ? `${height}px` : height);\n};\n\n/**\n * Returns offset for a given element\n * @param {HTMLElement} element Element to get offset for\n * @return {Object} Object with \"left\" and \"top\" properties\n */\nexport function getElementOffset(element: HTMLElement) {\n  const doc = element && getDocumentFromElement(element),\n    offset = { left: 0, top: 0 };\n\n  if (!doc) {\n    return offset;\n  }\n  const elemStyle: CSSStyleDeclaration =\n    getWindowFromElement(element)?.getComputedStyle(element, null) ||\n    ({} as CSSStyleDeclaration);\n  offset.left += parseInt(elemStyle.borderLeftWidth, 10) || 0;\n  offset.top += parseInt(elemStyle.borderTopWidth, 10) || 0;\n  offset.left += parseInt(elemStyle.paddingLeft, 10) || 0;\n  offset.top += parseInt(elemStyle.paddingTop, 10) || 0;\n\n  let box = { left: 0, top: 0 };\n\n  const docElem = doc.documentElement;\n  if (typeof element.getBoundingClientRect !== 'undefined') {\n    box = element.getBoundingClientRect();\n  }\n\n  const scrollLeftTop = getScrollLeftTop(element);\n\n  return {\n    left:\n      box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n    top: box.top + scrollLeftTop.top - (docElem.clientTop || 0) + offset.top,\n  };\n}\n\n/**\n * Makes element unselectable\n * @param {HTMLElement} element Element to make unselectable\n * @return {HTMLElement} Element that was passed in\n */\nexport function makeElementUnselectable(element: HTMLElement) {\n  if (typeof element.onselectstart !== 'undefined') {\n    element.onselectstart = () => false;\n  }\n  element.style.userSelect = NONE;\n  return element;\n}\n","import { getEnv, getFabricDocument } from '../../env';\nimport type { TSize } from '../../typedefs';\nimport type { CSSDimensions } from './util';\nimport { setCSSDimensions, getElementOffset } from './util';\nimport { createCanvasElement, isHTMLCanvas } from '../../util/misc/dom';\nimport { setCanvasDimensions } from './util';\nimport { FabricError } from '../../util/internals/console';\n\nexport type CanvasItem = {\n  el: HTMLCanvasElement;\n  ctx: CanvasRenderingContext2D;\n};\n\nexport class StaticCanvasDOMManager {\n  /**\n   * Keeps a copy of the canvas style before setting retina scaling and other potions\n   * in order to return it to original state on dispose\n   * @type string\n   */\n  private _originalCanvasStyle?: string;\n\n  lower: CanvasItem;\n\n  constructor(arg0?: string | HTMLCanvasElement) {\n    const el = this.createLowerCanvas(arg0);\n    this.lower = { el, ctx: el.getContext('2d')! };\n  }\n\n  protected createLowerCanvas(arg0?: HTMLCanvasElement | string) {\n    // canvasEl === 'HTMLCanvasElement' does not work on jsdom/node\n    const el = isHTMLCanvas(arg0)\n      ? arg0\n      : (arg0 &&\n          (getFabricDocument().getElementById(arg0) as HTMLCanvasElement)) ||\n        createCanvasElement();\n    if (el.hasAttribute('data-fabric')) {\n      throw new FabricError(\n        'Trying to initialize a canvas that has already been initialized. Did you forget to dispose the canvas?',\n      );\n    }\n    this._originalCanvasStyle = el.style.cssText;\n    el.setAttribute('data-fabric', 'main');\n    el.classList.add('lower-canvas');\n    return el;\n  }\n\n  cleanupDOM({ width, height }: TSize) {\n    const { el } = this.lower;\n    // restore canvas style and attributes\n    el.classList.remove('lower-canvas');\n    el.removeAttribute('data-fabric');\n    // restore canvas size to original size in case retina scaling was applied\n    el.setAttribute('width', `${width}`);\n    el.setAttribute('height', `${height}`);\n    el.style.cssText = this._originalCanvasStyle || '';\n    this._originalCanvasStyle = undefined;\n  }\n\n  setDimensions(size: TSize, retinaScaling: number) {\n    const { el, ctx } = this.lower;\n    setCanvasDimensions(el, ctx, size, retinaScaling);\n  }\n\n  setCSSDimensions(size: Partial<CSSDimensions>) {\n    setCSSDimensions(this.lower.el, size);\n  }\n\n  /**\n   * Calculates canvas element offset relative to the document\n   */\n  calcOffset() {\n    return getElementOffset(this.lower.el);\n  }\n\n  dispose() {\n    getEnv().dispose(this.lower.el);\n    // @ts-expect-error disposing\n    delete this.lower;\n  }\n}\n","import { iMatrix } from '../constants';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { TFiller, TMat2D, TOptions } from '../typedefs';\n\ninterface CanvasDrawableOptions {\n  /**\n   * if set to false background image is not affected by viewport transform\n   * @since 1.6.3\n   * @type Boolean\n   * @todo we should really find a different way to do this\n   * @default\n   */\n  backgroundVpt: boolean;\n\n  /**\n   * Background color of canvas instance.\n   * @type {(String|TFiller)}\n   * @default\n   */\n  backgroundColor: TFiller | string;\n\n  /**\n   * Background image of canvas instance.\n   * since 2.4.0 image caching is active, please when putting an image as background, add to the\n   * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\n   * vale. As an alternative you can disable image objectCaching\n   * @type FabricObject\n   * @default\n   */\n  backgroundImage?: FabricObject;\n\n  /**\n   * if set to false overlay image is not affected by viewport transform\n   * @since 1.6.3\n   * @type Boolean\n   * @todo we should really find a different way to do this\n   * @default\n   */\n  overlayVpt: boolean;\n\n  /**\n   * Overlay color of canvas instance.\n   * @since 1.3.9\n   * @type {(String|TFiller)}\n   * @default\n   */\n  overlayColor: TFiller | string;\n\n  /**\n   * Overlay image of canvas instance.\n   * since 2.4.0 image caching is active, please when putting an image as overlay, add to the\n   * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\n   * vale. As an alternative you can disable image objectCaching\n   * @type FabricObject\n   * @default\n   */\n  overlayImage?: FabricObject;\n}\n\ninterface CanvasRenderingOptions {\n  /**\n   * Indicates whether {@link StaticCanvas#add}, {@link StaticCanvas#insertAt} and {@link StaticCanvas#remove},\n   * {@link StaticCanvas#moveTo}, {@link StaticCanvas#clear} and many more, should also re-render canvas.\n   * Disabling this option will not give a performance boost when adding/removing a lot of objects to/from canvas at once\n   * since the renders are queued and executed one per frame.\n   * Disabling is suggested anyway and managing the renders of the app manually is not a big effort ( canvas.requestRenderAll() )\n   * Left default to true to do not break documentation and old app, fiddles.\n   * @type Boolean\n   * @default\n   */\n  renderOnAddRemove: boolean;\n\n  /**\n   * Based on vptCoords and object.aCoords, skip rendering of objects that\n   * are not included in current viewport.\n   * May greatly help in applications with crowded canvas and use of zoom/pan\n   * If One of the corner of the bounding box of the object is on the canvas\n   * the objects get rendered.\n   * @type Boolean\n   * @default true\n   */\n  skipOffscreen: boolean;\n\n  /**\n   * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\n   * @type Boolean\n   * @default\n   */\n  enableRetinaScaling: boolean;\n\n  /**\n   * Indicates whether this canvas will use image smoothing, this is on by default in browsers\n   * @type Boolean\n   * @default\n   */\n  imageSmoothingEnabled: boolean;\n\n  /**\n   * a fabricObject that, without stroke define a clipping area with their shape. filled in black\n   * the clipPath object gets used when the canvas has rendered, and the context is placed in the\n   * top left corner of the canvas.\n   * clipPath will clip away controls, if you do not want this to happen use controlsAboveOverlay = true\n   * @type FabricObject\n   */\n  clipPath?: FabricObject;\n}\n\nexport interface CanvasExportOptions {\n  /**\n   * Indicates whether toObject/toDatalessObject should include default values\n   * if set to false, takes precedence over the object value.\n   * @type Boolean\n   * @default\n   */\n  includeDefaultValues: boolean;\n\n  /**\n   * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\n   * a zoomed canvas will then produce zoomed SVG output.\n   * @type Boolean\n   * @default\n   */\n  svgViewportTransformation: boolean;\n}\n\nexport interface StaticCanvasOptions\n  extends CanvasDrawableOptions,\n    CanvasRenderingOptions,\n    CanvasExportOptions {\n  /**\n   * Width in virtual/logical pixels of the canvas.\n   * The canvas can be larger than width if retina scaling is active\n   * @type number\n   */\n  width: number;\n\n  /**\n   * Height in virtual/logical pixels of the canvas.\n   * The canvas can be taller than width if retina scaling is active\n   * @type height\n   */\n  height: number;\n\n  /**\n   * Indicates whether object controls (borders/controls) are rendered above overlay image\n   * @type Boolean\n   * @default\n   *\n   * @todo move to Canvas\n   */\n  controlsAboveOverlay: boolean;\n\n  /**\n   * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\n   * It gives PRIORITY to DOM scrolling, it doesn't make it always possible.\n   * If is true, when using a touch event on the canvas, the canvas will scroll if scroll is possible.\n   * If we are in drawing mode or if we are selecting an object the canvas preventDefault and so it won't scroll\n   * @type Boolean\n   * @default\n   *\n   * @todo move to Canvas\n   */\n  allowTouchScrolling: boolean;\n\n  /**\n   * The transformation (a Canvas 2D API transform matrix) which focuses the viewport\n   * @type Array\n   * @example <caption>Default transform</caption>\n   * canvas.viewportTransform = [1, 0, 0, 1, 0, 0];\n   * @example <caption>Scale by 70% and translate toward bottom-right by 50, without skewing</caption>\n   * canvas.viewportTransform = [0.7, 0, 0, 0.7, 50, 50];\n   * @default\n   */\n  viewportTransform: TMat2D;\n}\n\nexport const staticCanvasDefaults: TOptions<StaticCanvasOptions> = {\n  backgroundVpt: true,\n  backgroundColor: '',\n  overlayVpt: true,\n  overlayColor: '',\n\n  includeDefaultValues: true,\n  svgViewportTransformation: true,\n\n  renderOnAddRemove: true,\n  skipOffscreen: true,\n  enableRetinaScaling: true,\n  imageSmoothingEnabled: true,\n\n  /**\n   * @todo move to Canvas\n   */\n  controlsAboveOverlay: false,\n  /**\n   * @todo move to Canvas\n   */\n  allowTouchScrolling: false,\n\n  viewportTransform: [...iMatrix],\n};\n","import { config } from '../config';\nimport { CENTER, VERSION } from '../constants';\nimport type { CanvasEvents, StaticCanvasEvents } from '../EventTypeDefs';\nimport type { Gradient } from '../gradient/Gradient';\nimport { createCollectionMixin, isCollection } from '../Collection';\nimport { CommonMethods } from '../CommonMethods';\nimport type { Pattern } from '../Pattern';\nimport { Point } from '../Point';\nimport type { TCachedFabricObject } from '../shapes/Object/Object';\nimport type {\n  Abortable,\n  Constructor,\n  TCornerPoint,\n  TDataUrlOptions,\n  TFiller,\n  TMat2D,\n  TSize,\n  TSVGReviver,\n  TToCanvasElementOptions,\n  TValidToObjectMethod,\n  TOptions,\n} from '../typedefs';\nimport {\n  cancelAnimFrame,\n  requestAnimFrame,\n} from '../util/animation/AnimationFrameProvider';\nimport { runningAnimations } from '../util/animation/AnimationRegistry';\nimport { uid } from '../util/internals/uid';\nimport { createCanvasElementFor, toDataURL } from '../util/misc/dom';\nimport { invertTransform, transformPoint } from '../util/misc/matrix';\nimport type { EnlivenObjectOptions } from '../util/misc/objectEnlive';\nimport {\n  enlivenObjectEnlivables,\n  enlivenObjects,\n} from '../util/misc/objectEnlive';\nimport { pick } from '../util/misc/pick';\nimport { matrixToSVG } from '../util/misc/svgParsing';\nimport { toFixed } from '../util/misc/toFixed';\nimport { isFiller, isPattern, isTextObject } from '../util/typeAssertions';\nimport { StaticCanvasDOMManager } from './DOMManagers/StaticCanvasDOMManager';\nimport type { CSSDimensions } from './DOMManagers/util';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { StaticCanvasOptions } from './StaticCanvasOptions';\nimport { staticCanvasDefaults } from './StaticCanvasOptions';\nimport { log, FabricError } from '../util/internals/console';\nimport { getDevicePixelRatio } from '../env';\n\n/**\n * Having both options in TCanvasSizeOptions set to true transform the call in a calcOffset\n * Better try to restrict with types to avoid confusion.\n */\nexport type TCanvasSizeOptions =\n  | {\n      backstoreOnly?: true;\n      cssOnly?: false;\n    }\n  | {\n      backstoreOnly?: false;\n      cssOnly?: true;\n    };\n\nexport type TSVGExportOptions = {\n  suppressPreamble?: boolean;\n  viewBox?: {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n  };\n  encoding?: 'UTF-8'; // test Encoding type and see what happens\n  width?: string;\n  height?: string;\n  reviver?: TSVGReviver;\n};\n\n/**\n * Static canvas class\n * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\n * @fires before:render\n * @fires after:render\n * @fires canvas:cleared\n * @fires object:added\n * @fires object:removed\n */\n// TODO: fix `EventSpec` inheritance https://github.com/microsoft/TypeScript/issues/26154#issuecomment-1366616260\nexport class StaticCanvas<\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    EventSpec extends StaticCanvasEvents = StaticCanvasEvents,\n  >\n  extends createCollectionMixin(CommonMethods<CanvasEvents>)\n  implements StaticCanvasOptions\n{\n  declare width: number;\n  declare height: number;\n\n  // background\n  declare backgroundVpt: boolean;\n  declare backgroundColor: TFiller | string;\n  declare backgroundImage?: FabricObject;\n  // overlay\n  declare overlayVpt: boolean;\n  declare overlayColor: TFiller | string;\n  declare overlayImage?: FabricObject;\n\n  declare clipPath?: FabricObject;\n\n  declare includeDefaultValues: boolean;\n\n  // rendering config\n  declare renderOnAddRemove: boolean;\n  declare skipOffscreen: boolean;\n  declare enableRetinaScaling: boolean;\n  declare imageSmoothingEnabled: boolean;\n\n  /**\n   * @todo move to Canvas\n   */\n  declare controlsAboveOverlay: boolean;\n\n  /**\n   * @todo move to Canvas\n   */\n  declare allowTouchScrolling: boolean;\n\n  declare viewportTransform: TMat2D;\n\n  /**\n   * The viewport bounding box in scene plane coordinates, see {@link calcViewportBoundaries}\n   */\n  declare vptCoords: TCornerPoint;\n\n  /**\n   * A reference to the canvas actual HTMLCanvasElement.\n   * Can be use to read the raw pixels, but never write or manipulate\n   * @type HTMLCanvasElement\n   */\n  get lowerCanvasEl() {\n    return this.elements.lower?.el;\n  }\n\n  get contextContainer() {\n    return this.elements.lower?.ctx;\n  }\n\n  /**\n   * If true the Canvas is in the process or has been disposed/destroyed.\n   * No more rendering operation will be executed on this canvas.\n   * @type boolean\n   */\n  declare destroyed?: boolean;\n\n  /**\n   * Started the process of disposing but not done yet.\n   * WIll likely complete the render cycle already scheduled but stopping adding more.\n   * @type boolean\n   */\n  declare disposed?: boolean;\n\n  declare _offset: { left: number; top: number };\n  protected declare hasLostContext: boolean;\n  protected declare nextRenderHandle: number;\n\n  declare elements: StaticCanvasDOMManager;\n\n  /**\n   * When true control drawing is skipped.\n   * This boolean is used to avoid toDataURL to export controls.\n   * Usage of this boolean to build up other flows and features is not supported\n   * @type Boolean\n   * @default false\n   */\n  protected declare skipControlsDrawing: boolean;\n\n  static ownDefaults = staticCanvasDefaults;\n\n  // reference to\n  protected declare __cleanupTask?: {\n    (): void;\n    kill: (reason?: any) => void;\n  };\n\n  static getDefaults(): Record<string, any> {\n    return StaticCanvas.ownDefaults;\n  }\n\n  constructor(\n    el?: string | HTMLCanvasElement,\n    options: TOptions<StaticCanvasOptions> = {},\n  ) {\n    super();\n    Object.assign(\n      this,\n      (this.constructor as typeof StaticCanvas).getDefaults(),\n    );\n    this.set(options);\n    this.initElements(el);\n    this._setDimensionsImpl({\n      width: this.width || this.elements.lower.el.width || 0,\n      height: this.height || this.elements.lower.el.height || 0,\n    });\n    this.skipControlsDrawing = false;\n    this.viewportTransform = [...this.viewportTransform];\n    this.calcViewportBoundaries();\n  }\n\n  protected initElements(el?: string | HTMLCanvasElement) {\n    this.elements = new StaticCanvasDOMManager(el);\n  }\n\n  add(...objects: FabricObject[]) {\n    const size = super.add(...objects);\n    objects.length > 0 && this.renderOnAddRemove && this.requestRenderAll();\n    return size;\n  }\n\n  insertAt(index: number, ...objects: FabricObject[]) {\n    const size = super.insertAt(index, ...objects);\n    objects.length > 0 && this.renderOnAddRemove && this.requestRenderAll();\n    return size;\n  }\n\n  remove(...objects: FabricObject[]) {\n    const removed = super.remove(...objects);\n    removed.length > 0 && this.renderOnAddRemove && this.requestRenderAll();\n    return removed;\n  }\n\n  _onObjectAdded(obj: FabricObject) {\n    if (obj.canvas && (obj.canvas as StaticCanvas) !== this) {\n      log(\n        'warn',\n        'Canvas is trying to add an object that belongs to a different canvas.\\n' +\n          'Resulting to default behavior: removing object from previous canvas and adding to new canvas',\n      );\n      obj.canvas.remove(obj);\n    }\n    obj._set('canvas', this);\n    obj.setCoords();\n    this.fire('object:added', { target: obj });\n    obj.fire('added', { target: this });\n  }\n\n  _onObjectRemoved(obj: FabricObject) {\n    obj._set('canvas', undefined);\n    this.fire('object:removed', { target: obj });\n    obj.fire('removed', { target: this });\n  }\n\n  _onStackOrderChanged() {\n    this.renderOnAddRemove && this.requestRenderAll();\n  }\n\n  /**\n   * @private\n   * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n   * @return {Number} retinaScaling if applied, otherwise 1;\n   */\n  getRetinaScaling() {\n    return this.enableRetinaScaling ? getDevicePixelRatio() : 1;\n  }\n\n  /**\n   * Calculates canvas element offset relative to the document\n   * This method is also attached as \"resize\" event handler of window\n   */\n  calcOffset() {\n    return (this._offset = this.elements.calcOffset());\n  }\n\n  /**\n   * Returns canvas width (in px)\n   * @return {Number}\n   */\n  getWidth(): number {\n    return this.width;\n  }\n\n  /**\n   * Returns canvas height (in px)\n   * @return {Number}\n   */\n  getHeight(): number {\n    return this.height;\n  }\n\n  /**\n   * Sets width of this canvas instance\n   * @param {Number|String} value                         Value to set width to\n   * @param {Object}        [options]                     Options object\n   * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n   * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n   * @deprecated will be removed in 7.0\n   */\n  setWidth(\n    value: TSize['width'],\n    options?: { backstoreOnly?: true; cssOnly?: false },\n  ): void;\n  setWidth(\n    value: CSSDimensions['width'],\n    options?: { cssOnly?: true; backstoreOnly?: false },\n  ): void;\n  setWidth(value: number, options?: never) {\n    return this.setDimensions({ width: value }, options);\n  }\n\n  /**s\n   * Sets height of this canvas instance\n   * @param {Number|String} value                         Value to set height to\n   * @param {Object}        [options]                     Options object\n   * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n   * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n   * @deprecated will be removed in 7.0\n   */\n  setHeight(\n    value: TSize['height'],\n    options?: { backstoreOnly?: true; cssOnly?: false },\n  ): void;\n  setHeight(\n    value: CSSDimensions['height'],\n    options?: { cssOnly?: true; backstoreOnly?: false },\n  ): void;\n  setHeight(value: CSSDimensions['height'], options?: never) {\n    return this.setDimensions({ height: value }, options);\n  }\n\n  /**\n   * Internal use only\n   * @protected\n   */\n  protected _setDimensionsImpl(\n    dimensions: Partial<TSize | CSSDimensions>,\n    { cssOnly = false, backstoreOnly = false }: TCanvasSizeOptions = {},\n  ) {\n    if (!cssOnly) {\n      const size = {\n        width: this.width,\n        height: this.height,\n        ...(dimensions as Partial<TSize>),\n      };\n      this.elements.setDimensions(size, this.getRetinaScaling());\n      this.hasLostContext = true;\n      this.width = size.width;\n      this.height = size.height;\n    }\n    if (!backstoreOnly) {\n      this.elements.setCSSDimensions(dimensions);\n    }\n\n    this.calcOffset();\n  }\n\n  /**\n   * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n   * @param {Object}        dimensions                    Object with width/height properties\n   * @param {Number|String} [dimensions.width]            Width of canvas element\n   * @param {Number|String} [dimensions.height]           Height of canvas element\n   * @param {Object}        [options]                     Options object\n   * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n   * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n   */\n  setDimensions(\n    dimensions: Partial<CSSDimensions>,\n    options?: { cssOnly?: true; backstoreOnly?: false },\n  ): void;\n  setDimensions(\n    dimensions: Partial<TSize>,\n    options?: { backstoreOnly?: true; cssOnly?: false },\n  ): void;\n  setDimensions(dimensions: Partial<TSize>, options?: never): void;\n  setDimensions(\n    dimensions: Partial<TSize | CSSDimensions>,\n    options?: TCanvasSizeOptions,\n  ) {\n    this._setDimensionsImpl(dimensions, options);\n    if (!options || !options.cssOnly) {\n      this.requestRenderAll();\n    }\n  }\n\n  /**\n   * Returns canvas zoom level\n   * @return {Number}\n   */\n  getZoom() {\n    return this.viewportTransform[0];\n  }\n\n  /**\n   * Sets viewport transformation of this canvas instance\n   * @param {Array} vpt a Canvas 2D API transform matrix\n   */\n  setViewportTransform(vpt: TMat2D) {\n    this.viewportTransform = vpt;\n    this.calcViewportBoundaries();\n    this.renderOnAddRemove && this.requestRenderAll();\n  }\n\n  /**\n   * Sets zoom level of this canvas instance, the zoom centered around point\n   * meaning that following zoom to point with the same point will have the visual\n   * effect of the zoom originating from that point. The point won't move.\n   * It has nothing to do with canvas center or visual center of the viewport.\n   * @param {Point} point to zoom with respect to\n   * @param {Number} value to set zoom to, less than 1 zooms out\n   */\n  zoomToPoint(point: Point, value: number) {\n    // TODO: just change the scale, preserve other transformations\n    const before = point,\n      vpt: TMat2D = [...this.viewportTransform];\n    const newPoint = transformPoint(point, invertTransform(vpt));\n    vpt[0] = value;\n    vpt[3] = value;\n    const after = transformPoint(newPoint, vpt);\n    vpt[4] += before.x - after.x;\n    vpt[5] += before.y - after.y;\n    this.setViewportTransform(vpt);\n  }\n\n  /**\n   * Sets zoom level of this canvas instance\n   * @param {Number} value to set zoom to, less than 1 zooms out\n   */\n  setZoom(value: number) {\n    this.zoomToPoint(new Point(0, 0), value);\n  }\n\n  /**\n   * Pan viewport so as to place point at top left corner of canvas\n   * @param {Point} point to move to\n   */\n  absolutePan(point: Point) {\n    const vpt: TMat2D = [...this.viewportTransform];\n    vpt[4] = -point.x;\n    vpt[5] = -point.y;\n    return this.setViewportTransform(vpt);\n  }\n\n  /**\n   * Pans viewpoint relatively\n   * @param {Point} point (position vector) to move by\n   */\n  relativePan(point: Point) {\n    return this.absolutePan(\n      new Point(\n        -point.x - this.viewportTransform[4],\n        -point.y - this.viewportTransform[5],\n      ),\n    );\n  }\n\n  /**\n   * Returns &lt;canvas> element corresponding to this instance\n   * @return {HTMLCanvasElement}\n   */\n  getElement(): HTMLCanvasElement {\n    return this.elements.lower.el;\n  }\n\n  /**\n   * Clears specified context of canvas element\n   * @param {CanvasRenderingContext2D} ctx Context to clear\n   */\n  clearContext(ctx: CanvasRenderingContext2D) {\n    ctx.clearRect(0, 0, this.width, this.height);\n  }\n\n  /**\n   * Returns context of canvas where objects are drawn\n   * @return {CanvasRenderingContext2D}\n   */\n  getContext(): CanvasRenderingContext2D {\n    return this.elements.lower.ctx;\n  }\n\n  /**\n   * Clears all contexts (background, main, top) of an instance\n   */\n  clear() {\n    this.remove(...this.getObjects());\n    this.backgroundImage = undefined;\n    this.overlayImage = undefined;\n    this.backgroundColor = '';\n    this.overlayColor = '';\n    this.clearContext(this.getContext());\n    this.fire('canvas:cleared');\n    this.renderOnAddRemove && this.requestRenderAll();\n  }\n\n  /**\n   * Renders the canvas\n   */\n  renderAll() {\n    this.cancelRequestedRender();\n    if (this.destroyed) {\n      return;\n    }\n    this.renderCanvas(this.getContext(), this._objects);\n  }\n\n  /**\n   * Function created to be instance bound at initialization\n   * used in requestAnimationFrame rendering\n   * Let the fabricJS call it. If you call it manually you could have more\n   * animationFrame stacking on to of each other\n   * for an imperative rendering, use canvas.renderAll\n   * @private\n   */\n  renderAndReset() {\n    this.nextRenderHandle = 0;\n    this.renderAll();\n  }\n\n  /**\n   * Append a renderAll request to next animation frame.\n   * unless one is already in progress, in that case nothing is done\n   * a boolean flag will avoid appending more.\n   */\n  requestRenderAll() {\n    if (!this.nextRenderHandle && !this.disposed && !this.destroyed) {\n      this.nextRenderHandle = requestAnimFrame(() => this.renderAndReset());\n    }\n  }\n\n  /**\n   * Calculate the position of the 4 corner of canvas with current viewportTransform.\n   * helps to determinate when an object is in the current rendering viewport\n   */\n  calcViewportBoundaries(): TCornerPoint {\n    const width = this.width,\n      height = this.height,\n      iVpt = invertTransform(this.viewportTransform),\n      a = transformPoint({ x: 0, y: 0 }, iVpt),\n      b = transformPoint({ x: width, y: height }, iVpt),\n      // we don't support vpt flipping\n      // but the code is robust enough to mostly work with flipping\n      min = a.min(b),\n      max = a.max(b);\n    return (this.vptCoords = {\n      tl: min,\n      tr: new Point(max.x, min.y),\n      bl: new Point(min.x, max.y),\n      br: max,\n    });\n  }\n\n  cancelRequestedRender() {\n    if (this.nextRenderHandle) {\n      cancelAnimFrame(this.nextRenderHandle);\n      this.nextRenderHandle = 0;\n    }\n  }\n\n  drawControls(_ctx: CanvasRenderingContext2D) {\n    // Static canvas has no controls\n  }\n\n  /**\n   * Renders background, objects, overlay and controls.\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {Array} objects to render\n   */\n  renderCanvas(ctx: CanvasRenderingContext2D, objects: FabricObject[]) {\n    if (this.destroyed) {\n      return;\n    }\n\n    const v = this.viewportTransform,\n      path = this.clipPath;\n    this.calcViewportBoundaries();\n    this.clearContext(ctx);\n    ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n    // @ts-expect-error node-canvas stuff\n    ctx.patternQuality = 'best';\n    this.fire('before:render', { ctx });\n    this._renderBackground(ctx);\n\n    ctx.save();\n    //apply viewport transform once for all rendering process\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n    this._renderObjects(ctx, objects);\n    ctx.restore();\n    if (!this.controlsAboveOverlay && !this.skipControlsDrawing) {\n      this.drawControls(ctx);\n    }\n    if (path) {\n      path._set('canvas', this);\n      // needed to setup a couple of variables\n      // todo migrate to the newer one\n      path.shouldCache();\n      path._transformDone = true;\n      (path as TCachedFabricObject).renderCache({ forClipping: true });\n      this.drawClipPathOnCanvas(ctx, path as TCachedFabricObject);\n    }\n    this._renderOverlay(ctx);\n    if (this.controlsAboveOverlay && !this.skipControlsDrawing) {\n      this.drawControls(ctx);\n    }\n    this.fire('after:render', { ctx });\n\n    if (this.__cleanupTask) {\n      this.__cleanupTask();\n      this.__cleanupTask = undefined;\n    }\n  }\n\n  /**\n   * Paint the cached clipPath on the lowerCanvasEl\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  drawClipPathOnCanvas(\n    ctx: CanvasRenderingContext2D,\n    clipPath: TCachedFabricObject,\n  ) {\n    const v = this.viewportTransform;\n    ctx.save();\n    ctx.transform(...v);\n    // DEBUG: uncomment this line, comment the following\n    // ctx.globalAlpha = 0.4;\n    ctx.globalCompositeOperation = 'destination-in';\n    clipPath.transform(ctx);\n    ctx.scale(1 / clipPath.zoomX, 1 / clipPath.zoomY);\n    ctx.drawImage(\n      clipPath._cacheCanvas,\n      -clipPath.cacheTranslationX,\n      -clipPath.cacheTranslationY,\n    );\n    ctx.restore();\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {Array} objects to render\n   */\n  _renderObjects(ctx: CanvasRenderingContext2D, objects: FabricObject[]) {\n    for (let i = 0, len = objects.length; i < len; ++i) {\n      objects[i] && objects[i].render(ctx);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {string} property 'background' or 'overlay'\n   */\n  _renderBackgroundOrOverlay(\n    ctx: CanvasRenderingContext2D,\n    property: 'background' | 'overlay',\n  ) {\n    const fill = this[`${property}Color`],\n      object = this[`${property}Image`],\n      v = this.viewportTransform,\n      needsVpt = this[`${property}Vpt`];\n    if (!fill && !object) {\n      return;\n    }\n    const isAFiller = isFiller(fill);\n    if (fill) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(this.width, 0);\n      ctx.lineTo(this.width, this.height);\n      ctx.lineTo(0, this.height);\n      ctx.closePath();\n      ctx.fillStyle = isAFiller ? fill.toLive(ctx /* this */)! : fill;\n      if (needsVpt) {\n        ctx.transform(...v);\n      }\n      if (isAFiller) {\n        ctx.transform(1, 0, 0, 1, fill.offsetX || 0, fill.offsetY || 0);\n        const m = ((fill as Gradient<'linear'>).gradientTransform ||\n          (fill as Pattern).patternTransform) as TMat2D;\n        m && ctx.transform(...m);\n      }\n      ctx.fill();\n      ctx.restore();\n    }\n    if (object) {\n      ctx.save();\n      const { skipOffscreen } = this;\n      // if the object doesn't move with the viewport,\n      // the offscreen concept does not apply;\n      this.skipOffscreen = needsVpt;\n      if (needsVpt) {\n        ctx.transform(...v);\n      }\n      object.render(ctx);\n      this.skipOffscreen = skipOffscreen;\n      ctx.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderBackground(ctx: CanvasRenderingContext2D) {\n    this._renderBackgroundOrOverlay(ctx, 'background');\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderOverlay(ctx: CanvasRenderingContext2D) {\n    this._renderBackgroundOrOverlay(ctx, 'overlay');\n  }\n\n  /**\n   * Returns coordinates of a center of canvas.\n   * Returned value is an object with top and left properties\n   * @return {Object} object with \"top\" and \"left\" number values\n   * @deprecated migrate to `getCenterPoint`\n   */\n  getCenter() {\n    return {\n      top: this.height / 2,\n      left: this.width / 2,\n    };\n  }\n\n  /**\n   * Returns coordinates of a center of canvas.\n   * @return {Point}\n   */\n  getCenterPoint() {\n    return new Point(this.width / 2, this.height / 2);\n  }\n\n  /**\n   * Centers object horizontally in the canvas\n   */\n  centerObjectH(object: FabricObject) {\n    return this._centerObject(\n      object,\n      new Point(this.getCenterPoint().x, object.getCenterPoint().y),\n    );\n  }\n\n  /**\n   * Centers object vertically in the canvas\n   * @param {FabricObject} object Object to center vertically\n   */\n  centerObjectV(object: FabricObject) {\n    return this._centerObject(\n      object,\n      new Point(object.getCenterPoint().x, this.getCenterPoint().y),\n    );\n  }\n\n  /**\n   * Centers object vertically and horizontally in the canvas\n   * @param {FabricObject} object Object to center vertically and horizontally\n   */\n  centerObject(object: FabricObject) {\n    return this._centerObject(object, this.getCenterPoint());\n  }\n\n  /**\n   * Centers object vertically and horizontally in the viewport\n   * @param {FabricObject} object Object to center vertically and horizontally\n   */\n  viewportCenterObject(object: FabricObject) {\n    return this._centerObject(object, this.getVpCenter());\n  }\n\n  /**\n   * Centers object horizontally in the viewport, object.top is unchanged\n   * @param {FabricObject} object Object to center vertically and horizontally\n   */\n  viewportCenterObjectH(object: FabricObject) {\n    return this._centerObject(\n      object,\n      new Point(this.getVpCenter().x, object.getCenterPoint().y),\n    );\n  }\n\n  /**\n   * Centers object Vertically in the viewport, object.top is unchanged\n   * @param {FabricObject} object Object to center vertically and horizontally\n   */\n  viewportCenterObjectV(object: FabricObject) {\n    return this._centerObject(\n      object,\n      new Point(object.getCenterPoint().x, this.getVpCenter().y),\n    );\n  }\n\n  /**\n   * Calculate the point in canvas that correspond to the center of actual viewport.\n   * @return {Point} vpCenter, viewport center\n   */\n  getVpCenter(): Point {\n    return transformPoint(\n      this.getCenterPoint(),\n      invertTransform(this.viewportTransform),\n    );\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} object Object to center\n   * @param {Point} center Center point\n   */\n  _centerObject(object: FabricObject, center: Point) {\n    object.setXY(center, CENTER, CENTER);\n    object.setCoords();\n    this.renderOnAddRemove && this.requestRenderAll();\n  }\n\n  /**\n   * Returns dataless JSON representation of canvas\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {String} json string\n   */\n  toDatalessJSON(propertiesToInclude?: string[]) {\n    return this.toDatalessObject(propertiesToInclude);\n  }\n\n  /**\n   * Returns object representation of canvas\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject(propertiesToInclude?: string[]) {\n    return this._toObjectMethod('toObject', propertiesToInclude);\n  }\n\n  /**\n   * Returns Object representation of canvas\n   * this alias is provided because if you call JSON.stringify on an instance,\n   * the toJSON object will be invoked if it exists.\n   * Having a toJSON method means you can do JSON.stringify(myCanvas)\n   * @return {Object} JSON compatible object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n   * @example <caption>JSON without additional properties</caption>\n   * var json = canvas.toJSON();\n   * @example <caption>JSON with additional properties included</caption>\n   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY']);\n   * @example <caption>JSON without default values</caption>\n   * var json = canvas.toJSON();\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Returns dataless object representation of canvas\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toDatalessObject(propertiesToInclude?: string[]) {\n    return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n  }\n\n  /**\n   * @private\n   */\n  _toObjectMethod(\n    methodName: TValidToObjectMethod,\n    propertiesToInclude?: string[],\n  ) {\n    const clipPath = this.clipPath;\n    const clipPathData =\n      clipPath && !clipPath.excludeFromExport\n        ? this._toObject(clipPath, methodName, propertiesToInclude)\n        : null;\n    return {\n      version: VERSION,\n      ...pick(this, propertiesToInclude as (keyof this)[]),\n      objects: this._objects\n        .filter((object) => !object.excludeFromExport)\n        .map((instance) =>\n          this._toObject(instance, methodName, propertiesToInclude),\n        ),\n      ...this.__serializeBgOverlay(methodName, propertiesToInclude),\n      ...(clipPathData ? { clipPath: clipPathData } : null),\n    };\n  }\n\n  /**\n   * @private\n   */\n  protected _toObject(\n    instance: FabricObject,\n    methodName: TValidToObjectMethod,\n    propertiesToInclude?: string[],\n  ) {\n    let originalValue;\n\n    if (!this.includeDefaultValues) {\n      originalValue = instance.includeDefaultValues;\n      instance.includeDefaultValues = false;\n    }\n\n    const object = instance[methodName](propertiesToInclude);\n    if (!this.includeDefaultValues) {\n      instance.includeDefaultValues = !!originalValue;\n    }\n    return object;\n  }\n\n  /**\n   * @private\n   */\n  __serializeBgOverlay(\n    methodName: TValidToObjectMethod,\n    propertiesToInclude?: string[],\n  ) {\n    const data: any = {},\n      bgImage = this.backgroundImage,\n      overlayImage = this.overlayImage,\n      bgColor = this.backgroundColor,\n      overlayColor = this.overlayColor;\n\n    if (isFiller(bgColor)) {\n      if (!bgColor.excludeFromExport) {\n        data.background = bgColor.toObject(propertiesToInclude);\n      }\n    } else if (bgColor) {\n      data.background = bgColor;\n    }\n\n    if (isFiller(overlayColor)) {\n      if (!overlayColor.excludeFromExport) {\n        data.overlay = overlayColor.toObject(propertiesToInclude);\n      }\n    } else if (overlayColor) {\n      data.overlay = overlayColor;\n    }\n\n    if (bgImage && !bgImage.excludeFromExport) {\n      data.backgroundImage = this._toObject(\n        bgImage,\n        methodName,\n        propertiesToInclude,\n      );\n    }\n    if (overlayImage && !overlayImage.excludeFromExport) {\n      data.overlayImage = this._toObject(\n        overlayImage,\n        methodName,\n        propertiesToInclude,\n      );\n    }\n\n    return data;\n  }\n\n  /* _TO_SVG_START_ */\n\n  declare svgViewportTransformation: boolean;\n\n  /**\n   * Returns SVG representation of canvas\n   * @function\n   * @param {Object} [options] Options object for SVG output\n   * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n   * @param {Object} [options.viewBox] SVG viewbox object\n   * @param {Number} [options.viewBox.x] x-coordinate of viewbox\n   * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n   * @param {Number} [options.viewBox.width] Width of viewbox\n   * @param {Number} [options.viewBox.height] Height of viewbox\n   * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n   * @param {String} [options.width] desired width of svg with or without units\n   * @param {String} [options.height] desired height of svg with or without units\n   * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n   * @return {String} SVG string\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n   * @example <caption>Normal SVG output</caption>\n   * var svg = canvas.toSVG();\n   * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n   * var svg = canvas.toSVG({suppressPreamble: true});\n   * @example <caption>SVG output with viewBox attribute</caption>\n   * var svg = canvas.toSVG({\n   *   viewBox: {\n   *     x: 100,\n   *     y: 100,\n   *     width: 200,\n   *     height: 300\n   *   }\n   * });\n   * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n   * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n   * @example <caption>Modify SVG output with reviver function</caption>\n   * var svg = canvas.toSVG(null, function(svg) {\n   *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n   * });\n   */\n  toSVG(options: TSVGExportOptions = {}, reviver?: TSVGReviver) {\n    options.reviver = reviver;\n    const markup: string[] = [];\n\n    this._setSVGPreamble(markup, options);\n    this._setSVGHeader(markup, options);\n    if (this.clipPath) {\n      markup.push(`<g clip-path=\"url(#${this.clipPath.clipPathId})\" >\\n`);\n    }\n    this._setSVGBgOverlayColor(markup, 'background');\n    this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\n    this._setSVGObjects(markup, reviver);\n    if (this.clipPath) {\n      markup.push('</g>\\n');\n    }\n    this._setSVGBgOverlayColor(markup, 'overlay');\n    this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\n\n    markup.push('</svg>');\n\n    return markup.join('');\n  }\n\n  /**\n   * @private\n   */\n  _setSVGPreamble(markup: string[], options: TSVGExportOptions): void {\n    if (options.suppressPreamble) {\n      return;\n    }\n    markup.push(\n      '<?xml version=\"1.0\" encoding=\"',\n      options.encoding || 'UTF-8',\n      '\" standalone=\"no\" ?>\\n',\n      '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\n      '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n',\n    );\n  }\n\n  /**\n   * @private\n   */\n  _setSVGHeader(markup: string[], options: TSVGExportOptions): void {\n    const width = options.width || `${this.width}`,\n      height = options.height || `${this.height}`,\n      NUM_FRACTION_DIGITS = config.NUM_FRACTION_DIGITS,\n      optViewBox = options.viewBox;\n    let viewBox: string;\n    if (optViewBox) {\n      viewBox = `viewBox=\"${optViewBox.x} ${optViewBox.y} ${optViewBox.width} ${optViewBox.height}\" `;\n    } else if (this.svgViewportTransformation) {\n      const vpt = this.viewportTransform;\n      viewBox = `viewBox=\"${toFixed(\n        -vpt[4] / vpt[0],\n        NUM_FRACTION_DIGITS,\n      )} ${toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS)} ${toFixed(\n        this.width / vpt[0],\n        NUM_FRACTION_DIGITS,\n      )} ${toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS)}\" `;\n    } else {\n      viewBox = `viewBox=\"0 0 ${this.width} ${this.height}\" `;\n    }\n\n    markup.push(\n      '<svg ',\n      'xmlns=\"http://www.w3.org/2000/svg\" ',\n      'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\n      'version=\"1.1\" ',\n      'width=\"',\n      width,\n      '\" ',\n      'height=\"',\n      height,\n      '\" ',\n      viewBox,\n      'xml:space=\"preserve\">\\n',\n      '<desc>Created with Fabric.js ',\n      VERSION,\n      '</desc>\\n',\n      '<defs>\\n',\n      this.createSVGFontFacesMarkup(),\n      this.createSVGRefElementsMarkup(),\n      this.createSVGClipPathMarkup(options),\n      '</defs>\\n',\n    );\n  }\n\n  createSVGClipPathMarkup(options: TSVGExportOptions): string {\n    const clipPath = this.clipPath;\n    if (clipPath) {\n      clipPath.clipPathId = `CLIPPATH_${uid()}`;\n      return `<clipPath id=\"${clipPath.clipPathId}\" >\\n${clipPath.toClipPathSVG(\n        options.reviver,\n      )}</clipPath>\\n`;\n    }\n    return '';\n  }\n\n  /**\n   * Creates markup containing SVG referenced elements like patterns, gradients etc.\n   * @return {String}\n   */\n  createSVGRefElementsMarkup(): string {\n    return (['background', 'overlay'] as const)\n      .map((prop) => {\n        const fill = this[`${prop}Color`];\n        if (isFiller(fill)) {\n          const shouldTransform = this[`${prop}Vpt`],\n            vpt = this.viewportTransform,\n            object = {\n              // otherwise circular dependency\n              isType: () => false,\n              width: this.width / (shouldTransform ? vpt[0] : 1),\n              height: this.height / (shouldTransform ? vpt[3] : 1),\n            };\n          return fill.toSVG(object as FabricObject, {\n            additionalTransform: shouldTransform ? matrixToSVG(vpt) : '',\n          });\n        }\n      })\n      .join('');\n  }\n\n  /**\n   * Creates markup containing SVG font faces,\n   * font URLs for font faces must be collected by developers\n   * and are not extracted from the DOM by fabricjs\n   * @param {Array} objects Array of fabric objects\n   * @return {String}\n   */\n  createSVGFontFacesMarkup(): string {\n    const objects: FabricObject[] = [],\n      fontList: Record<string, boolean> = {},\n      fontPaths = config.fontPaths;\n\n    this._objects.forEach(function add(object) {\n      objects.push(object);\n      if (isCollection(object)) {\n        object._objects.forEach(add);\n      }\n    });\n\n    objects.forEach((obj) => {\n      if (!isTextObject(obj)) {\n        return;\n      }\n      const { styles, fontFamily } = obj;\n      if (fontList[fontFamily] || !fontPaths[fontFamily]) {\n        return;\n      }\n      fontList[fontFamily] = true;\n      if (!styles) {\n        return;\n      }\n      Object.values(styles).forEach((styleRow) => {\n        Object.values(styleRow).forEach(({ fontFamily = '' }) => {\n          if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n            fontList[fontFamily] = true;\n          }\n        });\n      });\n    });\n\n    const fontListMarkup = Object.keys(fontList)\n      .map(\n        (fontFamily) =>\n          `\\t\\t@font-face {\\n\\t\\t\\tfont-family: '${fontFamily}';\\n\\t\\t\\tsrc: url('${fontPaths[fontFamily]}');\\n\\t\\t}\\n`,\n      )\n      .join('');\n\n    if (fontListMarkup) {\n      return `\\t<style type=\"text/css\"><![CDATA[\\n${fontListMarkup}]]></style>\\n`;\n    }\n    return '';\n  }\n\n  /**\n   * @private\n   */\n  _setSVGObjects(markup: string[], reviver?: TSVGReviver) {\n    this.forEachObject((fabricObject) => {\n      if (fabricObject.excludeFromExport) {\n        return;\n      }\n      this._setSVGObject(markup, fabricObject, reviver);\n    });\n  }\n\n  /**\n   * This is its own function because the Canvas ( non static ) requires extra code here\n   * @private\n   */\n  _setSVGObject(\n    markup: string[],\n    instance: FabricObject,\n    reviver?: TSVGReviver,\n  ) {\n    markup.push(instance.toSVG(reviver));\n  }\n\n  /**\n   * @private\n   */\n  _setSVGBgOverlayImage(\n    markup: string[],\n    property: 'overlayImage' | 'backgroundImage',\n    reviver?: TSVGReviver,\n  ) {\n    const bgOrOverlay = this[property];\n    if (bgOrOverlay && !bgOrOverlay.excludeFromExport && bgOrOverlay.toSVG) {\n      markup.push(bgOrOverlay.toSVG(reviver));\n    }\n  }\n\n  /**\n   * @TODO this seems to handle patterns but fail at gradients.\n   * @private\n   */\n  _setSVGBgOverlayColor(markup: string[], property: 'background' | 'overlay') {\n    const filler = this[`${property}Color`];\n    if (!filler) {\n      return;\n    }\n    if (isFiller(filler)) {\n      const repeat = (filler as Pattern).repeat || '',\n        finalWidth = this.width,\n        finalHeight = this.height,\n        shouldInvert = this[`${property}Vpt`],\n        additionalTransform = shouldInvert\n          ? matrixToSVG(invertTransform(this.viewportTransform))\n          : '';\n      markup.push(\n        `<rect transform=\"${additionalTransform} translate(${finalWidth / 2},${\n          finalHeight / 2\n        })\" x=\"${filler.offsetX - finalWidth / 2}\" y=\"${\n          filler.offsetY - finalHeight / 2\n        }\" width=\"${\n          (repeat === 'repeat-y' || repeat === 'no-repeat') && isPattern(filler)\n            ? (filler.source as HTMLImageElement).width\n            : finalWidth\n        }\" height=\"${\n          (repeat === 'repeat-x' || repeat === 'no-repeat') && isPattern(filler)\n            ? (filler.source as HTMLImageElement).height\n            : finalHeight\n        }\" fill=\"url(#SVGID_${filler.id})\"></rect>\\n`,\n      );\n    } else {\n      markup.push(\n        '<rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" ',\n        'fill=\"',\n        filler,\n        '\"',\n        '></rect>\\n',\n      );\n    }\n  }\n  /* _TO_SVG_END_ */\n\n  /**\n   * Populates canvas with data from the specified JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n   *\n   * **IMPORTANT**: It is recommended to abort loading tasks before calling this method to prevent race conditions and unnecessary networking\n   *\n   * @param {String|Object} json JSON string or object\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @param {Object} [options] options\n   * @param {AbortSignal} [options.signal] see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @return {Promise<Canvas | StaticCanvas>} instance\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n   * @example <caption>loadFromJSON</caption>\n   * canvas.loadFromJSON(json).then((canvas) => canvas.requestRenderAll());\n   * @example <caption>loadFromJSON with reviver</caption>\n   * canvas.loadFromJSON(json, function(o, object) {\n   *   // `o` = json object\n   *   // `object` = fabric.Object instance\n   *   // ... do some stuff ...\n   * }).then((canvas) => {\n   *   ... canvas is restored, add your code.\n   * });\n   *\n   */\n  loadFromJSON(\n    json: string | Record<string, any>,\n    reviver?: EnlivenObjectOptions['reviver'],\n    { signal }: Abortable = {},\n  ): Promise<this> {\n    if (!json) {\n      return Promise.reject(new FabricError('`json` is undefined'));\n    }\n\n    // parse json if it wasn't already\n    const serialized = typeof json === 'string' ? JSON.parse(json) : json;\n    const {\n      objects = [],\n      backgroundImage,\n      background,\n      overlayImage,\n      overlay,\n      clipPath,\n    } = serialized;\n    const renderOnAddRemove = this.renderOnAddRemove;\n    this.renderOnAddRemove = false;\n\n    return Promise.all([\n      enlivenObjects<FabricObject>(objects, {\n        reviver,\n        signal,\n      }),\n      enlivenObjectEnlivables(\n        {\n          backgroundImage,\n          backgroundColor: background,\n          overlayImage,\n          overlayColor: overlay,\n          clipPath,\n        },\n        { signal },\n      ),\n    ]).then(([enlived, enlivedMap]) => {\n      this.clear();\n      this.add(...enlived);\n      this.set(serialized);\n      this.set(enlivedMap);\n      this.renderOnAddRemove = renderOnAddRemove;\n      return this;\n    });\n  }\n\n  /**\n   * Clones canvas instance\n   * @param {string[]} [properties] Array of properties to include in the cloned canvas and children\n   */\n  clone(properties: string[]) {\n    const data = this.toObject(properties);\n    const canvas = this.cloneWithoutData();\n    return canvas.loadFromJSON(data);\n  }\n\n  /**\n   * Clones canvas instance without cloning existing data.\n   * This essentially copies canvas dimensions since loadFromJSON does not affect canvas size.\n   */\n  cloneWithoutData() {\n    const el = createCanvasElementFor(this);\n    return new (this.constructor as Constructor<this>)(el);\n  }\n\n  /**\n   * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n   * @param {Object} [options] Options object\n   * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n   * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n   * @param {Number} [options.multiplier=1] Multiplier to scale by, to have consistent\n   * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n   * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n   * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n   * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n   * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 2.0.0\n   * @param {(object: fabric.Object) => boolean} [options.filter] Function to filter objects.\n   * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n   * @see {@link https://jsfiddle.net/xsjua1rd/ demo}\n   * @example <caption>Generate jpeg dataURL with lower quality</caption>\n   * var dataURL = canvas.toDataURL({\n   *   format: 'jpeg',\n   *   quality: 0.8\n   * });\n   * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n   * var dataURL = canvas.toDataURL({\n   *   format: 'png',\n   *   left: 100,\n   *   top: 100,\n   *   width: 200,\n   *   height: 200\n   * });\n   * @example <caption>Generate double scaled png dataURL</caption>\n   * var dataURL = canvas.toDataURL({\n   *   format: 'png',\n   *   multiplier: 2\n   * });\n   * @example <caption>Generate dataURL with objects that overlap a specified object</caption>\n   * var myObject;\n   * var dataURL = canvas.toDataURL({\n   *   filter: (object) => object.isContainedWithinObject(myObject) || object.intersectsWithObject(myObject)\n   * });\n   */\n  toDataURL(options = {} as TDataUrlOptions): string {\n    const {\n      format = 'png',\n      quality = 1,\n      multiplier = 1,\n      enableRetinaScaling = false,\n    } = options;\n    const finalMultiplier =\n      multiplier * (enableRetinaScaling ? this.getRetinaScaling() : 1);\n\n    return toDataURL(\n      this.toCanvasElement(finalMultiplier, options),\n      format,\n      quality,\n    );\n  }\n\n  /**\n   * Create a new HTMLCanvas element painted with the current canvas content.\n   * No need to resize the actual one or repaint it.\n   * Will transfer object ownership to a new canvas, paint it, and set everything back.\n   * This is an intermediary step used to get to a dataUrl but also it is useful to\n   * create quick image copies of a canvas without passing for the dataUrl string\n   * @param {Number} [multiplier] a zoom factor.\n   * @param {Object} [options] Cropping informations\n   * @param {Number} [options.left] Cropping left offset.\n   * @param {Number} [options.top] Cropping top offset.\n   * @param {Number} [options.width] Cropping width.\n   * @param {Number} [options.height] Cropping height.\n   * @param {(object: fabric.Object) => boolean} [options.filter] Function to filter objects.\n   */\n  toCanvasElement(\n    multiplier = 1,\n    { width, height, left, top, filter } = {} as TToCanvasElementOptions,\n  ): HTMLCanvasElement {\n    const scaledWidth = (width || this.width) * multiplier,\n      scaledHeight = (height || this.height) * multiplier,\n      zoom = this.getZoom(),\n      originalWidth = this.width,\n      originalHeight = this.height,\n      originalSkipControlsDrawing = this.skipControlsDrawing,\n      newZoom = zoom * multiplier,\n      vp = this.viewportTransform,\n      translateX = (vp[4] - (left || 0)) * multiplier,\n      translateY = (vp[5] - (top || 0)) * multiplier,\n      newVp = [newZoom, 0, 0, newZoom, translateX, translateY] as TMat2D,\n      originalRetina = this.enableRetinaScaling,\n      canvasEl = createCanvasElementFor({\n        width: scaledWidth,\n        height: scaledHeight,\n      }),\n      objectsToRender = filter\n        ? this._objects.filter((obj) => filter(obj))\n        : this._objects;\n    this.enableRetinaScaling = false;\n    this.viewportTransform = newVp;\n    this.width = scaledWidth;\n    this.height = scaledHeight;\n    this.skipControlsDrawing = true;\n    this.calcViewportBoundaries();\n    this.renderCanvas(canvasEl.getContext('2d')!, objectsToRender);\n    this.viewportTransform = vp;\n    this.width = originalWidth;\n    this.height = originalHeight;\n    this.calcViewportBoundaries();\n    this.enableRetinaScaling = originalRetina;\n    this.skipControlsDrawing = originalSkipControlsDrawing;\n    return canvasEl;\n  }\n\n  /**\n   * Waits until rendering has settled to destroy the canvas\n   * @returns {Promise<boolean>} a promise resolving to `true` once the canvas has been destroyed or to `false` if the canvas has was already destroyed\n   * @throws if aborted by a consequent call\n   */\n  dispose() {\n    !this.disposed &&\n      this.elements.cleanupDOM({ width: this.width, height: this.height });\n    runningAnimations.cancelByCanvas(this);\n    this.disposed = true;\n    return new Promise<boolean>((resolve, reject) => {\n      const task = () => {\n        this.destroy();\n        resolve(true);\n      };\n      task.kill = reject;\n      if (this.__cleanupTask) {\n        this.__cleanupTask.kill('aborted');\n      }\n\n      if (this.destroyed) {\n        resolve(false);\n      } else if (this.nextRenderHandle) {\n        this.__cleanupTask = task;\n      } else {\n        task();\n      }\n    });\n  }\n\n  /**\n   * Clears the canvas element, disposes objects and frees resources.\n   *\n   * Invoked as part of the **async** operation of {@link dispose}.\n   *\n   * **CAUTION**:\n   *\n   * This method is **UNSAFE**.\n   * You may encounter a race condition using it if there's a requested render.\n   * Call this method only if you are sure rendering has settled.\n   * Consider using {@link dispose} as it is **SAFE**\n   *\n   * @private\n   */\n  destroy() {\n    this.destroyed = true;\n    this.cancelRequestedRender();\n    this.forEachObject((object) => object.dispose());\n    this._objects = [];\n    if (this.backgroundImage) {\n      this.backgroundImage.dispose();\n    }\n    this.backgroundImage = undefined;\n    if (this.overlayImage) {\n      this.overlayImage.dispose();\n    }\n    this.overlayImage = undefined;\n    this.elements.dispose();\n  }\n\n  /**\n   * Returns a string representation of an instance\n   * @return {String} string representation of an instance\n   */\n  toString() {\n    return `#<Canvas (${this.complexity()}): { objects: ${\n      this._objects.length\n    } }>`;\n  }\n}\n","import type { TPointerEvent } from '../EventTypeDefs';\nimport { Point } from '../Point';\nimport { getScrollLeftTop } from './dom_misc';\n\nconst touchEvents = ['touchstart', 'touchmove', 'touchend'];\n\nfunction getTouchInfo(event: TouchEvent | MouseEvent): MouseEvent | Touch {\n  const touchProp = (event as TouchEvent).changedTouches;\n  if (touchProp && touchProp[0]) {\n    return touchProp[0];\n  }\n  return event as MouseEvent;\n}\n\nexport const getPointer = (event: TPointerEvent): Point => {\n  const element = event.target as HTMLElement,\n    scroll = getScrollLeftTop(element),\n    _evt = getTouchInfo(event);\n  return new Point(_evt.clientX + scroll.left, _evt.clientY + scroll.top);\n};\n\nexport const isTouchEvent = (event: TPointerEvent) =>\n  touchEvents.includes(event.type) ||\n  (event as PointerEvent).pointerType === 'touch';\n\nexport const stopEvent = (e: Event) => {\n  e.preventDefault();\n  e.stopPropagation();\n};\n","import type { XY } from '../../Point';\nimport type { TBBox } from '../../typedefs';\n\n/**\n * Calculates bounding box (left, top, width, height) from given `points`\n * @param {XY[]} points\n * @return {Object} Object with left, top, width, height properties\n */\nexport const makeBoundingBoxFromPoints = (points: XY[]): TBBox => {\n  let left = 0,\n    top = 0,\n    width = 0,\n    height = 0;\n\n  for (let i = 0, len = points.length; i < len; i++) {\n    const { x, y } = points[i];\n    if (x > width || !i) width = x;\n    if (x < left || !i) left = x;\n    if (y > height || !i) height = y;\n    if (y < top || !i) top = y;\n  }\n\n  return {\n    left,\n    top,\n    width: width - left,\n    height: height - top,\n  };\n};\n","import { Point } from '../../Point';\nimport { CENTER } from '../../constants';\nimport type { FabricObject } from '../../shapes/Object/Object';\nimport type { TMat2D } from '../../typedefs';\nimport { makeBoundingBoxFromPoints } from './boundingBoxFromPoints';\nimport {\n  invertTransform,\n  multiplyTransformMatrices,\n  qrDecompose,\n} from './matrix';\n\n/**\n * given an object and a transform, apply the inverse transform to the object,\n * this is equivalent to remove from that object that transformation, so that\n * added in a space with the removed transform, the object will be the same as before.\n * Removing from an object a transform that scale by 2 is like scaling it by 1/2.\n * Removing from an object a transform that rotate by 30deg is like rotating by 30deg\n * in the opposite direction.\n * This util is used to add objects inside transformed groups or nested groups.\n * @param {FabricObject} object the object you want to transform\n * @param {TMat2D} transform the destination transform\n */\nexport const removeTransformFromObject = (\n  object: FabricObject,\n  transform: TMat2D,\n) => {\n  const inverted = invertTransform(transform),\n    finalTransform = multiplyTransformMatrices(\n      inverted,\n      object.calcOwnMatrix(),\n    );\n  applyTransformToObject(object, finalTransform);\n};\n\n/**\n * given an object and a transform, apply the transform to the object.\n * this is equivalent to change the space where the object is drawn.\n * Adding to an object a transform that scale by 2 is like scaling it by 2.\n * This is used when removing an object from an active selection for example.\n * @param {FabricObject} object the object you want to transform\n * @param {Array} transform the destination transform\n */\nexport const addTransformToObject = (object: FabricObject, transform: TMat2D) =>\n  applyTransformToObject(\n    object,\n    multiplyTransformMatrices(transform, object.calcOwnMatrix()),\n  );\n\n/**\n * discard an object transform state and apply the one from the matrix.\n * @param {FabricObject} object the object you want to transform\n * @param {Array} transform the destination transform\n */\nexport const applyTransformToObject = (\n  object: FabricObject,\n  transform: TMat2D,\n) => {\n  const { translateX, translateY, scaleX, scaleY, ...otherOptions } =\n      qrDecompose(transform),\n    center = new Point(translateX, translateY);\n  object.flipX = false;\n  object.flipY = false;\n  Object.assign(object, otherOptions);\n  object.set({ scaleX, scaleY });\n  object.setPositionByOrigin(center, CENTER, CENTER);\n};\n/**\n * reset an object transform state to neutral. Top and left are not accounted for\n * @param  {FabricObject} target object to transform\n */\nexport const resetObjectTransform = (target: FabricObject) => {\n  target.scaleX = 1;\n  target.scaleY = 1;\n  target.skewX = 0;\n  target.skewY = 0;\n  target.flipX = false;\n  target.flipY = false;\n  target.rotate(0);\n};\n\n/**\n * Extract Object transform values\n * @param  {FabricObject} target object to read from\n * @return {Object} Components of transform\n */\nexport const saveObjectTransform = (target: FabricObject) => ({\n  scaleX: target.scaleX,\n  scaleY: target.scaleY,\n  skewX: target.skewX,\n  skewY: target.skewY,\n  angle: target.angle,\n  left: target.left,\n  flipX: target.flipX,\n  flipY: target.flipY,\n  top: target.top,\n});\n\n/**\n * given a width and height, return the size of the bounding box\n * that can contains the box with width/height with applied transform.\n * Use to calculate the boxes around objects for controls.\n * @param {Number} width\n * @param {Number} height\n * @param {TMat2D} t\n * @returns {Point} size\n */\nexport const sizeAfterTransform = (\n  width: number,\n  height: number,\n  t: TMat2D,\n) => {\n  const dimX = width / 2,\n    dimY = height / 2,\n    points = [\n      new Point(-dimX, -dimY),\n      new Point(dimX, -dimY),\n      new Point(-dimX, dimY),\n      new Point(dimX, dimY),\n    ].map((p) => p.transform(t)),\n    bbox = makeBoundingBoxFromPoints(points);\n  return new Point(bbox.width, bbox.height);\n};\n","import { iMatrix } from '../../constants';\nimport type { Point } from '../../Point';\nimport type { FabricObject } from '../../shapes/Object/Object';\nimport type { TMat2D } from '../../typedefs';\nimport { invertTransform, multiplyTransformMatrices } from './matrix';\nimport { applyTransformToObject } from './objectTransforms';\n\n/**\n * We are actually looking for the transformation from the destination plane to the source plane (change of basis matrix)\\\n * The object will exist on the destination plane and we want it to seem unchanged by it so we invert the destination matrix (`to`) and then apply the source matrix (`from`)\n * @param [from]\n * @param [to]\n * @returns\n */\nexport const calcPlaneChangeMatrix = (\n  from: TMat2D = iMatrix,\n  to: TMat2D = iMatrix,\n) => multiplyTransformMatrices(invertTransform(to), from);\n\n/**\n * Sends a point from the source coordinate plane to the destination coordinate plane.\\\n * From the canvas/viewer's perspective the point remains unchanged.\n *\n * @example <caption>Send point from canvas plane to group plane</caption>\n * var obj = new Rect({ left: 20, top: 20, width: 60, height: 60, strokeWidth: 0 });\n * var group = new Group([obj], { strokeWidth: 0 });\n * var sentPoint1 = sendPointToPlane(new Point(50, 50), undefined, group.calcTransformMatrix());\n * var sentPoint2 = sendPointToPlane(new Point(50, 50), iMatrix, group.calcTransformMatrix());\n * console.log(sentPoint1, sentPoint2) //  both points print (0,0) which is the center of group\n *\n * @param {Point} point\n * @param {TMat2D} [from] plane matrix containing object. Passing `undefined` is equivalent to passing the identity matrix, which means `point` exists in the canvas coordinate plane.\n * @param {TMat2D} [to] destination plane matrix to contain object. Passing `undefined` means `point` should be sent to the canvas coordinate plane.\n * @returns {Point} transformed point\n */\nexport const sendPointToPlane = (\n  point: Point,\n  from: TMat2D = iMatrix,\n  to: TMat2D = iMatrix,\n): Point => point.transform(calcPlaneChangeMatrix(from, to));\n\n/**\n * See {@link sendPointToPlane}\n */\nexport const sendVectorToPlane = (\n  point: Point,\n  from: TMat2D = iMatrix,\n  to: TMat2D = iMatrix,\n): Point => point.transform(calcPlaneChangeMatrix(from, to), true);\n\n/**\n *\n * A util that abstracts applying transform to objects.\\\n * Sends `object` to the destination coordinate plane by applying the relevant transformations.\\\n * Changes the space/plane where `object` is drawn.\\\n * From the canvas/viewer's perspective `object` remains unchanged.\n *\n * @example <caption>Move clip path from one object to another while preserving it's appearance as viewed by canvas/viewer</caption>\n * let obj, obj2;\n * let clipPath = new Circle({ radius: 50 });\n * obj.clipPath = clipPath;\n * // render\n * sendObjectToPlane(clipPath, obj.calcTransformMatrix(), obj2.calcTransformMatrix());\n * obj.clipPath = undefined;\n * obj2.clipPath = clipPath;\n * // render, clipPath now clips obj2 but seems unchanged from the eyes of the viewer\n *\n * @example <caption>Clip an object's clip path with an existing object</caption>\n * let obj, existingObj;\n * let clipPath = new Circle({ radius: 50 });\n * obj.clipPath = clipPath;\n * let transformTo = multiplyTransformMatrices(obj.calcTransformMatrix(), clipPath.calcTransformMatrix());\n * sendObjectToPlane(existingObj, existingObj.group?.calcTransformMatrix(), transformTo);\n * clipPath.clipPath = existingObj;\n *\n * @param {FabricObject} object\n * @param {Matrix} [from] plane matrix containing object. Passing `undefined` is equivalent to passing the identity matrix, which means `object` is a direct child of canvas.\n * @param {Matrix} [to] destination plane matrix to contain object. Passing `undefined` means `object` should be sent to the canvas coordinate plane.\n * @returns {Matrix} the transform matrix that was applied to `object`\n */\nexport const sendObjectToPlane = (\n  object: FabricObject,\n  from?: TMat2D,\n  to?: TMat2D,\n): TMat2D => {\n  const t = calcPlaneChangeMatrix(from, to);\n  applyTransformToObject(\n    object,\n    multiplyTransformMatrices(t, object.calcOwnMatrix()),\n  );\n  return t;\n};\n","import type {\n  ObjectModificationEvents,\n  TModificationEvents,\n} from '../EventTypeDefs';\n\nexport const fireEvent = (\n  eventName: TModificationEvents,\n  options: ObjectModificationEvents[typeof eventName],\n) => {\n  const {\n    transform: { target },\n  } = options;\n  target.canvas?.fire(`object:${eventName}`, {\n    ...options,\n    target,\n  });\n  target.fire(eventName, options);\n};\n","import type { TOriginX, TOriginY } from '../../typedefs';\n\nconst originOffset = {\n  left: -0.5,\n  top: -0.5,\n  center: 0,\n  bottom: 0.5,\n  right: 0.5,\n};\n/**\n * Resolves origin value relative to center\n * @private\n * @param {TOriginX | TOriginY} originValue originX / originY\n * @returns number\n */\n\nexport const resolveOrigin = (\n  originValue: TOriginX | TOriginY | number,\n): number =>\n  typeof originValue === 'string'\n    ? originOffset[originValue]\n    : originValue - 0.5;\n","import type {\n  TPointerEvent,\n  Transform,\n  TransformAction,\n  BasicTransformEvent,\n} from '../EventTypeDefs';\nimport { resolveOrigin } from '../util/misc/resolveOrigin';\nimport { Point } from '../Point';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { TOriginX, TOriginY } from '../typedefs';\nimport {\n  degreesToRadians,\n  radiansToDegrees,\n} from '../util/misc/radiansDegreesConversion';\nimport type { Control } from './Control';\nimport { CENTER } from '../constants';\n\nexport const NOT_ALLOWED_CURSOR = 'not-allowed';\n\n/**\n * @param {Boolean} alreadySelected true if target is already selected\n * @param {String} corner a string representing the corner ml, mr, tl ...\n * @param {Event} e Event object\n * @param {FabricObject} [target] inserted back to help overriding. Unused\n */\nexport const getActionFromCorner = (\n  alreadySelected: boolean,\n  corner: string | undefined,\n  e: TPointerEvent,\n  target: FabricObject,\n) => {\n  if (!corner || !alreadySelected) {\n    return 'drag';\n  }\n  const control = target.controls[corner];\n  return control.getActionName(e, control, target);\n};\n\n/**\n * Checks if transform is centered\n * @param {Object} transform transform data\n * @return {Boolean} true if transform is centered\n */\nexport function isTransformCentered(transform: Transform) {\n  return (\n    resolveOrigin(transform.originX) === resolveOrigin(CENTER) &&\n    resolveOrigin(transform.originY) === resolveOrigin(CENTER)\n  );\n}\n\nexport function invertOrigin(origin: TOriginX | TOriginY) {\n  return -resolveOrigin(origin) + 0.5;\n}\n\nexport const isLocked = (\n  target: FabricObject,\n  lockingKey:\n    | 'lockMovementX'\n    | 'lockMovementY'\n    | 'lockRotation'\n    | 'lockScalingX'\n    | 'lockScalingY'\n    | 'lockSkewingX'\n    | 'lockSkewingY'\n    | 'lockScalingFlip',\n) => target[lockingKey];\n\nexport const commonEventInfo: TransformAction<\n  Transform,\n  BasicTransformEvent\n> = (eventData, transform, x, y) => {\n  return {\n    e: eventData,\n    transform,\n    pointer: new Point(x, y),\n  };\n};\n\n/**\n * Combine control position and object angle to find the control direction compared\n * to the object center.\n * @param {FabricObject} fabricObject the fabric object for which we are rendering controls\n * @param {Control} control the control class\n * @return {Number} 0 - 7 a quadrant number\n */\nexport function findCornerQuadrant(\n  fabricObject: FabricObject,\n  control: Control,\n): number {\n  //  angle is relative to canvas plane\n  const angle = fabricObject.getTotalAngle(),\n    cornerAngle =\n      angle + radiansToDegrees(Math.atan2(control.y, control.x)) + 360;\n  return Math.round((cornerAngle % 360) / 45);\n}\n\n/**\n * @returns the normalized point (rotated relative to center) in local coordinates\n */\nfunction normalizePoint(\n  target: FabricObject,\n  point: Point,\n  originX: TOriginX,\n  originY: TOriginY,\n): Point {\n  const center = target.getRelativeCenterPoint(),\n    p =\n      typeof originX !== 'undefined' && typeof originY !== 'undefined'\n        ? target.translateToGivenOrigin(\n            center,\n            CENTER,\n            CENTER,\n            originX,\n            originY,\n          )\n        : new Point(target.left, target.top),\n    p2 = target.angle\n      ? point.rotate(-degreesToRadians(target.angle), center)\n      : point;\n  return p2.subtract(p);\n}\n\n/**\n * Transforms a point to the offset from the given origin\n * @param {Object} transform\n * @param {String} originX\n * @param {String} originY\n * @param {number} x\n * @param {number} y\n * @return {Fabric.Point} the normalized point\n */\nexport function getLocalPoint(\n  { target, corner }: Transform,\n  originX: TOriginX,\n  originY: TOriginY,\n  x: number,\n  y: number,\n) {\n  const control = target.controls[corner],\n    zoom = target.canvas?.getZoom() || 1,\n    padding = target.padding / zoom,\n    localPoint = normalizePoint(target, new Point(x, y), originX, originY);\n  if (localPoint.x >= padding) {\n    localPoint.x -= padding;\n  }\n  if (localPoint.x <= -padding) {\n    localPoint.x += padding;\n  }\n  if (localPoint.y >= padding) {\n    localPoint.y -= padding;\n  }\n  if (localPoint.y <= padding) {\n    localPoint.y += padding;\n  }\n  localPoint.x -= control.offsetX;\n  localPoint.y -= control.offsetY;\n  return localPoint;\n}\n","import type { TransformActionHandler } from '../EventTypeDefs';\nimport { LEFT, TOP, MOVING } from '../constants';\nimport { fireEvent } from './fireEvent';\nimport { commonEventInfo, isLocked } from './util';\n\n/**\n * Action handler\n * @private\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if the translation occurred\n */\nexport const dragHandler: TransformActionHandler = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  const { target, offsetX, offsetY } = transform;\n  let newLeft = x - offsetX, newTop = y - offsetY;\n\n  if (target.canvas?.snapObjectFn) {\n    const change = [newLeft - target.left, newTop - target.top] as [number, number];\n    const offset = target.canvas?.snapObjectFn(target, change);\n    newLeft += offset[0];\n    newTop += offset[1];\n  }\n\n  const moveX = !isLocked(target, 'lockMovementX') && target.left !== newLeft,\n    moveY = !isLocked(target, 'lockMovementY') && target.top !== newTop;\n  moveX && target.set(LEFT, newLeft);\n  moveY && target.set(TOP, newTop);\n  if (moveX || moveY) {\n    fireEvent(MOVING, commonEventInfo(eventData, transform, x, y));\n  }\n  return moveX || moveY;\n};\n","import type { TSVGReviver } from '../../typedefs';\nimport { uid } from '../../util/internals/uid';\nimport { colorPropToSVG, matrixToSVG } from '../../util/misc/svgParsing';\nimport { FILL, NONE, STROKE } from '../../constants';\nimport type { FabricObject } from './FabricObject';\nimport { isFiller } from '../../util/typeAssertions';\n\nexport class FabricObjectSVGExportMixin {\n  /**\n   * When an object is being exported as SVG as a clippath, a reference inside the SVG is needed.\n   * This reference is a UID in the fabric namespace and is temporary stored here.\n   * @type {String}\n   */\n  declare clipPathId?: string;\n\n  /**\n   * Returns styles-string for svg-export\n   * @param {Boolean} skipShadow a boolean to skip shadow filter output\n   * @return {String}\n   */\n  getSvgStyles(\n    this: FabricObjectSVGExportMixin & FabricObject,\n    skipShadow?: boolean,\n  ) {\n    const fillRule = this.fillRule ? this.fillRule : 'nonzero',\n      strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\n      strokeDashArray = this.strokeDashArray\n        ? this.strokeDashArray.join(' ')\n        : NONE,\n      strokeDashOffset = this.strokeDashOffset ? this.strokeDashOffset : '0',\n      strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\n      strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\n      strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\n      opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\n      visibility = this.visible ? '' : ' visibility: hidden;',\n      filter = skipShadow ? '' : this.getSvgFilter(),\n      fill = colorPropToSVG(FILL, this.fill),\n      stroke = colorPropToSVG(STROKE, this.stroke);\n\n    return [\n      stroke,\n      'stroke-width: ',\n      strokeWidth,\n      '; ',\n      'stroke-dasharray: ',\n      strokeDashArray,\n      '; ',\n      'stroke-linecap: ',\n      strokeLineCap,\n      '; ',\n      'stroke-dashoffset: ',\n      strokeDashOffset,\n      '; ',\n      'stroke-linejoin: ',\n      strokeLineJoin,\n      '; ',\n      'stroke-miterlimit: ',\n      strokeMiterLimit,\n      '; ',\n      fill,\n      'fill-rule: ',\n      fillRule,\n      '; ',\n      'opacity: ',\n      opacity,\n      ';',\n      filter,\n      visibility,\n    ].join('');\n  }\n\n  /**\n   * Returns filter for svg shadow\n   * @return {String}\n   */\n  getSvgFilter(this: FabricObjectSVGExportMixin & FabricObject) {\n    return this.shadow ? `filter: url(#SVGID_${this.shadow.id});` : '';\n  }\n\n  /**\n   * Returns id attribute for svg output\n   * @return {String}\n   */\n  getSvgCommons(\n    this: FabricObjectSVGExportMixin & FabricObject & { id?: string },\n  ) {\n    return [\n      this.id ? `id=\"${this.id}\" ` : '',\n      this.clipPath\n        ? `clip-path=\"url(#${\n            (this.clipPath as FabricObjectSVGExportMixin & FabricObject)\n              .clipPathId\n          })\" `\n        : '',\n    ].join('');\n  }\n\n  /**\n   * Returns transform-string for svg-export\n   * @param {Boolean} use the full transform or the single object one.\n   * @return {String}\n   */\n  getSvgTransform(\n    this: FabricObjectSVGExportMixin & FabricObject,\n    full?: boolean,\n    additionalTransform = '',\n  ) {\n    const transform = full ? this.calcTransformMatrix() : this.calcOwnMatrix(),\n      svgTransform = `transform=\"${matrixToSVG(transform)}`;\n    return `${svgTransform}${additionalTransform}\" `;\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * This function is implemented in each subclass\n   * This is just because typescript otherwise cryies all the time\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG(_reviver?: TSVGReviver): string[] {\n    return [''];\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @param {TSVGReviver} [reviver] Method for further parsing of svg representation.\n   * @return {String} svg representation of an instance\n   */\n  toSVG(\n    this: FabricObjectSVGExportMixin & FabricObject,\n    reviver?: TSVGReviver,\n  ) {\n    return this._createBaseSVGMarkup(this._toSVG(reviver), {\n      reviver,\n    });\n  }\n\n  /**\n   * Returns svg clipPath representation of an instance\n   * @param {TSVGReviver} [reviver] Method for further parsing of svg representation.\n   * @return {String} svg representation of an instance\n   */\n  toClipPathSVG(\n    this: FabricObjectSVGExportMixin & FabricObject,\n    reviver?: TSVGReviver,\n  ) {\n    return (\n      '\\t' +\n      this._createBaseClipPathSVGMarkup(this._toSVG(reviver), {\n        reviver,\n      })\n    );\n  }\n\n  /**\n   * @private\n   */\n  _createBaseClipPathSVGMarkup(\n    this: FabricObjectSVGExportMixin & FabricObject,\n    objectMarkup: string[],\n    {\n      reviver,\n      additionalTransform = '',\n    }: { reviver?: TSVGReviver; additionalTransform?: string } = {},\n  ) {\n    const commonPieces = [\n        this.getSvgTransform(true, additionalTransform),\n        this.getSvgCommons(),\n      ].join(''),\n      // insert commons in the markup, style and svgCommons\n      index = objectMarkup.indexOf('COMMON_PARTS');\n    objectMarkup[index] = commonPieces;\n    return reviver ? reviver(objectMarkup.join('')) : objectMarkup.join('');\n  }\n\n  /**\n   * @private\n   */\n  _createBaseSVGMarkup(\n    this: FabricObjectSVGExportMixin & FabricObject,\n    objectMarkup: string[],\n    {\n      noStyle,\n      reviver,\n      withShadow,\n      additionalTransform,\n    }: {\n      noStyle?: boolean;\n      reviver?: TSVGReviver;\n      withShadow?: boolean;\n      additionalTransform?: string;\n    } = {},\n  ): string {\n    const styleInfo = noStyle ? '' : `style=\"${this.getSvgStyles()}\" `,\n      shadowInfo = withShadow ? `style=\"${this.getSvgFilter()}\" ` : '',\n      clipPath = this.clipPath as FabricObjectSVGExportMixin & FabricObject,\n      vectorEffect = this.strokeUniform\n        ? 'vector-effect=\"non-scaling-stroke\" '\n        : '',\n      absoluteClipPath = clipPath && clipPath.absolutePositioned,\n      stroke = this.stroke,\n      fill = this.fill,\n      shadow = this.shadow,\n      markup = [],\n      // insert commons in the markup, style and svgCommons\n      index = objectMarkup.indexOf('COMMON_PARTS');\n    let clipPathMarkup;\n    if (clipPath) {\n      clipPath.clipPathId = `CLIPPATH_${uid()}`;\n      clipPathMarkup = `<clipPath id=\"${\n        clipPath.clipPathId\n      }\" >\\n${clipPath.toClipPathSVG(reviver)}</clipPath>\\n`;\n    }\n    if (absoluteClipPath) {\n      markup.push('<g ', shadowInfo, this.getSvgCommons(), ' >\\n');\n    }\n    markup.push(\n      '<g ',\n      this.getSvgTransform(false),\n      !absoluteClipPath ? shadowInfo + this.getSvgCommons() : '',\n      ' >\\n',\n    );\n    const commonPieces = [\n      styleInfo,\n      vectorEffect,\n      noStyle ? '' : this.addPaintOrder(),\n      ' ',\n      additionalTransform ? `transform=\"${additionalTransform}\" ` : '',\n    ].join('');\n    objectMarkup[index] = commonPieces;\n    if (isFiller(fill)) {\n      markup.push(fill.toSVG(this));\n    }\n    if (isFiller(stroke)) {\n      markup.push(stroke.toSVG(this));\n    }\n    if (shadow) {\n      markup.push(shadow.toSVG(this));\n    }\n    if (clipPath) {\n      markup.push(clipPathMarkup);\n    }\n    markup.push(objectMarkup.join(''));\n    markup.push('</g>\\n');\n    absoluteClipPath && markup.push('</g>\\n');\n    return reviver ? reviver(markup.join('')) : markup.join('');\n  }\n\n  addPaintOrder(this: FabricObjectSVGExportMixin & FabricObject) {\n    return this.paintFirst !== FILL ? ` paint-order=\"${this.paintFirst}\" ` : '';\n  }\n}\n","export function getSvgRegex(arr: string[]) {\n  return new RegExp('^(' + arr.join('|') + ')\\\\b', 'i');\n}\n","import { getSvgRegex } from './getSvgRegex';\nimport { LEFT, TOP } from '../constants';\n\nexport const reNum = String.raw`(?:[-+]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][-+]?\\d+)?)`;\n\nexport const svgNS = 'http://www.w3.org/2000/svg';\n\nexport const reFontDeclaration = new RegExp(\n  '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\n    '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\n    reNum +\n    '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' +\n    reNum +\n    '))?\\\\s+(.*)',\n);\n\nexport const svgValidTagNames = [\n    'path',\n    'circle',\n    'polygon',\n    'polyline',\n    'ellipse',\n    'rect',\n    'line',\n    'image',\n    'text',\n  ],\n  svgViewBoxElements = ['symbol', 'image', 'marker', 'pattern', 'view', 'svg'],\n  svgInvalidAncestors = [\n    'pattern',\n    'defs',\n    'symbol',\n    'metadata',\n    'clipPath',\n    'mask',\n    'desc',\n  ],\n  svgValidParents = ['symbol', 'g', 'a', 'svg', 'clipPath', 'defs'],\n  attributesMap = {\n    cx: LEFT,\n    x: LEFT,\n    r: 'radius',\n    cy: TOP,\n    y: TOP,\n    display: 'visible',\n    visibility: 'visible',\n    transform: 'transformMatrix',\n    'fill-opacity': 'fillOpacity',\n    'fill-rule': 'fillRule',\n    'font-family': 'fontFamily',\n    'font-size': 'fontSize',\n    'font-style': 'fontStyle',\n    'font-weight': 'fontWeight',\n    'letter-spacing': 'charSpacing',\n    'paint-order': 'paintFirst',\n    'stroke-dasharray': 'strokeDashArray',\n    'stroke-dashoffset': 'strokeDashOffset',\n    'stroke-linecap': 'strokeLineCap',\n    'stroke-linejoin': 'strokeLineJoin',\n    'stroke-miterlimit': 'strokeMiterLimit',\n    'stroke-opacity': 'strokeOpacity',\n    'stroke-width': 'strokeWidth',\n    'text-decoration': 'textDecoration',\n    'text-anchor': 'textAnchor',\n    opacity: 'opacity',\n    'clip-path': 'clipPath',\n    'clip-rule': 'clipRule',\n    'vector-effect': 'strokeUniform',\n    'image-rendering': 'imageSmoothing',\n  },\n  fSize = 'font-size',\n  cPath = 'clip-path';\n\nexport const svgValidTagNamesRegEx = getSvgRegex(svgValidTagNames);\n\nexport const svgViewBoxElementsRegEx = getSvgRegex(svgViewBoxElements);\n\nexport const svgValidParentsRegEx = getSvgRegex(svgValidParents);\n\n// http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n// matches, e.g.: +14.56e-12, etc.\nexport const reViewBoxAttrValue = new RegExp(\n  '^' +\n    '\\\\s*(' +\n    reNum +\n    '+)\\\\s*,?' +\n    '\\\\s*(' +\n    reNum +\n    '+)\\\\s*,?' +\n    '\\\\s*(' +\n    reNum +\n    '+)\\\\s*,?' +\n    '\\\\s*(' +\n    reNum +\n    '+)\\\\s*' +\n    '$',\n);\n","import type { XY } from '../../Point';\nimport { Point } from '../../Point';\nimport type { TRadian } from '../../typedefs';\n\nconst unitVectorX = new Point(1, 0);\nconst zero = new Point();\n\n/**\n * Rotates `vector` with `radians`\n * @param {Point} vector The vector to rotate (x and y)\n * @param {Number} radians The radians of the angle for the rotation\n * @return {Point} The new rotated point\n */\nexport const rotateVector = (vector: Point, radians: TRadian) =>\n  vector.rotate(radians);\n\n/**\n * Creates a vector from points represented as a point\n *\n * @param {Point} from\n * @param {Point} to\n * @returns {Point} vector\n */\nexport const createVector = (from: XY, to: XY): Point =>\n  new Point(to).subtract(from);\n\n/**\n * return the magnitude of a vector\n * @return {number}\n */\nexport const magnitude = (point: Point) => point.distanceFrom(zero);\n\n/**\n * Calculates the angle between 2 vectors\n * @param {Point} a\n * @param {Point} b\n * @returns the angle in radians from `a` to `b`\n */\nexport const calcAngleBetweenVectors = (a: Point, b: Point): TRadian =>\n  Math.atan2(crossProduct(a, b), dotProduct(a, b)) as TRadian;\n\n/**\n * Calculates the angle between the x axis and the vector\n * @param {Point} v\n * @returns the angle in radians of `v`\n */\nexport const calcVectorRotation = (v: Point) =>\n  calcAngleBetweenVectors(unitVectorX, v);\n\n/**\n * @param {Point} v\n * @returns {Point} vector representing the unit vector pointing to the direction of `v`\n */\nexport const getUnitVector = (v: Point): Point =>\n  v.eq(zero) ? v : v.scalarDivide(magnitude(v));\n\n/**\n * @param {Point} v\n * @param {Boolean} [counterClockwise] the direction of the orthogonal vector, defaults to `true`\n * @returns {Point} the unit orthogonal vector\n */\nexport const getOrthonormalVector = (\n  v: Point,\n  counterClockwise = true,\n): Point =>\n  getUnitVector(new Point(-v.y, v.x).scalarMultiply(counterClockwise ? 1 : -1));\n\n/**\n * Cross product of two vectors in 2D\n * @param {Point} a\n * @param {Point} b\n * @returns {number} the magnitude of Z vector\n */\nexport const crossProduct = (a: Point, b: Point): number =>\n  a.x * b.y - a.y * b.x;\n\n/**\n * Dot product of two vectors in 2D\n * @param {Point} a\n * @param {Point} b\n * @returns {number}\n */\nexport const dotProduct = (a: Point, b: Point): number => a.x * b.x + a.y * b.y;\n\n/**\n * Checks if the vector is between two others. It is considered\n * to be inside when the vector to be tested is between the\n * initial vector and the final vector (included) in a counterclockwise direction.\n * @param {Point} t vector to be tested\n * @param {Point} a initial vector\n * @param {Point} b final vector\n * @returns {boolean} true if the vector is among the others\n */\nexport const isBetweenVectors = (t: Point, a: Point, b: Point): boolean => {\n  if (t.eq(a) || t.eq(b)) return true;\n  const AxB = crossProduct(a, b),\n    AxT = crossProduct(a, t),\n    BxT = crossProduct(b, t);\n  return AxB >= 0 ? AxT >= 0 && BxT <= 0 : !(AxT <= 0 && BxT >= 0);\n};\n","import { classRegistry } from './ClassRegistry';\nimport { Color } from './color/Color';\nimport { config } from './config';\nimport { reNum } from './parser/constants';\nimport { Point } from './Point';\nimport type { FabricObject } from './shapes/Object/FabricObject';\nimport type { TClassProperties } from './typedefs';\nimport { uid } from './util/internals/uid';\nimport { pickBy } from './util/misc/pick';\nimport { degreesToRadians } from './util/misc/radiansDegreesConversion';\nimport { toFixed } from './util/misc/toFixed';\nimport { rotateVector } from './util/misc/vectors';\n\n/**\n   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\n   * - (?:\\s|^): This part captures either a whitespace character (\\s) or the beginning of a line (^). It's non-capturing (due to (?:...)), meaning it doesn't create a capturing group.\n   * - (-?\\d+(?:\\.\\d*)?(?:px)?(?:\\s?|$))?: This captures the first component of the shadow, which is the horizontal offset. Breaking it down:\n   *   - (-?\\d+): Captures an optional minus sign followed by one or more digits (integer part of the number).\n   *   - (?:\\.\\d*)?: Optionally captures a decimal point followed by zero or more digits (decimal part of the number).\n   *   - (?:px)?: Optionally captures the \"px\" unit.\n   *   - (?:\\s?|$): Captures either an optional whitespace or the end of the line. This whole part is wrapped in a non-capturing group and marked as optional with ?.\n   * - (-?\\d+(?:\\.\\d*)?(?:px)?(?:\\s?|$))?: Similar to the previous step, this captures the vertical offset.\n\n(\\d+(?:\\.\\d*)?(?:px)?)?: This captures the blur radius. It's similar to the horizontal offset but without the optional minus sign.\n\n(?:\\s+(-?\\d+(?:\\.\\d*)?(?:px)?(?:\\s?|$))?){0,1}: This captures an optional part for the color. It allows for whitespace followed by a component with an optional minus sign, digits, decimal point, and \"px\" unit.\n\n(?:$|\\s): This captures either the end of the line or a whitespace character. It ensures that the match ends either at the end of the string or with a whitespace character.\n   */\n// eslint-disable-next-line max-len\n\nconst shadowOffsetRegex = '(-?\\\\d+(?:\\\\.\\\\d*)?(?:px)?(?:\\\\s?|$))?';\n\nconst reOffsetsAndBlur = new RegExp(\n  '(?:\\\\s|^)' +\n    shadowOffsetRegex +\n    shadowOffsetRegex +\n    '(' +\n    reNum +\n    '?(?:px)?)?(?:\\\\s?|$)(?:$|\\\\s)',\n);\n\nexport const shadowDefaultValues: Partial<TClassProperties<Shadow>> = {\n  color: 'rgb(0,0,0)',\n  blur: 0,\n  offsetX: 0,\n  offsetY: 0,\n  affectStroke: false,\n  includeDefaultValues: true,\n  nonScaling: false,\n};\n\nexport type SerializedShadowOptions = {\n  color: string;\n  blur: number;\n  offsetX: number;\n  offsetY: number;\n  affectStroke: boolean;\n  nonScaling: boolean;\n  type: string;\n};\n\nexport class Shadow {\n  /**\n   * Shadow color\n   * @type String\n   * @default\n   */\n  declare color: string;\n\n  /**\n   * Shadow blur\n   * @type Number\n   */\n  declare blur: number;\n\n  /**\n   * Shadow horizontal offset\n   * @type Number\n   * @default\n   */\n  declare offsetX: number;\n\n  /**\n   * Shadow vertical offset\n   * @type Number\n   * @default\n   */\n  declare offsetY: number;\n\n  /**\n   * Whether the shadow should affect stroke operations\n   * @type Boolean\n   * @default\n   */\n  declare affectStroke: boolean;\n\n  /**\n   * Indicates whether toObject should include default values\n   * @type Boolean\n   * @default\n   */\n  declare includeDefaultValues: boolean;\n\n  /**\n   * When `false`, the shadow will scale with the object.\n   * When `true`, the shadow's offsetX, offsetY, and blur will not be affected by the object's scale.\n   * default to false\n   * @type Boolean\n   * @default\n   */\n  declare nonScaling: boolean;\n\n  declare id: number;\n\n  static ownDefaults = shadowDefaultValues;\n\n  static type = 'shadow';\n\n  /**\n   * @see {@link http://fabricjs.com/shadows|Shadow demo}\n   * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetY properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px\")\n   */\n  constructor(options: Partial<TClassProperties<Shadow>>);\n  constructor(svgAttribute: string);\n  constructor(arg0: string | Partial<TClassProperties<Shadow>>) {\n    const options: Partial<TClassProperties<Shadow>> =\n      typeof arg0 === 'string' ? Shadow.parseShadow(arg0) : arg0;\n    Object.assign(this, Shadow.ownDefaults, options);\n    this.id = uid();\n  }\n\n  /**\n   * @param {String} value Shadow value to parse\n   * @return {Object} Shadow object with color, offsetX, offsetY and blur\n   */\n  static parseShadow(value: string) {\n    const shadowStr = value.trim(),\n      [, offsetX = 0, offsetY = 0, blur = 0] = (\n        reOffsetsAndBlur.exec(shadowStr) || []\n      ).map((value) => parseFloat(value) || 0),\n      color = (shadowStr.replace(reOffsetsAndBlur, '') || 'rgb(0,0,0)').trim();\n\n    return {\n      color,\n      offsetX,\n      offsetY,\n      blur,\n    };\n  }\n\n  /**\n   * Returns a string representation of an instance\n   * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\n   * @return {String} Returns CSS3 text-shadow declaration\n   */\n  toString() {\n    return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\n  }\n\n  /**\n   * Returns SVG representation of a shadow\n   * @param {FabricObject} object\n   * @return {String} SVG representation of a shadow\n   */\n  toSVG(object: FabricObject) {\n    const offset = rotateVector(\n        new Point(this.offsetX, this.offsetY),\n        degreesToRadians(-object.angle),\n      ),\n      BLUR_BOX = 20,\n      color = new Color(this.color);\n    let fBoxX = 40,\n      fBoxY = 40;\n\n    if (object.width && object.height) {\n      //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\n      // we add some extra space to filter box to contain the blur ( 20 )\n      fBoxX =\n        toFixed(\n          (Math.abs(offset.x) + this.blur) / object.width,\n          config.NUM_FRACTION_DIGITS,\n        ) *\n          100 +\n        BLUR_BOX;\n      fBoxY =\n        toFixed(\n          (Math.abs(offset.y) + this.blur) / object.height,\n          config.NUM_FRACTION_DIGITS,\n        ) *\n          100 +\n        BLUR_BOX;\n    }\n    if (object.flipX) {\n      offset.x *= -1;\n    }\n    if (object.flipY) {\n      offset.y *= -1;\n    }\n\n    return `<filter id=\"SVGID_${this.id}\" y=\"-${fBoxY}%\" height=\"${\n      100 + 2 * fBoxY\n    }%\" x=\"-${fBoxX}%\" width=\"${\n      100 + 2 * fBoxX\n    }%\" >\\n\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"${toFixed(\n      this.blur ? this.blur / 2 : 0,\n      config.NUM_FRACTION_DIGITS,\n    )}\"></feGaussianBlur>\\n\\t<feOffset dx=\"${toFixed(\n      offset.x,\n      config.NUM_FRACTION_DIGITS,\n    )}\" dy=\"${toFixed(\n      offset.y,\n      config.NUM_FRACTION_DIGITS,\n    )}\" result=\"oBlur\" ></feOffset>\\n\\t<feFlood flood-color=\"${color.toRgb()}\" flood-opacity=\"${color.getAlpha()}\"/>\\n\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n\\t<feMerge>\\n\\t\\t<feMergeNode></feMergeNode>\\n\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n\\t</feMerge>\\n</filter>\\n`;\n  }\n\n  /**\n   * Returns object representation of a shadow\n   * @return {Object} Object representation of a shadow instance\n   */\n  toObject() {\n    const data: SerializedShadowOptions = {\n      color: this.color,\n      blur: this.blur,\n      offsetX: this.offsetX,\n      offsetY: this.offsetY,\n      affectStroke: this.affectStroke,\n      nonScaling: this.nonScaling,\n      type: (this.constructor as typeof Shadow).type,\n    };\n    const defaults = Shadow.ownDefaults as SerializedShadowOptions;\n    return !this.includeDefaultValues\n      ? pickBy(data, (value, key) => value !== defaults[key])\n      : data;\n  }\n\n  static async fromObject(options: Partial<TClassProperties<Shadow>>) {\n    return new this(options);\n  }\n}\n\nclassRegistry.setClass(Shadow, 'shadow');\n","export const capValue = (min: number, value: number, max: number) =>\n  Math.max(min, Math.min(value, max));\n","import {\n  TOP,\n  LEFT,\n  SCALE_Y,\n  SCALE_X,\n  SKEW_X,\n  SKEW_Y,\n  FILL,\n  STROKE,\n} from '../../constants';\nimport type { TClassProperties } from '../../typedefs';\nimport type { InteractiveFabricObject } from './InteractiveObject';\nimport type { FabricObject } from './Object';\n\nexport const stateProperties = [\n  TOP,\n  LEFT,\n  SCALE_X,\n  SCALE_Y,\n  'flipX',\n  'flipY',\n  'originX',\n  'originY',\n  'angle',\n  'opacity',\n  'globalCompositeOperation',\n  'shadow',\n  'visible',\n  SKEW_X,\n  SKEW_Y,\n];\n\nexport const cacheProperties = [\n  FILL,\n  STROKE,\n  'strokeWidth',\n  'strokeDashArray',\n  'width',\n  'height',\n  'paintFirst',\n  'strokeUniform',\n  'strokeLineCap',\n  'strokeDashOffset',\n  'strokeLineJoin',\n  'strokeMiterLimit',\n  'backgroundColor',\n  'clipPath',\n];\n\nexport const fabricObjectDefaultValues: Partial<\n  TClassProperties<FabricObject>\n> = {\n  // see composeMatrix() to see order of transforms. First defaults listed based on this\n  top: 0,\n  left: 0,\n  width: 0,\n  height: 0,\n  angle: 0,\n  flipX: false,\n  flipY: false,\n  scaleX: 1,\n  scaleY: 1,\n  minScaleLimit: 0,\n  skewX: 0,\n  skewY: 0,\n  originX: LEFT,\n  originY: TOP,\n  strokeWidth: 1,\n  strokeUniform: false,\n  padding: 0,\n  opacity: 1,\n  paintFirst: FILL,\n  fill: 'rgb(0,0,0)',\n  fillRule: 'nonzero',\n  stroke: null,\n  strokeDashArray: null,\n  strokeDashOffset: 0,\n  strokeLineCap: 'butt',\n  strokeLineJoin: 'miter',\n  strokeMiterLimit: 4,\n  globalCompositeOperation: 'source-over',\n  backgroundColor: '',\n  shadow: null,\n  visible: true,\n  includeDefaultValues: true,\n  excludeFromExport: false,\n  objectCaching: true,\n  clipPath: undefined,\n  inverted: false,\n  absolutePositioned: false,\n  centeredRotation: true,\n  centeredScaling: false,\n  dirty: true,\n} as const;\n\nexport const interactiveObjectDefaultValues: Partial<\n  TClassProperties<InteractiveFabricObject>\n> = {\n  noScaleCache: true,\n  lockMovementX: false,\n  lockMovementY: false,\n  lockRotation: false,\n  lockScalingX: false,\n  lockScalingY: false,\n  lockSkewingX: false,\n  lockSkewingY: false,\n  lockScalingFlip: false,\n  cornerSize: 13,\n  touchCornerSize: 24,\n  transparentCorners: true,\n  cornerColor: 'rgb(178,204,255)',\n  cornerStrokeColor: '',\n  cornerStyle: 'rect',\n  cornerDashArray: null,\n  hasControls: true,\n  borderColor: 'rgb(178,204,255)',\n  borderDashArray: null,\n  borderOpacityWhenMoving: 0.4,\n  borderScaleFactor: 1,\n  hasBorders: true,\n  selectionBackgroundColor: '',\n  selectable: true,\n  evented: true,\n  perPixelTargetFind: false,\n  activeOn: 'down',\n  hoverCursor: null,\n  moveCursor: null,\n};\n","/**\n * Easing functions\n * @see {@link http://gizma.com/easing/ Easing Equations by Robert Penner}\n */\n\nimport { twoMathPi, halfPI } from '../../constants';\nimport type { TEasingFunction } from './types';\n\nconst normalize = (a: number, c: number, p: number, s: number) => {\n  if (a < Math.abs(c)) {\n    a = c;\n    s = p / 4;\n  } else {\n    //handle the 0/0 case:\n    if (c === 0 && a === 0) {\n      s = (p / twoMathPi) * Math.asin(1);\n    } else {\n      s = (p / twoMathPi) * Math.asin(c / a);\n    }\n  }\n  return { a, c, p, s };\n};\n\nconst elastic = (\n  a: number,\n  s: number,\n  p: number,\n  t: number,\n  d: number,\n): number =>\n  a * Math.pow(2, 10 * (t -= 1)) * Math.sin(((t * d - s) * twoMathPi) / p);\n\n/**\n * Default sinusoidal easing\n */\nexport const defaultEasing: TEasingFunction = (t, b, c, d) =>\n  -c * Math.cos((t / d) * halfPI) + c + b;\n\n/**\n * Cubic easing in\n */\nexport const easeInCubic: TEasingFunction = (t, b, c, d) =>\n  c * (t / d) ** 3 + b;\n\n/**\n * Cubic easing out\n */\nexport const easeOutCubic: TEasingFunction = (t, b, c, d) =>\n  c * ((t / d - 1) ** 3 + 1) + b;\n\n/**\n * Cubic easing in and out\n */\nexport const easeInOutCubic: TEasingFunction = (t, b, c, d) => {\n  t /= d / 2;\n  if (t < 1) {\n    return (c / 2) * t ** 3 + b;\n  }\n  return (c / 2) * ((t - 2) ** 3 + 2) + b;\n};\n\n/**\n * Quartic easing in\n */\nexport const easeInQuart: TEasingFunction = (t, b, c, d) =>\n  c * (t /= d) * t ** 3 + b;\n\n/**\n * Quartic easing out\n */\nexport const easeOutQuart: TEasingFunction = (t, b, c, d) =>\n  -c * ((t = t / d - 1) * t ** 3 - 1) + b;\n\n/**\n * Quartic easing in and out\n */\nexport const easeInOutQuart: TEasingFunction = (t, b, c, d) => {\n  t /= d / 2;\n  if (t < 1) {\n    return (c / 2) * t ** 4 + b;\n  }\n  return (-c / 2) * ((t -= 2) * t ** 3 - 2) + b;\n};\n\n/**\n * Quintic easing in\n */\nexport const easeInQuint: TEasingFunction = (t, b, c, d) =>\n  c * (t / d) ** 5 + b;\n\n/**\n * Quintic easing out\n */\nexport const easeOutQuint: TEasingFunction = (t, b, c, d) =>\n  c * ((t / d - 1) ** 5 + 1) + b;\n\n/**\n * Quintic easing in and out\n */\nexport const easeInOutQuint: TEasingFunction = (t, b, c, d) => {\n  t /= d / 2;\n  if (t < 1) {\n    return (c / 2) * t ** 5 + b;\n  }\n  return (c / 2) * ((t - 2) ** 5 + 2) + b;\n};\n\n/**\n * Sinusoidal easing in\n */\nexport const easeInSine: TEasingFunction = (t, b, c, d) =>\n  -c * Math.cos((t / d) * halfPI) + c + b;\n\n/**\n * Sinusoidal easing out\n */\nexport const easeOutSine: TEasingFunction = (t, b, c, d) =>\n  c * Math.sin((t / d) * halfPI) + b;\n\n/**\n * Sinusoidal easing in and out\n */\nexport const easeInOutSine: TEasingFunction = (t, b, c, d) =>\n  (-c / 2) * (Math.cos((Math.PI * t) / d) - 1) + b;\n\n/**\n * Exponential easing in\n */\nexport const easeInExpo: TEasingFunction = (t, b, c, d) =>\n  t === 0 ? b : c * 2 ** (10 * (t / d - 1)) + b;\n\n/**\n * Exponential easing out\n */\nexport const easeOutExpo: TEasingFunction = (t, b, c, d) =>\n  t === d ? b + c : c * -(2 ** ((-10 * t) / d) + 1) + b;\n\n/**\n * Exponential easing in and out\n */\nexport const easeInOutExpo: TEasingFunction = (t, b, c, d) => {\n  if (t === 0) {\n    return b;\n  }\n  if (t === d) {\n    return b + c;\n  }\n  t /= d / 2;\n  if (t < 1) {\n    return (c / 2) * 2 ** (10 * (t - 1)) + b;\n  }\n  return (c / 2) * -(2 ** (-10 * --t) + 2) + b;\n};\n\n/**\n * Circular easing in\n */\nexport const easeInCirc: TEasingFunction = (t, b, c, d) =>\n  -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n\n/**\n * Circular easing out\n */\nexport const easeOutCirc: TEasingFunction = (t, b, c, d) =>\n  c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n\n/**\n * Circular easing in and out\n */\nexport const easeInOutCirc: TEasingFunction = (t, b, c, d) => {\n  t /= d / 2;\n  if (t < 1) {\n    return (-c / 2) * (Math.sqrt(1 - t ** 2) - 1) + b;\n  }\n  return (c / 2) * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n};\n\n/**\n * Elastic easing in\n */\nexport const easeInElastic: TEasingFunction = (t, b, c, d) => {\n  const s = 1.70158,\n    a = c;\n  let p = 0;\n  if (t === 0) {\n    return b;\n  }\n  t /= d;\n  if (t === 1) {\n    return b + c;\n  }\n  if (!p) {\n    p = d * 0.3;\n  }\n  const { a: normA, s: normS, p: normP } = normalize(a, c, p, s);\n  return -elastic(normA, normS, normP, t, d) + b;\n};\n\n/**\n * Elastic easing out\n */\nexport const easeOutElastic: TEasingFunction = (t, b, c, d) => {\n  const s = 1.70158,\n    a = c;\n  let p = 0;\n  if (t === 0) {\n    return b;\n  }\n  t /= d;\n  if (t === 1) {\n    return b + c;\n  }\n  if (!p) {\n    p = d * 0.3;\n  }\n  const { a: normA, s: normS, p: normP, c: normC } = normalize(a, c, p, s);\n  return (\n    normA * 2 ** (-10 * t) * Math.sin(((t * d - normS) * twoMathPi) / normP) +\n    normC +\n    b\n  );\n};\n\n/**\n * Elastic easing in and out\n */\nexport const easeInOutElastic: TEasingFunction = (t, b, c, d) => {\n  const s = 1.70158,\n    a = c;\n  let p = 0;\n  if (t === 0) {\n    return b;\n  }\n  t /= d / 2;\n  if (t === 2) {\n    return b + c;\n  }\n  if (!p) {\n    p = d * (0.3 * 1.5);\n  }\n  const { a: normA, s: normS, p: normP, c: normC } = normalize(a, c, p, s);\n  if (t < 1) {\n    return -0.5 * elastic(normA, normS, normP, t, d) + b;\n  }\n  return (\n    normA *\n      Math.pow(2, -10 * (t -= 1)) *\n      Math.sin(((t * d - normS) * twoMathPi) / normP) *\n      0.5 +\n    normC +\n    b\n  );\n};\n\n/**\n * Backwards easing in\n */\nexport const easeInBack: TEasingFunction = (t, b, c, d, s = 1.70158) =>\n  c * (t /= d) * t * ((s + 1) * t - s) + b;\n\n/**\n * Backwards easing out\n */\nexport const easeOutBack: TEasingFunction = (t, b, c, d, s = 1.70158) =>\n  c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n\n/**\n * Backwards easing in and out\n */\nexport const easeInOutBack: TEasingFunction = (t, b, c, d, s = 1.70158) => {\n  t /= d / 2;\n  if (t < 1) {\n    return (c / 2) * (t * t * (((s *= 1.525) + 1) * t - s)) + b;\n  }\n  return (c / 2) * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n};\n\n/**\n * Bouncing easing out\n */\nexport const easeOutBounce: TEasingFunction = (t, b, c, d) => {\n  if ((t /= d) < 1 / 2.75) {\n    return c * (7.5625 * t * t) + b;\n  } else if (t < 2 / 2.75) {\n    return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b;\n  } else if (t < 2.5 / 2.75) {\n    return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b;\n  } else {\n    return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b;\n  }\n};\n\n/**\n * Bouncing easing in\n */\nexport const easeInBounce: TEasingFunction = (t, b, c, d) =>\n  c - easeOutBounce(d - t, 0, c, d) + b;\n\n/**\n * Bouncing easing in and out\n */\nexport const easeInOutBounce: TEasingFunction = (t, b, c, d) =>\n  t < d / 2\n    ? easeInBounce(t * 2, 0, c, d) * 0.5 + b\n    : easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n\n/**\n * Quadratic easing in\n */\nexport const easeInQuad: TEasingFunction = (t, b, c, d) => c * (t /= d) * t + b;\n\n/**\n * Quadratic easing out\n */\nexport const easeOutQuad: TEasingFunction = (t, b, c, d) =>\n  -c * (t /= d) * (t - 2) + b;\n\n/**\n * Quadratic easing in and out\n */\nexport const easeInOutQuad: TEasingFunction = (t, b, c, d) => {\n  t /= d / 2;\n  if (t < 1) {\n    return (c / 2) * t ** 2 + b;\n  }\n  return (-c / 2) * (--t * (t - 2) - 1) + b;\n};\n","import { noop } from '../../constants';\nimport { requestAnimFrame } from './AnimationFrameProvider';\nimport { runningAnimations } from './AnimationRegistry';\nimport { defaultEasing } from './easing';\nimport type {\n  AnimationState,\n  TAbortCallback,\n  TBaseAnimationOptions,\n  TEasingFunction,\n  TOnAnimationChangeCallback,\n} from './types';\n\nconst defaultAbort = () => false;\n\nexport abstract class AnimationBase<\n  T extends number | number[] = number | number[],\n> {\n  declare readonly startValue: T;\n  declare readonly endValue: T;\n  declare readonly duration: number;\n  declare readonly delay: number;\n\n  protected declare readonly byValue: T;\n  protected declare readonly easing: TEasingFunction<T>;\n\n  private declare readonly _onStart: VoidFunction;\n  private declare readonly _onChange: TOnAnimationChangeCallback<T, void>;\n  private declare readonly _onComplete: TOnAnimationChangeCallback<T, void>;\n  private declare readonly _abort: TAbortCallback<T>;\n\n  /**\n   * Used to register the animation to a target object\n   * so that it can be cancelled within the object context\n   */\n  declare readonly target?: unknown;\n\n  private _state: AnimationState = 'pending';\n  /**\n   * Time %, or the ratio of `timeElapsed / duration`\n   * @see tick\n   */\n  durationProgress = 0;\n  /**\n   * Value %, or the ratio of `(currentValue - startValue) / (endValue - startValue)`\n   */\n  valueProgress = 0;\n  /**\n   * Current value\n   */\n  declare value: T;\n  /**\n   * Animation start time ms\n   */\n  private declare startTime: number;\n\n  constructor({\n    startValue,\n    byValue,\n    duration = 500,\n    delay = 0,\n    easing = defaultEasing,\n    onStart = noop,\n    onChange = noop,\n    onComplete = noop,\n    abort = defaultAbort,\n    target,\n  }: TBaseAnimationOptions<T>) {\n    this.tick = this.tick.bind(this);\n\n    this.duration = duration;\n    this.delay = delay;\n    this.easing = easing;\n    this._onStart = onStart;\n    this._onChange = onChange;\n    this._onComplete = onComplete;\n    this._abort = abort;\n    this.target = target;\n\n    this.startValue = startValue;\n    this.byValue = byValue;\n    this.value = this.startValue;\n    this.endValue = Object.freeze(this.calculate(this.duration).value);\n  }\n\n  get state() {\n    return this._state;\n  }\n\n  isDone() {\n    return this._state === 'aborted' || this._state === 'completed';\n  }\n\n  /**\n   * Calculate the current value based on the easing parameters\n   * @param timeElapsed in ms\n   * @protected\n   */\n  protected abstract calculate(timeElapsed: number): {\n    value: T;\n    valueProgress: number;\n  };\n\n  start() {\n    const firstTick: FrameRequestCallback = (timestamp) => {\n      if (this._state !== 'pending') return;\n      this.startTime = timestamp || +new Date();\n      this._state = 'running';\n      this._onStart();\n      this.tick(this.startTime);\n    };\n\n    this.register();\n\n    // setTimeout(cb, 0) will run cb on the next frame, causing a delay\n    // we don't want that\n    if (this.delay > 0) {\n      setTimeout(() => requestAnimFrame(firstTick), this.delay);\n    } else {\n      requestAnimFrame(firstTick);\n    }\n  }\n\n  private tick(t: number) {\n    const durationMs = (t || +new Date()) - this.startTime;\n    const boundDurationMs = Math.min(durationMs, this.duration);\n    this.durationProgress = boundDurationMs / this.duration;\n    const { value, valueProgress } = this.calculate(boundDurationMs);\n    this.value = Object.freeze(value);\n    this.valueProgress = valueProgress;\n\n    if (this._state === 'aborted') {\n      return;\n    } else if (\n      this._abort(this.value, this.valueProgress, this.durationProgress)\n    ) {\n      this._state = 'aborted';\n      this.unregister();\n    } else if (durationMs >= this.duration) {\n      this.durationProgress = this.valueProgress = 1;\n      this._onChange(this.endValue, this.valueProgress, this.durationProgress);\n      this._state = 'completed';\n      this._onComplete(\n        this.endValue,\n        this.valueProgress,\n        this.durationProgress,\n      );\n      this.unregister();\n    } else {\n      this._onChange(this.value, this.valueProgress, this.durationProgress);\n      requestAnimFrame(this.tick);\n    }\n  }\n\n  private register() {\n    runningAnimations.push(this as unknown as AnimationBase);\n  }\n\n  private unregister() {\n    runningAnimations.remove(this as unknown as AnimationBase);\n  }\n\n  abort() {\n    this._state = 'aborted';\n    this.unregister();\n  }\n}\n","import { AnimationBase } from './AnimationBase';\nimport type { ValueAnimationOptions } from './types';\n\nexport class ValueAnimation extends AnimationBase<number> {\n  constructor({\n    startValue = 0,\n    endValue = 100,\n    ...otherOptions\n  }: ValueAnimationOptions) {\n    super({\n      ...otherOptions,\n      startValue,\n      byValue: endValue - startValue,\n    });\n  }\n\n  protected calculate(timeElapsed: number) {\n    const value = this.easing(\n      timeElapsed,\n      this.startValue,\n      this.byValue,\n      this.duration,\n    );\n    return {\n      value,\n      valueProgress: Math.abs((value - this.startValue) / this.byValue),\n    };\n  }\n}\n","import { AnimationBase } from './AnimationBase';\nimport type { ArrayAnimationOptions } from './types';\n\nexport class ArrayAnimation extends AnimationBase<number[]> {\n  constructor({\n    startValue = [0],\n    endValue = [100],\n    ...options\n  }: ArrayAnimationOptions) {\n    super({\n      ...options,\n      startValue,\n      byValue: endValue.map((value, i) => value - startValue[i]),\n    });\n  }\n  protected calculate(timeElapsed: number) {\n    const values = this.startValue.map((value, i) =>\n      this.easing(timeElapsed, value, this.byValue[i], this.duration, i),\n    );\n    return {\n      value: values,\n      valueProgress: Math.abs(\n        (values[0] - this.startValue[0]) / this.byValue[0],\n      ),\n    };\n  }\n}\n","import { Color } from '../../color/Color';\nimport type { TRGBAColorSource } from '../../color/typedefs';\nimport { halfPI } from '../../constants';\nimport { capValue } from '../misc/capValue';\nimport { AnimationBase } from './AnimationBase';\nimport type {\n  ColorAnimationOptions,\n  TEasingFunction,\n  TOnAnimationChangeCallback,\n} from './types';\n\nconst defaultColorEasing: TEasingFunction = (\n  timeElapsed,\n  startValue,\n  byValue,\n  duration,\n) => {\n  const durationProgress = 1 - Math.cos((timeElapsed / duration) * halfPI);\n  return startValue + byValue * durationProgress;\n};\n\nconst wrapColorCallback = <R>(\n  callback?: TOnAnimationChangeCallback<string, R>,\n) =>\n  callback &&\n  ((rgba: TRGBAColorSource, valueProgress: number, durationProgress: number) =>\n    callback(new Color(rgba).toRgba(), valueProgress, durationProgress));\n\nexport class ColorAnimation extends AnimationBase<TRGBAColorSource> {\n  constructor({\n    startValue,\n    endValue,\n    easing = defaultColorEasing,\n    onChange,\n    onComplete,\n    abort,\n    ...options\n  }: ColorAnimationOptions) {\n    const startColor = new Color(startValue).getSource();\n    const endColor = new Color(endValue).getSource();\n    super({\n      ...options,\n      startValue: startColor,\n      byValue: endColor.map(\n        (value, i) => value - startColor[i],\n      ) as TRGBAColorSource,\n      easing,\n      onChange: wrapColorCallback(onChange),\n      onComplete: wrapColorCallback(onComplete),\n      abort: wrapColorCallback(abort),\n    });\n  }\n  protected calculate(timeElapsed: number) {\n    const [r, g, b, a] = this.startValue.map((value, i) =>\n      this.easing(timeElapsed, value, this.byValue[i], this.duration, i),\n    ) as TRGBAColorSource;\n    const value = [\n      ...[r, g, b].map(Math.round),\n      capValue(0, a, 1),\n    ] as TRGBAColorSource;\n    return {\n      value,\n      valueProgress:\n        // to correctly calculate the change ratio we must find a changed value\n        value\n          .map((p, i) =>\n            this.byValue[i] !== 0\n              ? Math.abs((p - this.startValue[i]) / this.byValue[i])\n              : 0,\n          )\n          .find((p) => p !== 0) || 0,\n    };\n  }\n}\n","import { ValueAnimation } from './ValueAnimation';\nimport { ArrayAnimation } from './ArrayAnimation';\nimport { ColorAnimation } from './ColorAnimation';\nimport type {\n  ValueAnimationOptions,\n  ArrayAnimationOptions,\n  ColorAnimationOptions,\n} from './types';\nimport type { TColorArg } from '../../color/typedefs';\n\nexport type TAnimation<T extends number | number[] | TColorArg> =\n  T extends TColorArg\n    ? ColorAnimation\n    : T extends number[]\n      ? ArrayAnimation\n      : ValueAnimation;\n\nconst isArrayAnimation = (\n  options: ArrayAnimationOptions | ValueAnimationOptions,\n): options is ArrayAnimationOptions => {\n  return Array.isArray(options.startValue) || Array.isArray(options.endValue);\n};\n\n/**\n * Changes value(s) from startValue to endValue within a certain period of time,\n * invoking callbacks as the value(s) change.\n *\n * @example\n * animate({\n *   startValue: 1,\n *   endValue: 0,\n *   onChange: (v) => {\n *     obj.set('opacity', v);\n *     // since we are running in a requested frame we should call `renderAll` and not `requestRenderAll`\n *     canvas.renderAll();\n *   }\n * });\n *\n * @example Using lists:\n * animate({\n *   startValue: [1, 2, 3],\n *   endValue: [2, 4, 6],\n *   onChange: ([x, y, zoom]) => {\n *     canvas.zoomToPoint(new Point(x, y), zoom);\n *     canvas.renderAll();\n *   }\n * });\n *\n */\nexport function animate(options: ArrayAnimationOptions): ArrayAnimation;\nexport function animate(options: ValueAnimationOptions): ValueAnimation;\nexport function animate<\n  T extends ValueAnimationOptions | ArrayAnimationOptions,\n>(\n  options: T,\n): T extends ArrayAnimationOptions ? ArrayAnimation : ValueAnimation;\nexport function animate<\n  T extends ValueAnimationOptions | ArrayAnimationOptions,\n  R extends T extends ArrayAnimationOptions ? ArrayAnimation : ValueAnimation,\n>(options: T): R {\n  const animation = (\n    isArrayAnimation(options)\n      ? new ArrayAnimation(options)\n      : new ValueAnimation(options)\n  ) as R;\n  animation.start();\n  return animation;\n}\n\nexport function animateColor(options: ColorAnimationOptions) {\n  const animation = new ColorAnimation(options);\n  animation.start();\n  return animation;\n}\n","import { Point } from './Point';\nimport { createVector } from './util/misc/vectors';\n\n/* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\nexport type IntersectionType = 'Intersection' | 'Coincident' | 'Parallel';\n\nexport class Intersection {\n  declare points: Point[];\n\n  declare status?: IntersectionType;\n\n  constructor(status?: IntersectionType) {\n    this.status = status;\n    this.points = [];\n  }\n\n  /**\n   * Used to verify if a point is alredy in the collection\n   * @param {Point} point\n   * @returns {boolean}\n   */\n  private includes(point: Point): boolean {\n    return this.points.some((p) => p.eq(point));\n  }\n\n  /**\n   * Appends points of intersection\n   * @param {...Point[]} points\n   * @return {Intersection} thisArg\n   * @chainable\n   */\n  private append(...points: Point[]): Intersection {\n    this.points = this.points.concat(\n      points.filter((point) => {\n        return !this.includes(point);\n      }),\n    );\n    return this;\n  }\n\n  /**\n   * check if point T is on the segment or line defined between A and B\n   *\n   * @param {Point} T the point we are checking for\n   * @param {Point} A one extremity of the segment\n   * @param {Point} B the other extremity of the segment\n   * @param [infinite] if true checks if `T` is on the line defined by `A` and `B`\n   * @returns true if `T` is contained\n   */\n  static isPointContained(T: Point, A: Point, B: Point, infinite = false) {\n    if (A.eq(B)) {\n      // Edge case: the segment is a point, we check for coincidence,\n      // infinite param has no meaning because there are infinite lines to consider\n      return T.eq(A);\n    } else if (A.x === B.x) {\n      // Edge case: horizontal line.\n      // we first check if T.x has the same value, and then if T.y is contained between A.y and B.y\n      return (\n        T.x === A.x &&\n        (infinite || (T.y >= Math.min(A.y, B.y) && T.y <= Math.max(A.y, B.y)))\n      );\n    } else if (A.y === B.y) {\n      // Edge case: vertical line.\n      // we first check if T.y has the same value, and then if T.x is contained between A.x and B.x\n      return (\n        T.y === A.y &&\n        (infinite || (T.x >= Math.min(A.x, B.x) && T.x <= Math.max(A.x, B.x)))\n      );\n    } else {\n      // Generic case: sloped line.\n      // we check that AT has the same slope as AB\n      // for the segment case we need both the vectors to have the same direction and for AT to be lte AB in size\n      // for the infinite case we check the absolute value of the slope, since direction is meaningless\n      const AB = createVector(A, B);\n      const AT = createVector(A, T);\n      const s = AT.divide(AB);\n      return infinite\n        ? Math.abs(s.x) === Math.abs(s.y)\n        : s.x === s.y && s.x >= 0 && s.x <= 1;\n    }\n  }\n\n  /**\n   * Use the ray casting algorithm to determine if {@link point} is in the polygon defined by {@link points}\n   * @see https://en.wikipedia.org/wiki/Point_in_polygon\n   * @param point\n   * @param points polygon points\n   * @returns\n   */\n  static isPointInPolygon(point: Point, points: Point[]) {\n    const other = new Point(point).setX(\n      Math.min(point.x - 1, ...points.map((p) => p.x)),\n    );\n    let hits = 0;\n    for (let index = 0; index < points.length; index++) {\n      const inter = this.intersectSegmentSegment(\n        // polygon side\n        points[index],\n        points[(index + 1) % points.length],\n        // ray\n        point,\n        other,\n      );\n      if (inter.includes(point)) {\n        // point is on the polygon side\n        return true;\n      }\n      hits += Number(inter.status === 'Intersection');\n    }\n    return hits % 2 === 1;\n  }\n\n  /**\n   * Checks if a line intersects another\n   * @see {@link https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection line intersection}\n   * @see {@link https://en.wikipedia.org/wiki/Cramer%27s_rule Cramer's rule}\n   * @static\n   * @param {Point} a1\n   * @param {Point} a2\n   * @param {Point} b1\n   * @param {Point} b2\n   * @param {boolean} [aInfinite=true] check segment intersection by passing `false`\n   * @param {boolean} [bInfinite=true] check segment intersection by passing `false`\n   * @return {Intersection}\n   */\n  static intersectLineLine(\n    a1: Point,\n    a2: Point,\n    b1: Point,\n    b2: Point,\n    aInfinite = true,\n    bInfinite = true,\n  ): Intersection {\n    const a2xa1x = a2.x - a1.x,\n      a2ya1y = a2.y - a1.y,\n      b2xb1x = b2.x - b1.x,\n      b2yb1y = b2.y - b1.y,\n      a1xb1x = a1.x - b1.x,\n      a1yb1y = a1.y - b1.y,\n      uaT = b2xb1x * a1yb1y - b2yb1y * a1xb1x,\n      ubT = a2xa1x * a1yb1y - a2ya1y * a1xb1x,\n      uB = b2yb1y * a2xa1x - b2xb1x * a2ya1y;\n    if (uB !== 0) {\n      const ua = uaT / uB,\n        ub = ubT / uB;\n      if (\n        (aInfinite || (0 <= ua && ua <= 1)) &&\n        (bInfinite || (0 <= ub && ub <= 1))\n      ) {\n        return new Intersection('Intersection').append(\n          new Point(a1.x + ua * a2xa1x, a1.y + ua * a2ya1y),\n        );\n      } else {\n        return new Intersection();\n      }\n    } else {\n      if (uaT === 0 || ubT === 0) {\n        const segmentsCoincide =\n          aInfinite ||\n          bInfinite ||\n          Intersection.isPointContained(a1, b1, b2) ||\n          Intersection.isPointContained(a2, b1, b2) ||\n          Intersection.isPointContained(b1, a1, a2) ||\n          Intersection.isPointContained(b2, a1, a2);\n        return new Intersection(segmentsCoincide ? 'Coincident' : undefined);\n      } else {\n        return new Intersection('Parallel');\n      }\n    }\n  }\n\n  /**\n   * Checks if a segment intersects a line\n   * @see {@link intersectLineLine} for line intersection\n   * @static\n   * @param {Point} s1 boundary point of segment\n   * @param {Point} s2 other boundary point of segment\n   * @param {Point} l1 point on line\n   * @param {Point} l2 other point on line\n   * @return {Intersection}\n   */\n  static intersectSegmentLine(\n    s1: Point,\n    s2: Point,\n    l1: Point,\n    l2: Point,\n  ): Intersection {\n    return Intersection.intersectLineLine(s1, s2, l1, l2, false, true);\n  }\n\n  /**\n   * Checks if a segment intersects another\n   * @see {@link intersectLineLine} for line intersection\n   * @static\n   * @param {Point} a1 boundary point of segment\n   * @param {Point} a2 other boundary point of segment\n   * @param {Point} b1 boundary point of segment\n   * @param {Point} b2 other boundary point of segment\n   * @return {Intersection}\n   */\n  static intersectSegmentSegment(\n    a1: Point,\n    a2: Point,\n    b1: Point,\n    b2: Point,\n  ): Intersection {\n    return Intersection.intersectLineLine(a1, a2, b1, b2, false, false);\n  }\n\n  /**\n   * Checks if line intersects polygon\n   *\n   * @todo account for stroke\n   *\n   * @static\n   * @see {@link intersectSegmentPolygon} for segment intersection\n   * @param {Point} a1 point on line\n   * @param {Point} a2 other point on line\n   * @param {Point[]} points polygon points\n   * @param {boolean} [infinite=true] check segment intersection by passing `false`\n   * @return {Intersection}\n   */\n  static intersectLinePolygon(\n    a1: Point,\n    a2: Point,\n    points: Point[],\n    infinite = true,\n  ): Intersection {\n    const result = new Intersection();\n    const length = points.length;\n\n    for (let i = 0, b1, b2, inter; i < length; i++) {\n      b1 = points[i];\n      b2 = points[(i + 1) % length];\n      inter = Intersection.intersectLineLine(a1, a2, b1, b2, infinite, false);\n      if (inter.status === 'Coincident') {\n        return inter;\n      }\n      result.append(...inter.points);\n    }\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n\n    return result;\n  }\n\n  /**\n   * Checks if segment intersects polygon\n   * @static\n   * @see {@link intersectLinePolygon} for line intersection\n   * @param {Point} a1 boundary point of segment\n   * @param {Point} a2 other boundary point of segment\n   * @param {Point[]} points polygon points\n   * @return {Intersection}\n   */\n  static intersectSegmentPolygon(\n    a1: Point,\n    a2: Point,\n    points: Point[],\n  ): Intersection {\n    return Intersection.intersectLinePolygon(a1, a2, points, false);\n  }\n\n  /**\n   * Checks if polygon intersects another polygon\n   *\n   * @todo account for stroke\n   *\n   * @static\n   * @param {Point[]} points1\n   * @param {Point[]} points2\n   * @return {Intersection}\n   */\n  static intersectPolygonPolygon(\n    points1: Point[],\n    points2: Point[],\n  ): Intersection {\n    const result = new Intersection(),\n      length = points1.length;\n    const coincidences: Intersection[] = [];\n\n    for (let i = 0; i < length; i++) {\n      const a1 = points1[i],\n        a2 = points1[(i + 1) % length],\n        inter = Intersection.intersectSegmentPolygon(a1, a2, points2);\n      if (inter.status === 'Coincident') {\n        coincidences.push(inter);\n        result.append(a1, a2);\n      } else {\n        result.append(...inter.points);\n      }\n    }\n\n    if (coincidences.length > 0 && coincidences.length === points1.length) {\n      return new Intersection('Coincident');\n    } else if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n\n    return result;\n  }\n\n  /**\n   * Checks if polygon intersects rectangle\n   * @static\n   * @see {@link intersectPolygonPolygon} for polygon intersection\n   * @param {Point[]} points polygon points\n   * @param {Point} r1 top left point of rect\n   * @param {Point} r2 bottom right point of rect\n   * @return {Intersection}\n   */\n  static intersectPolygonRectangle(\n    points: Point[],\n    r1: Point,\n    r2: Point,\n  ): Intersection {\n    const min = r1.min(r2),\n      max = r1.max(r2),\n      topRight = new Point(max.x, min.y),\n      bottomLeft = new Point(min.x, max.y);\n\n    return Intersection.intersectPolygonPolygon(points, [\n      min,\n      topRight,\n      max,\n      bottomLeft,\n    ]);\n  }\n}\n","import type {\n  TBBox,\n  TCornerPoint,\n  TDegree,\n  TMat2D,\n  TOriginX,\n  TOriginY,\n} from '../../typedefs';\nimport { SCALE_X, SCALE_Y, iMatrix } from '../../constants';\nimport { Intersection } from '../../Intersection';\nimport { Point } from '../../Point';\nimport { makeBoundingBoxFromPoints } from '../../util/misc/boundingBoxFromPoints';\nimport {\n  createRotateMatrix,\n  createTranslateMatrix,\n  composeMatrix,\n  invertTransform,\n  multiplyTransformMatrices,\n  transformPoint,\n  calcPlaneRotation,\n} from '../../util/misc/matrix';\nimport { radiansToDegrees } from '../../util/misc/radiansDegreesConversion';\nimport type { Canvas } from '../../canvas/Canvas';\nimport type { StaticCanvas } from '../../canvas/StaticCanvas';\nimport type { ObjectEvents } from '../../EventTypeDefs';\nimport type { ControlProps } from './types/ControlProps';\nimport { resolveOrigin } from '../../util/misc/resolveOrigin';\nimport type { Group } from '../Group';\nimport { calcDimensionsMatrix } from '../../util/misc/matrix';\nimport { sizeAfterTransform } from '../../util/misc/objectTransforms';\nimport { degreesToRadians } from '../../util/misc/radiansDegreesConversion';\nimport { CommonMethods } from '../../CommonMethods';\nimport type { BaseProps } from './types/BaseProps';\nimport type { FillStrokeProps } from './types/FillStrokeProps';\nimport { CENTER, LEFT, TOP } from '../../constants';\n\ntype TMatrixCache = {\n  key: number[];\n  value: TMat2D;\n};\n\ntype TACoords = TCornerPoint;\n\nexport class ObjectGeometry<EventSpec extends ObjectEvents = ObjectEvents>\n  extends CommonMethods<EventSpec>\n  implements\n    Pick<ControlProps, 'padding'>,\n    BaseProps,\n    Pick<FillStrokeProps, 'strokeWidth' | 'strokeUniform'>\n{\n  // #region Geometry\n\n  declare padding: number;\n\n  /**\n   * Describe object's corner position in scene coordinates.\n   * The coordinates are derived from the following:\n   * left, top, width, height, scaleX, scaleY, skewX, skewY, angle, strokeWidth.\n   * The coordinates do not depend on viewport changes.\n   * The coordinates get updated with {@link setCoords}.\n   * You can calculate them without updating with {@link calcACoords()}\n   */\n  declare aCoords: TACoords;\n\n  /**\n   * storage cache for object transform matrix\n   */\n  declare ownMatrixCache?: TMatrixCache;\n\n  /**\n   * storage cache for object full transform matrix\n   */\n  declare matrixCache?: TMatrixCache;\n\n  /**\n   * A Reference of the Canvas where the object is actually added\n   * @type StaticCanvas | Canvas;\n   * @default undefined\n   * @private\n   */\n  declare canvas?: StaticCanvas | Canvas;\n\n  /**\n   * @returns {number} x position according to object's {@link originX} property in canvas coordinate plane\n   */\n  getX(): number {\n    return this.getXY().x;\n  }\n\n  /**\n   * @param {number} value x position according to object's {@link originX} property in canvas coordinate plane\n   */\n  setX(value: number) {\n    this.setXY(this.getXY().setX(value));\n  }\n\n  /**\n   * @returns {number} y position according to object's {@link originY} property in canvas coordinate plane\n   */\n  getY(): number {\n    return this.getXY().y;\n  }\n\n  /**\n   * @param {number} value y position according to object's {@link originY} property in canvas coordinate plane\n   */\n  setY(value: number) {\n    this.setXY(this.getXY().setY(value));\n  }\n\n  /**\n   * @returns {number} x position according to object's {@link originX} property in parent's coordinate plane\\\n   * if parent is canvas then this property is identical to {@link getX}\n   */\n  getRelativeX(): number {\n    return this.left;\n  }\n\n  /**\n   * @param {number} value x position according to object's {@link originX} property in parent's coordinate plane\\\n   * if parent is canvas then this method is identical to {@link setX}\n   */\n  setRelativeX(value: number) {\n    this.left = value;\n  }\n\n  /**\n   * @returns {number} y position according to object's {@link originY} property in parent's coordinate plane\\\n   * if parent is canvas then this property is identical to {@link getY}\n   */\n  getRelativeY(): number {\n    return this.top;\n  }\n\n  /**\n   * @param {number} value y position according to object's {@link originY} property in parent's coordinate plane\\\n   * if parent is canvas then this property is identical to {@link setY}\n   */\n  setRelativeY(value: number) {\n    this.top = value;\n  }\n\n  /**\n   * @returns {Point} x position according to object's {@link originX} {@link originY} properties in canvas coordinate plane\n   */\n  getXY(): Point {\n    const relativePosition = this.getRelativeXY();\n    return this.group\n      ? transformPoint(relativePosition, this.group.calcTransformMatrix())\n      : relativePosition;\n  }\n\n  /**\n   * Set an object position to a particular point, the point is intended in absolute ( canvas ) coordinate.\n   * You can specify {@link originX} and {@link originY} values,\n   * that otherwise are the object's current values.\n   * @example <caption>Set object's bottom left corner to point (5,5) on canvas</caption>\n   * object.setXY(new Point(5, 5), 'left', 'bottom').\n   * @param {Point} point position in scene coordinate plane\n   * @param {TOriginX} [originX] Horizontal origin: 'left', 'center' or 'right'\n   * @param {TOriginY} [originY] Vertical origin: 'top', 'center' or 'bottom'\n   */\n  setXY(point: Point, originX?: TOriginX, originY?: TOriginY) {\n    if (this.group) {\n      point = transformPoint(\n        point,\n        invertTransform(this.group.calcTransformMatrix()),\n      );\n    }\n    this.setRelativeXY(point, originX, originY);\n  }\n\n  /**\n   * @returns {Point} x,y position according to object's {@link originX} {@link originY} properties in parent's coordinate plane\n   */\n  getRelativeXY(): Point {\n    return new Point(this.left, this.top);\n  }\n\n  /**\n   * As {@link setXY}, but in current parent's coordinate plane (the current group if any or the canvas)\n   * @param {Point} point position according to object's {@link originX} {@link originY} properties in parent's coordinate plane\n   * @param {TOriginX} [originX] Horizontal origin: 'left', 'center' or 'right'\n   * @param {TOriginY} [originY] Vertical origin: 'top', 'center' or 'bottom'\n   */\n  setRelativeXY(\n    point: Point,\n    originX: TOriginX = this.originX,\n    originY: TOriginY = this.originY,\n  ) {\n    this.setPositionByOrigin(point, originX, originY);\n  }\n\n  /**\n   * @deprecated intermidiate method to be removed, do not use\n   */\n  protected isStrokeAccountedForInDimensions() {\n    return false;\n  }\n\n  /**\n   * @return {Point[]} [tl, tr, br, bl] in the scene plane\n   */\n  getCoords(): Point[] {\n    const { tl, tr, br, bl } =\n      this.aCoords || (this.aCoords = this.calcACoords());\n    const coords = [tl, tr, br, bl];\n    if (this.group) {\n      const t = this.group.calcTransformMatrix();\n      return coords.map((p) => transformPoint(p, t));\n    }\n    return coords;\n  }\n\n  /**\n   * Checks if object intersects with the scene rect formed by {@link tl} and {@link br}\n   */\n  intersectsWithRect(tl: Point, br: Point): boolean {\n    const intersection = Intersection.intersectPolygonRectangle(\n      this.getCoords(),\n      tl,\n      br,\n    );\n    return intersection.status === 'Intersection';\n  }\n\n  /**\n   * Checks if object intersects with another object\n   * @param {Object} other Object to test\n   * @return {Boolean} true if object intersects with another object\n   */\n  intersectsWithObject(other: ObjectGeometry): boolean {\n    const intersection = Intersection.intersectPolygonPolygon(\n      this.getCoords(),\n      other.getCoords(),\n    );\n\n    return (\n      intersection.status === 'Intersection' ||\n      intersection.status === 'Coincident' ||\n      other.isContainedWithinObject(this) ||\n      this.isContainedWithinObject(other)\n    );\n  }\n\n  /**\n   * Checks if object is fully contained within area of another object\n   * @param {Object} other Object to test\n   * @return {Boolean} true if object is fully contained within area of another object\n   */\n  isContainedWithinObject(other: ObjectGeometry): boolean {\n    const points = this.getCoords();\n    return points.every((point) => other.containsPoint(point));\n  }\n\n  /**\n   * Checks if object is fully contained within the scene rect formed by {@link tl} and {@link br}\n   */\n  isContainedWithinRect(tl: Point, br: Point): boolean {\n    const { left, top, width, height } = this.getBoundingRect();\n    return (\n      left >= tl.x &&\n      left + width <= br.x &&\n      top >= tl.y &&\n      top + height <= br.y\n    );\n  }\n\n  isOverlapping<T extends ObjectGeometry>(other: T): boolean {\n    return (\n      this.intersectsWithObject(other) ||\n      this.isContainedWithinObject(other) ||\n      other.isContainedWithinObject(this)\n    );\n  }\n\n  /**\n   * Checks if point is inside the object\n   * @param {Point} point Point to check against\n   * @return {Boolean} true if point is inside the object\n   */\n  containsPoint(point: Point): boolean {\n    return Intersection.isPointInPolygon(point, this.getCoords());\n  }\n\n  /**\n   * Checks if object is contained within the canvas with current viewportTransform\n   * the check is done stopping at first point that appears on screen\n   * @return {Boolean} true if object is fully or partially contained within canvas\n   */\n  isOnScreen(): boolean {\n    if (!this.canvas) {\n      return false;\n    }\n    const { tl, br } = this.canvas.vptCoords;\n    const points = this.getCoords();\n    // if some point is on screen, the object is on screen.\n    if (\n      points.some(\n        (point) =>\n          point.x <= br.x &&\n          point.x >= tl.x &&\n          point.y <= br.y &&\n          point.y >= tl.y,\n      )\n    ) {\n      return true;\n    }\n    // no points on screen, check intersection with absolute coordinates\n    if (this.intersectsWithRect(tl, br)) {\n      return true;\n    }\n    // check if the object is so big that it contains the entire viewport\n    return this.containsPoint(tl.midPointFrom(br));\n  }\n\n  /**\n   * Checks if object is partially contained within the canvas with current viewportTransform\n   * @return {Boolean} true if object is partially contained within canvas\n   */\n  isPartiallyOnScreen(): boolean {\n    if (!this.canvas) {\n      return false;\n    }\n    const { tl, br } = this.canvas.vptCoords;\n    if (this.intersectsWithRect(tl, br)) {\n      return true;\n    }\n    const allPointsAreOutside = this.getCoords().every(\n      (point) =>\n        (point.x >= br.x || point.x <= tl.x) &&\n        (point.y >= br.y || point.y <= tl.y),\n    );\n    // check if the object is so big that it contains the entire viewport\n    return allPointsAreOutside && this.containsPoint(tl.midPointFrom(br));\n  }\n\n  /**\n   * Returns coordinates of object's bounding rectangle (left, top, width, height)\n   * the box is intended as aligned to axis of canvas.\n   * @return {Object} Object with left, top, width, height properties\n   */\n  getBoundingRect(): TBBox {\n    return makeBoundingBoxFromPoints(this.getCoords());\n  }\n\n  /**\n   * Returns width of an object's bounding box counting transformations\n   * @todo shouldn't this account for group transform and return the actual size in canvas coordinate plane?\n   * @return {Number} width value\n   */\n  getScaledWidth(): number {\n    return this._getTransformedDimensions().x;\n  }\n\n  /**\n   * Returns height of an object bounding box counting transformations\n   * @todo shouldn't this account for group transform and return the actual size in canvas coordinate plane?\n   * @return {Number} height value\n   */\n  getScaledHeight(): number {\n    return this._getTransformedDimensions().y;\n  }\n\n  /**\n   * Scales an object (equally by x and y)\n   * @param {Number} value Scale factor\n   * @return {void}\n   */\n  scale(value: number): void {\n    this._set(SCALE_X, value);\n    this._set(SCALE_Y, value);\n    this.setCoords();\n  }\n\n  /**\n   * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\n   * @param {Number} value New width value\n   * @return {void}\n   */\n  scaleToWidth(value: number) {\n    // adjust to bounding rect factor so that rotated shapes would fit as well\n    const boundingRectFactor =\n      this.getBoundingRect().width / this.getScaledWidth();\n    return this.scale(value / this.width / boundingRectFactor);\n  }\n\n  /**\n   * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\n   * @param {Number} value New height value\n   * @return {void}\n   */\n  scaleToHeight(value: number) {\n    // adjust to bounding rect factor so that rotated shapes would fit as well\n    const boundingRectFactor =\n      this.getBoundingRect().height / this.getScaledHeight();\n    return this.scale(value / this.height / boundingRectFactor);\n  }\n\n  getCanvasRetinaScaling() {\n    return this.canvas?.getRetinaScaling() || 1;\n  }\n\n  /**\n   * Returns the object angle relative to canvas counting also the group property\n   * @returns {TDegree}\n   */\n  getTotalAngle(): TDegree {\n    return this.group\n      ? radiansToDegrees(calcPlaneRotation(this.calcTransformMatrix()))\n      : this.angle;\n  }\n\n  /**\n   * Retrieves viewportTransform from Object's canvas if available\n   * @return {TMat2D}\n   */\n  getViewportTransform(): TMat2D {\n    return this.canvas?.viewportTransform || (iMatrix.concat() as TMat2D);\n  }\n\n  /**\n   * Calculates the coordinates of the 4 corner of the bbox, in absolute coordinates.\n   * those never change with zoom or viewport changes.\n   * @return {TCornerPoint}\n   */\n  calcACoords(): TCornerPoint {\n    const rotateMatrix = createRotateMatrix({ angle: this.angle }),\n      { x, y } = this.getRelativeCenterPoint(),\n      tMatrix = createTranslateMatrix(x, y),\n      finalMatrix = multiplyTransformMatrices(tMatrix, rotateMatrix),\n      dim = this._getTransformedDimensions(),\n      w = dim.x / 2,\n      h = dim.y / 2;\n    return {\n      // corners\n      tl: transformPoint({ x: -w, y: -h }, finalMatrix),\n      tr: transformPoint({ x: w, y: -h }, finalMatrix),\n      bl: transformPoint({ x: -w, y: h }, finalMatrix),\n      br: transformPoint({ x: w, y: h }, finalMatrix),\n    };\n  }\n\n  /**\n   * Sets corner and controls position coordinates based on current angle, width and height, left and top.\n   * aCoords are used to quickly find an object on the canvas.\n   * See {@link https://github.com/fabricjs/fabric.js/wiki/When-to-call-setCoords} and {@link http://fabricjs.com/fabric-gotchas}\n   */\n  setCoords(): void {\n    this.aCoords = this.calcACoords();\n  }\n\n  transformMatrixKey(skipGroup = false): number[] {\n    let prefix: number[] = [];\n    if (!skipGroup && this.group) {\n      prefix = this.group.transformMatrixKey(skipGroup);\n    }\n    prefix.push(\n      this.top,\n      this.left,\n      this.width,\n      this.height,\n      this.scaleX,\n      this.scaleY,\n      this.angle,\n      this.strokeWidth,\n      this.skewX,\n      this.skewY,\n      +this.flipX,\n      +this.flipY,\n      resolveOrigin(this.originX),\n      resolveOrigin(this.originY),\n    );\n\n    return prefix;\n  }\n\n  /**\n   * calculate transform matrix that represents the current transformations from the\n   * object's properties.\n   * @param {Boolean} [skipGroup] return transform matrix for object not counting parent transformations\n   * There are some situation in which this is useful to avoid the fake rotation.\n   * @return {TMat2D} transform matrix for the object\n   */\n  calcTransformMatrix(skipGroup = false): TMat2D {\n    let matrix = this.calcOwnMatrix();\n    if (skipGroup || !this.group) {\n      return matrix;\n    }\n    const key = this.transformMatrixKey(skipGroup),\n      cache = this.matrixCache;\n    if (cache && cache.key.every((x, i) => x === key[i])) {\n      return cache.value;\n    }\n    if (this.group) {\n      matrix = multiplyTransformMatrices(\n        this.group.calcTransformMatrix(false),\n        matrix,\n      );\n    }\n    this.matrixCache = {\n      key,\n      value: matrix,\n    };\n    return matrix;\n  }\n\n  /**\n   * calculate transform matrix that represents the current transformations from the\n   * object's properties, this matrix does not include the group transformation\n   * @return {TMat2D} transform matrix for the object\n   */\n  calcOwnMatrix(): TMat2D {\n    const key = this.transformMatrixKey(true),\n      cache = this.ownMatrixCache;\n    if (cache && cache.key === key) {\n      return cache.value;\n    }\n    const center = this.getRelativeCenterPoint(),\n      options = {\n        angle: this.angle,\n        translateX: center.x,\n        translateY: center.y,\n        scaleX: this.scaleX,\n        scaleY: this.scaleY,\n        skewX: this.skewX,\n        skewY: this.skewY,\n        flipX: this.flipX,\n        flipY: this.flipY,\n      },\n      value = composeMatrix(options);\n    this.ownMatrixCache = {\n      key,\n      value,\n    };\n    return value;\n  }\n\n  /**\n   * Calculate object dimensions from its properties\n   * @private\n   * @returns {Point} dimensions\n   */\n  _getNonTransformedDimensions(): Point {\n    return new Point(this.width, this.height).scalarAdd(this.strokeWidth);\n  }\n\n  /**\n   * Calculate object dimensions for controls box, including padding and canvas zoom.\n   * and active selection\n   * @private\n   * @param {object} [options] transform options\n   * @returns {Point} dimensions\n   */\n  _calculateCurrentDimensions(options?: any): Point {\n    return this._getTransformedDimensions(options)\n      .transform(this.getViewportTransform(), true)\n      .scalarAdd(2 * this.padding);\n  }\n\n  // #region Origin\n\n  declare top: number;\n  declare left: number;\n  declare width: number;\n  declare height: number;\n  declare flipX: boolean;\n  declare flipY: boolean;\n  declare scaleX: number;\n  declare scaleY: number;\n  declare skewX: number;\n  declare skewY: number;\n  /**\n   * @deprecated please use 'center' as value in new projects\n   * */\n  declare originX: TOriginX;\n  /**\n   * @deprecated please use 'center' as value in new projects\n   * */\n  declare originY: TOriginY;\n  declare angle: TDegree;\n  declare strokeWidth: number;\n  declare strokeUniform: boolean;\n\n  /**\n   * Object containing this object.\n   * can influence its size and position\n   */\n  declare group?: Group;\n\n  /**\n   * Calculate object bounding box dimensions from its properties scale, skew.\n   * This bounding box is aligned with object angle and not with canvas axis or screen.\n   * @param {Object} [options]\n   * @param {Number} [options.scaleX]\n   * @param {Number} [options.scaleY]\n   * @param {Number} [options.skewX]\n   * @param {Number} [options.skewY]\n   * @private\n   * @returns {Point} dimensions\n   */\n  _getTransformedDimensions(options: any = {}): Point {\n    const dimOptions = {\n      // if scaleX or scaleY are negative numbers,\n      // this will return dimensions that are negative.\n      // and this will break assumptions around the codebase\n      scaleX: this.scaleX,\n      scaleY: this.scaleY,\n      skewX: this.skewX,\n      skewY: this.skewY,\n      width: this.width,\n      height: this.height,\n      strokeWidth: this.strokeWidth,\n      ...options,\n    };\n    // stroke is applied before/after transformations are applied according to `strokeUniform`\n    const strokeWidth = dimOptions.strokeWidth;\n    let preScalingStrokeValue = strokeWidth,\n      postScalingStrokeValue = 0;\n\n    if (this.strokeUniform) {\n      preScalingStrokeValue = 0;\n      postScalingStrokeValue = strokeWidth;\n    }\n    const dimX = dimOptions.width + preScalingStrokeValue,\n      dimY = dimOptions.height + preScalingStrokeValue,\n      noSkew = dimOptions.skewX === 0 && dimOptions.skewY === 0;\n    let finalDimensions;\n    if (noSkew) {\n      finalDimensions = new Point(\n        dimX * dimOptions.scaleX,\n        dimY * dimOptions.scaleY,\n      );\n    } else {\n      finalDimensions = sizeAfterTransform(\n        dimX,\n        dimY,\n        calcDimensionsMatrix(dimOptions),\n      );\n    }\n\n    return finalDimensions.scalarAdd(postScalingStrokeValue);\n  }\n\n  /**\n   * Translates the coordinates from a set of origin to another (based on the object's dimensions)\n   * @param {Point} point The point which corresponds to the originX and originY params\n   * @param {TOriginX} fromOriginX Horizontal origin: 'left', 'center' or 'right'\n   * @param {TOriginY} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\n   * @param {TOriginX} toOriginX Horizontal origin: 'left', 'center' or 'right'\n   * @param {TOriginY} toOriginY Vertical origin: 'top', 'center' or 'bottom'\n   * @return {Point}\n   */\n  translateToGivenOrigin(\n    point: Point,\n    fromOriginX: TOriginX,\n    fromOriginY: TOriginY,\n    toOriginX: TOriginX,\n    toOriginY: TOriginY,\n  ): Point {\n    let x = point.x,\n      y = point.y;\n    const offsetX = resolveOrigin(toOriginX) - resolveOrigin(fromOriginX),\n      offsetY = resolveOrigin(toOriginY) - resolveOrigin(fromOriginY);\n\n    if (offsetX || offsetY) {\n      const dim = this._getTransformedDimensions();\n      x += offsetX * dim.x;\n      y += offsetY * dim.y;\n    }\n\n    return new Point(x, y);\n  }\n\n  /**\n   * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n   * @param {Point} point The point which corresponds to the originX and originY params\n   * @param {TOriginX} originX Horizontal origin: 'left', 'center' or 'right'\n   * @param {TOriginY} originY Vertical origin: 'top', 'center' or 'bottom'\n   * @return {Point}\n   */\n  translateToCenterPoint(\n    point: Point,\n    originX: TOriginX,\n    originY: TOriginY,\n  ): Point {\n    if (originX === CENTER && originY === CENTER) {\n      return point;\n    }\n    const p = this.translateToGivenOrigin(\n      point,\n      originX,\n      originY,\n      CENTER,\n      CENTER,\n    );\n    if (this.angle) {\n      return p.rotate(degreesToRadians(this.angle), point);\n    }\n    return p;\n  }\n\n  /**\n   * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\n   * @param {Point} center The point which corresponds to center of the object\n   * @param {OriginX} originX Horizontal origin: 'left', 'center' or 'right'\n   * @param {OriginY} originY Vertical origin: 'top', 'center' or 'bottom'\n   * @return {Point}\n   */\n  translateToOriginPoint(\n    center: Point,\n    originX: TOriginX,\n    originY: TOriginY,\n  ): Point {\n    const p = this.translateToGivenOrigin(\n      center,\n      CENTER,\n      CENTER,\n      originX,\n      originY,\n    );\n    if (this.angle) {\n      return p.rotate(degreesToRadians(this.angle), center);\n    }\n    return p;\n  }\n\n  /**\n   * Returns the center coordinates of the object relative to canvas\n   * @return {Point}\n   */\n  getCenterPoint(): Point {\n    const relCenter = this.getRelativeCenterPoint();\n    return this.group\n      ? transformPoint(relCenter, this.group.calcTransformMatrix())\n      : relCenter;\n  }\n\n  /**\n   * Returns the center coordinates of the object relative to it's parent\n   * @return {Point}\n   */\n  getRelativeCenterPoint(): Point {\n    return this.translateToCenterPoint(\n      new Point(this.left, this.top),\n      this.originX,\n      this.originY,\n    );\n  }\n\n  /**\n   * Returns the position of the object as if it has a different origin.\n   * Take an object that has left, top set to 100, 100 with origin 'left', 'top'.\n   * Return the values of left top ( wrapped in a point ) that you would need to keep\n   * the same position if origin where different.\n   * Alternatively you can use this to also find which point in the parent plane is a specific origin\n   * ( where is the bottom right corner of my object? )\n   * @param {TOriginX} originX Horizontal origin: 'left', 'center' or 'right'\n   * @param {TOriginY} originY Vertical origin: 'top', 'center' or 'bottom'\n   * @return {Point}\n   */\n  getPointByOrigin(originX: TOriginX, originY: TOriginY): Point {\n    return this.translateToOriginPoint(\n      this.getRelativeCenterPoint(),\n      originX,\n      originY,\n    );\n  }\n\n  /**\n   * Sets the position of the object taking into consideration the object's origin\n   * @param {Point} pos The new position of the object\n   * @param {TOriginX} originX Horizontal origin: 'left', 'center' or 'right'\n   * @param {TOriginY} originY Vertical origin: 'top', 'center' or 'bottom'\n   * @return {void}\n   */\n  setPositionByOrigin(pos: Point, originX: TOriginX, originY: TOriginY) {\n    const center = this.translateToCenterPoint(pos, originX, originY),\n      position = this.translateToOriginPoint(\n        center,\n        this.originX,\n        this.originY,\n      );\n    this.set({ left: position.x, top: position.y });\n  }\n\n  /**\n   * @private\n   */\n  _getLeftTopCoords() {\n    return this.translateToOriginPoint(\n      this.getRelativeCenterPoint(),\n      LEFT,\n      TOP,\n    );\n  }\n}\n","import { cache } from '../../cache';\nimport { config } from '../../config';\nimport {\n  ALIASING_LIMIT,\n  CENTER,\n  iMatrix,\n  LEFT,\n  SCALE_X,\n  SCALE_Y,\n  STROKE,\n  FILL,\n  TOP,\n  VERSION,\n} from '../../constants';\nimport type { ObjectEvents } from '../../EventTypeDefs';\nimport { Point } from '../../Point';\nimport { Shadow } from '../../Shadow';\nimport type {\n  TDegree,\n  TFiller,\n  TSize,\n  TCacheCanvasDimensions,\n  Abortable,\n  TOptions,\n  ImageFormat,\n} from '../../typedefs';\nimport { classRegistry } from '../../ClassRegistry';\nimport { runningAnimations } from '../../util/animation/AnimationRegistry';\nimport { capValue } from '../../util/misc/capValue';\nimport {\n  createCanvasElement,\n  createCanvasElementFor,\n  toDataURL,\n} from '../../util/misc/dom';\nimport { invertTransform, qrDecompose } from '../../util/misc/matrix';\nimport { enlivenObjectEnlivables } from '../../util/misc/objectEnlive';\nimport {\n  resetObjectTransform,\n  saveObjectTransform,\n} from '../../util/misc/objectTransforms';\nimport { sendObjectToPlane } from '../../util/misc/planeChange';\nimport { pick, pickBy } from '../../util/misc/pick';\nimport { toFixed } from '../../util/misc/toFixed';\nimport type { Group } from '../Group';\nimport { StaticCanvas } from '../../canvas/StaticCanvas';\nimport {\n  isFiller,\n  isSerializableFiller,\n  isTextObject,\n} from '../../util/typeAssertions';\nimport type { FabricImage } from '../Image';\nimport {\n  cacheProperties,\n  fabricObjectDefaultValues,\n  stateProperties,\n} from './defaultValues';\nimport type { Gradient } from '../../gradient/Gradient';\nimport type { Pattern } from '../../Pattern';\nimport type { Canvas } from '../../canvas/Canvas';\nimport type { SerializedObjectProps } from './types/SerializedObjectProps';\nimport type { ObjectProps } from './types/ObjectProps';\nimport { getDevicePixelRatio, getEnv } from '../../env';\nimport { log } from '../../util/internals/console';\nimport type { TColorArg } from '../../color/typedefs';\nimport type { TAnimation } from '../../util/animation/animate';\nimport { animate, animateColor } from '../../util/animation/animate';\nimport type {\n  AnimationOptions,\n  ArrayAnimationOptions,\n  ColorAnimationOptions,\n  ValueAnimationOptions,\n} from '../../util/animation/types';\nimport { ObjectGeometry } from './ObjectGeometry';\n\ntype TAncestor = FabricObject;\ntype TCollection = Group;\n\nexport type Ancestors =\n  | [FabricObject | Group]\n  | [FabricObject | Group, ...Group[]]\n  | Group[];\n\nexport type AncestryComparison = {\n  /**\n   * common ancestors of `this` and`other`(may include`this` | `other`)\n   */\n  common: Ancestors;\n  /**\n   * ancestors that are of `this` only\n   */\n  fork: Ancestors;\n  /**\n   * ancestors that are of `other` only\n   */\n  otherFork: Ancestors;\n};\n\nexport type TCachedFabricObject<T extends FabricObject = FabricObject> = T &\n  Required<\n    Pick<\n      T,\n      | 'zoomX'\n      | 'zoomY'\n      | '_cacheCanvas'\n      | '_cacheContext'\n      | 'cacheTranslationX'\n      | 'cacheTranslationY'\n    >\n  > & {\n    _cacheContext: CanvasRenderingContext2D;\n  };\n\nexport type ObjectToCanvasElementOptions = {\n  format?: ImageFormat;\n  /** Multiplier to scale by */\n  multiplier?: number;\n  /** Cropping left offset. Introduced in v1.2.14 */\n  left?: number;\n  /** Cropping top offset. Introduced in v1.2.14 */\n  top?: number;\n  /** Cropping width. Introduced in v1.2.14 */\n  width?: number;\n  /** Cropping height. Introduced in v1.2.14 */\n  height?: number;\n  /** Enable retina scaling for clone image. Introduce in 1.6.4 */\n  enableRetinaScaling?: boolean;\n  /** Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4 */\n  withoutTransform?: boolean;\n  /** Remove current object shadow. Introduced in 2.4.2 */\n  withoutShadow?: boolean;\n  /** Account for canvas viewport transform */\n  viewportTransform?: boolean;\n  /** Function to create the output canvas to export onto */\n  canvasProvider?: <T extends StaticCanvas>(el?: HTMLCanvasElement) => T;\n};\n\ntype toDataURLOptions = ObjectToCanvasElementOptions & {\n  quality?: number;\n};\n\nexport type DrawContext =\n  | {\n      parentClipPaths: FabricObject[];\n      width: number;\n      height: number;\n      cacheTranslationX: number;\n      cacheTranslationY: number;\n      zoomX: number;\n      zoomY: number;\n    }\n  | Record<string, never>;\n\n/**\n * Root object class from which all 2d shape classes inherit from\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\n *\n * @fires added\n * @fires removed\n *\n * @fires selected\n * @fires deselected\n *\n * @fires rotating\n * @fires scaling\n * @fires moving\n * @fires skewing\n * @fires modified\n *\n * @fires mousedown\n * @fires mouseup\n * @fires mouseover\n * @fires mouseout\n * @fires mousewheel\n * @fires mousedblclick\n *\n * @fires dragover\n * @fires dragenter\n * @fires dragleave\n * @fires drop\n */\nexport class FabricObject<\n    Props extends TOptions<ObjectProps> = Partial<ObjectProps>,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    SProps extends SerializedObjectProps = SerializedObjectProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends ObjectGeometry<EventSpec>\n  implements ObjectProps\n{\n  declare minScaleLimit: number;\n\n  declare opacity: number;\n\n  declare paintFirst: 'fill' | 'stroke';\n  declare fill: string | TFiller | null;\n  declare fillRule: CanvasFillRule;\n  declare stroke: string | TFiller | null;\n  declare strokeDashArray: number[] | null;\n  declare strokeDashOffset: number;\n  declare strokeLineCap: CanvasLineCap;\n  declare strokeLineJoin: CanvasLineJoin;\n  declare strokeMiterLimit: number;\n\n  declare globalCompositeOperation: GlobalCompositeOperation;\n  declare backgroundColor: string;\n\n  declare shadow: Shadow | null;\n\n  declare visible: boolean;\n\n  declare includeDefaultValues: boolean;\n  declare excludeFromExport: boolean;\n\n  declare objectCaching: boolean;\n\n  declare clipPath?: FabricObject;\n  declare inverted: boolean;\n  declare absolutePositioned: boolean;\n  declare centeredRotation: boolean;\n  declare centeredScaling: boolean;\n\n  /**\n   * This list of properties is used to check if the state of an object is changed.\n   * This state change now is only used for children of groups to understand if a group\n   * needs its cache regenerated during a .set call\n   * @type Array\n   */\n  static stateProperties: string[] = stateProperties;\n\n  /**\n   * List of properties to consider when checking if cache needs refresh\n   * Those properties are checked by\n   * calls to Object.set(key, value). If the key is in this list, the object is marked as dirty\n   * and refreshed at the next render\n   * @type Array\n   */\n  static cacheProperties: string[] = cacheProperties;\n\n  /**\n   * When set to `true`, object's cache will be rerendered next render call.\n   * since 1.7.0\n   * @type Boolean\n   * @default true\n   */\n  declare dirty: boolean;\n\n  /**\n   * Quick access for the _cacheCanvas rendering context\n   * This is part of the objectCaching feature\n   * since 1.7.0\n   * @type boolean\n   * @default undefined\n   * @private\n   */\n  _cacheContext: CanvasRenderingContext2D | null = null;\n\n  /**\n   * A reference to the HTMLCanvasElement that is used to contain the cache of the object\n   * this canvas element is resized and cleared as needed\n   * Is marked private, you can read it, don't use it since it is handled by fabric\n   * since 1.7.0\n   * @type HTMLCanvasElement\n   * @default undefined\n   * @private\n   */\n  declare _cacheCanvas?: HTMLCanvasElement;\n\n  /**\n   * zoom level used on the cacheCanvas to draw the cache, X axe\n   * since 1.7.0\n   * @type number\n   * @default undefined\n   * @private\n   */\n  declare zoomX?: number;\n\n  /**\n   * zoom level used on the cacheCanvas to draw the cache, Y axe\n   * since 1.7.0\n   * @type number\n   * @default undefined\n   * @private\n   */\n  declare zoomY?: number;\n\n  /**\n   * zoom level used on the cacheCanvas to draw the cache, Y axe\n   * since 1.7.0\n   * @type number\n   * @default undefined\n   * @private\n   */\n  declare cacheTranslationX?: number;\n\n  /**\n   * translation of the cacheCanvas away from the center, for subpixel accuracy and crispness\n   * since 1.7.0\n   * @type number\n   * @default undefined\n   * @private\n   */\n  declare cacheTranslationY?: number;\n\n  /**\n   * A reference to the parent of the object, usually a Group\n   * @type number\n   * @default undefined\n   * @private\n   */\n  declare group?: Group;\n\n  /**\n   * Indicate if the object is sitting on a cache dedicated to it\n   * or is part of a larger cache for many object ( a group for example)\n   * @type number\n   * @default undefined\n   * @private\n   */\n  declare ownCaching?: boolean;\n\n  /**\n   * Private. indicates if the object inside a group is on a transformed context or not\n   * or is part of a larger cache for many object ( a group for example)\n   * @type boolean\n   * @default undefined\n   * @private\n   */\n  declare _transformDone?: boolean;\n\n  static ownDefaults = fabricObjectDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return FabricObject.ownDefaults;\n  }\n\n  /**\n   * The class type.\n   * This is used for serialization and deserialization purposes and internally it can be used\n   * to identify classes.\n   * When we transform a class in a plain JS object we need a way to recognize which class it was,\n   * and the type is the way we do that. It has no other purposes and you should not give one.\n   * Hard to reach on instances and please do not use to drive instance's logic (this.constructor.type).\n   * To idenfity a class use instanceof class ( instanceof Rect ).\n   * We do not do that in fabricJS code because we want to try to have code splitting possible.\n   */\n  static type = 'FabricObject';\n\n  /**\n   * Legacy identifier of the class. Prefer using utils like isType or instanceOf\n   * Will be removed in fabric 7 or 8.\n   * The setter exists to avoid type errors in old code and possibly current deserialization code.\n   * DO NOT build new code around this type value\n   * @TODO add sustainable warning message\n   * @type string\n   * @deprecated\n   */\n  get type() {\n    const name = (this.constructor as typeof FabricObject).type;\n    if (name === 'FabricObject') {\n      return 'object';\n    }\n    return name.toLowerCase();\n  }\n\n  set type(value) {\n    log('warn', 'Setting type has no effect', value);\n  }\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  constructor(options?: Props) {\n    super();\n    Object.assign(this, FabricObject.ownDefaults);\n    this.setOptions(options);\n  }\n\n  /**\n   * Create a the canvas used to keep the cached copy of the object\n   * @private\n   */\n  _createCacheCanvas() {\n    this._cacheCanvas = createCanvasElement();\n    this._cacheContext = this._cacheCanvas.getContext('2d');\n    this._updateCacheCanvas();\n    // if canvas gets created, is empty, so dirty.\n    this.dirty = true;\n  }\n\n  /**\n   * Limit the cache dimensions so that X * Y do not cross config.perfLimitSizeTotal\n   * and each side do not cross fabric.cacheSideLimit\n   * those numbers are configurable so that you can get as much detail as you want\n   * making bargain with performances.\n   * @param {Object} dims\n   * @param {Object} dims.width width of canvas\n   * @param {Object} dims.height height of canvas\n   * @param {Object} dims.zoomX zoomX zoom value to unscale the canvas before drawing cache\n   * @param {Object} dims.zoomY zoomY zoom value to unscale the canvas before drawing cache\n   * @return {Object}.width width of canvas\n   * @return {Object}.height height of canvas\n   * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n   * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n   */\n  _limitCacheSize(\n    dims: TSize & { zoomX: number; zoomY: number; capped: boolean } & any,\n  ) {\n    const width = dims.width,\n      height = dims.height,\n      max = config.maxCacheSideLimit,\n      min = config.minCacheSideLimit;\n    if (\n      width <= max &&\n      height <= max &&\n      width * height <= config.perfLimitSizeTotal\n    ) {\n      if (width < min) {\n        dims.width = min;\n      }\n      if (height < min) {\n        dims.height = min;\n      }\n      return dims;\n    }\n    const ar = width / height,\n      [limX, limY] = cache.limitDimsByArea(ar),\n      x = capValue(min, limX, max),\n      y = capValue(min, limY, max);\n    if (width > x) {\n      dims.zoomX /= width / x;\n      dims.width = x;\n      dims.capped = true;\n    }\n    if (height > y) {\n      dims.zoomY /= height / y;\n      dims.height = y;\n      dims.capped = true;\n    }\n    return dims;\n  }\n\n  /**\n   * Return the dimension and the zoom level needed to create a cache canvas\n   * big enough to host the object to be cached.\n   * @private\n   * @return {Object}.x width of object to be cached\n   * @return {Object}.y height of object to be cached\n   * @return {Object}.width width of canvas\n   * @return {Object}.height height of canvas\n   * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n   * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n   */\n  _getCacheCanvasDimensions(): TCacheCanvasDimensions {\n    const objectScale = this.getTotalObjectScaling(),\n      // calculate dimensions without skewing\n      dim = this._getTransformedDimensions({ skewX: 0, skewY: 0 }),\n      neededX = (dim.x * objectScale.x) / this.scaleX,\n      neededY = (dim.y * objectScale.y) / this.scaleY;\n    return {\n      // for sure this ALIASING_LIMIT is slightly creating problem\n      // in situation in which the cache canvas gets an upper limit\n      // also objectScale contains already scaleX and scaleY\n      width: neededX + ALIASING_LIMIT,\n      height: neededY + ALIASING_LIMIT,\n      zoomX: objectScale.x,\n      zoomY: objectScale.y,\n      x: neededX,\n      y: neededY,\n    };\n  }\n\n  /**\n   * Update width and height of the canvas for cache\n   * returns true or false if canvas needed resize.\n   * @private\n   * @return {Boolean} true if the canvas has been resized\n   */\n  _updateCacheCanvas() {\n    const canvas = this._cacheCanvas!,\n      context = this._cacheContext,\n      dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\n      minCacheSize = config.minCacheSideLimit,\n      width = dims.width,\n      height = dims.height,\n      zoomX = dims.zoomX,\n      zoomY = dims.zoomY,\n      dimensionsChanged = width !== canvas.width || height !== canvas.height,\n      zoomChanged = this.zoomX !== zoomX || this.zoomY !== zoomY;\n\n    if (!canvas || !context) {\n      return false;\n    }\n\n    let drawingWidth,\n      drawingHeight,\n      shouldRedraw = dimensionsChanged || zoomChanged,\n      additionalWidth = 0,\n      additionalHeight = 0,\n      shouldResizeCanvas = false;\n\n    if (dimensionsChanged) {\n      const canvasWidth = (this._cacheCanvas as HTMLCanvasElement).width,\n        canvasHeight = (this._cacheCanvas as HTMLCanvasElement).height,\n        sizeGrowing = width > canvasWidth || height > canvasHeight,\n        sizeShrinking =\n          (width < canvasWidth * 0.9 || height < canvasHeight * 0.9) &&\n          canvasWidth > minCacheSize &&\n          canvasHeight > minCacheSize;\n      shouldResizeCanvas = sizeGrowing || sizeShrinking;\n      if (\n        sizeGrowing &&\n        !dims.capped &&\n        (width > minCacheSize || height > minCacheSize)\n      ) {\n        additionalWidth = width * 0.1;\n        additionalHeight = height * 0.1;\n      }\n    }\n    if (isTextObject(this) && this.path) {\n      shouldRedraw = true;\n      shouldResizeCanvas = true;\n      // IMHO in those lines we are using zoomX and zoomY not the this version.\n      additionalWidth += this.getHeightOfLine(0) * this.zoomX!;\n      additionalHeight += this.getHeightOfLine(0) * this.zoomY!;\n    }\n    if (shouldRedraw) {\n      if (shouldResizeCanvas) {\n        canvas.width = Math.ceil(width + additionalWidth);\n        canvas.height = Math.ceil(height + additionalHeight);\n      } else {\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        context.clearRect(0, 0, canvas.width, canvas.height);\n      }\n      drawingWidth = dims.x / 2;\n      drawingHeight = dims.y / 2;\n      this.cacheTranslationX =\n        Math.round(canvas.width / 2 - drawingWidth) + drawingWidth;\n      this.cacheTranslationY =\n        Math.round(canvas.height / 2 - drawingHeight) + drawingHeight;\n      context.translate(this.cacheTranslationX, this.cacheTranslationY);\n      context.scale(zoomX, zoomY);\n      this.zoomX = zoomX;\n      this.zoomY = zoomY;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Sets object's properties from options, for class constructor only.\n   * Needs to be overridden for different defaults.\n   * @protected\n   * @param {Object} [options] Options object\n   */\n  protected setOptions(options: Record<string, any> = {}) {\n    this._setOptions(options);\n  }\n\n  /**\n   * Transforms context when rendering an object\n   * @param {CanvasRenderingContext2D} ctx Context\n   */\n  transform(ctx: CanvasRenderingContext2D) {\n    const needFullTransform =\n      (this.group && !this.group._transformDone) ||\n      (this.group && this.canvas && ctx === (this.canvas as Canvas).contextTop);\n    const m = this.calcTransformMatrix(!needFullTransform);\n    ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n  }\n\n  /**\n   * Return the object scale factor counting also the group scaling\n   * @return {Point}\n   */\n  getObjectScaling() {\n    // if the object is a top level one, on the canvas, we go for simple aritmetic\n    // otherwise the complex method with angles will return approximations and decimals\n    // and will likely kill the cache when not needed\n    // https://github.com/fabricjs/fabric.js/issues/7157\n    if (!this.group) {\n      return new Point(Math.abs(this.scaleX), Math.abs(this.scaleY));\n    }\n    // if we are inside a group total zoom calculation is complex, we defer to generic matrices\n    const options = qrDecompose(this.calcTransformMatrix());\n    return new Point(Math.abs(options.scaleX), Math.abs(options.scaleY));\n  }\n\n  /**\n   * Return the object scale factor counting also the group scaling, zoom and retina\n   * @return {Object} object with scaleX and scaleY properties\n   */\n  getTotalObjectScaling() {\n    const scale = this.getObjectScaling();\n    if (this.canvas) {\n      const zoom = this.canvas.getZoom();\n      const retina = this.getCanvasRetinaScaling();\n      return scale.scalarMultiply(zoom * retina);\n    }\n    return scale;\n  }\n\n  /**\n   * Return the object opacity counting also the group property\n   * @return {Number}\n   */\n  getObjectOpacity() {\n    let opacity = this.opacity;\n    if (this.group) {\n      opacity *= this.group.getObjectOpacity();\n    }\n    return opacity;\n  }\n\n  /**\n   * Makes sure the scale is valid and modifies it if necessary\n   * @todo: this is a control action issue, not a geometry one\n   * @private\n   * @param {Number} value, unconstrained\n   * @return {Number} constrained value;\n   */\n  _constrainScale(value: number): number {\n    if (Math.abs(value) < this.minScaleLimit) {\n      if (value < 0) {\n        return -this.minScaleLimit;\n      } else {\n        return this.minScaleLimit;\n      }\n    } else if (value === 0) {\n      return 0.0001;\n    }\n    return value;\n  }\n\n  /**\n   * Handles setting values on the instance and handling internal side effects\n   * @protected\n   * @param {String} key\n   * @param {*} value\n   */\n  _set(key: string, value: any) {\n    if (key === SCALE_X || key === SCALE_Y) {\n      value = this._constrainScale(value);\n    }\n    if (key === SCALE_X && value < 0) {\n      this.flipX = !this.flipX;\n      value *= -1;\n    } else if (key === 'scaleY' && value < 0) {\n      this.flipY = !this.flipY;\n      value *= -1;\n      // i don't like this automatic initialization here\n    } else if (key === 'shadow' && value && !(value instanceof Shadow)) {\n      value = new Shadow(value);\n    }\n\n    const isChanged = this[key as keyof this] !== value;\n    this[key as keyof this] = value;\n\n    // invalidate caches\n    if (\n      isChanged &&\n      (this.constructor as typeof FabricObject).cacheProperties.includes(key)\n    ) {\n      this.dirty = true;\n    }\n    // a dirty child makes the parent dirty.\n    // but a non dirty child does not make the parent not dirty.\n    // the parent could be dirty for some other reason.\n    this.parent &&\n      (this.dirty ||\n        (isChanged &&\n          (this.constructor as typeof FabricObject).stateProperties.includes(\n            key,\n          ))) &&\n      this.parent._set('dirty', true);\n\n    return this;\n  }\n\n  /*\n   * @private\n   * return if the object would be visible in rendering\n   * @memberOf FabricObject.prototype\n   * @return {Boolean}\n   */\n  isNotVisible() {\n    return (\n      this.opacity === 0 ||\n      (!this.width && !this.height && this.strokeWidth === 0) ||\n      !this.visible\n    );\n  }\n\n  /**\n   * Renders an object on a specified context\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  render(ctx: CanvasRenderingContext2D) {\n    // do not render if width/height are zeros or object is not visible\n    if (this.isNotVisible()) {\n      return;\n    }\n    if (\n      this.canvas &&\n      this.canvas.skipOffscreen &&\n      !this.group &&\n      !this.isOnScreen()\n    ) {\n      return;\n    }\n    ctx.save();\n    this._setupCompositeOperation(ctx);\n    this.drawSelectionBackground(ctx);\n    this.transform(ctx);\n    this._setOpacity(ctx);\n    this._setShadow(ctx);\n    if (this.shouldCache()) {\n      (this as TCachedFabricObject).renderCache();\n      (this as TCachedFabricObject).drawCacheOnCanvas(ctx);\n    } else {\n      this._removeCacheCanvas();\n      this.drawObject(ctx, false, {});\n      this.dirty = false;\n    }\n    ctx.restore();\n  }\n\n  drawSelectionBackground(_ctx: CanvasRenderingContext2D) {\n    /* no op */\n  }\n\n  renderCache(this: TCachedFabricObject, options?: any) {\n    options = options || {};\n    if (!this._cacheCanvas || !this._cacheContext) {\n      this._createCacheCanvas();\n    }\n    if (this.isCacheDirty() && this._cacheContext) {\n      const { zoomX, zoomY, cacheTranslationX, cacheTranslationY } = this;\n      const { width, height } = this._cacheCanvas;\n      this.drawObject(this._cacheContext, options.forClipping, {\n        zoomX,\n        zoomY,\n        cacheTranslationX,\n        cacheTranslationY,\n        width,\n        height,\n        parentClipPaths: [],\n      });\n      this.dirty = false;\n    }\n  }\n\n  /**\n   * Remove cacheCanvas and its dimensions from the objects\n   */\n  _removeCacheCanvas() {\n    this._cacheCanvas = undefined;\n    this._cacheContext = null;\n  }\n\n  /**\n   * return true if the object will draw a stroke\n   * Does not consider text styles. This is just a shortcut used at rendering time\n   * We want it to be an approximation and be fast.\n   * wrote to avoid extra caching, it has to return true when stroke happens,\n   * can guess when it will not happen at 100% chance, does not matter if it misses\n   * some use case where the stroke is invisible.\n   * @since 3.0.0\n   * @returns Boolean\n   */\n  hasStroke() {\n    return (\n      this.stroke && this.stroke !== 'transparent' && this.strokeWidth !== 0\n    );\n  }\n\n  /**\n   * return true if the object will draw a fill\n   * Does not consider text styles. This is just a shortcut used at rendering time\n   * We want it to be an approximation and be fast.\n   * wrote to avoid extra caching, it has to return true when fill happens,\n   * can guess when it will not happen at 100% chance, does not matter if it misses\n   * some use case where the fill is invisible.\n   * @since 3.0.0\n   * @returns Boolean\n   */\n  hasFill() {\n    return this.fill && this.fill !== 'transparent';\n  }\n\n  /**\n   * When set to `true`, force the object to have its own cache, even if it is inside a group\n   * it may be needed when your object behave in a particular way on the cache and always needs\n   * its own isolated canvas to render correctly.\n   * Created to be overridden\n   * since 1.7.12\n   * @returns Boolean\n   */\n  needsItsOwnCache() {\n    if (\n      this.paintFirst === STROKE &&\n      this.hasFill() &&\n      this.hasStroke() &&\n      !!this.shadow\n    ) {\n      return true;\n    }\n    if (this.clipPath) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Decide if the object should cache or not. Create its own cache level\n   * objectCaching is a global flag, wins over everything\n   * needsItsOwnCache should be used when the object drawing method requires\n   * a cache step. None of the fabric classes requires it.\n   * Generally you do not cache objects in groups because the group outside is cached.\n   * Read as: cache if is needed, or if the feature is enabled but we are not already caching.\n   * @return {Boolean}\n   */\n  shouldCache() {\n    this.ownCaching =\n      this.needsItsOwnCache() ||\n      (this.objectCaching && (!this.parent || !this.parent.isOnACache()));\n    return this.ownCaching;\n  }\n\n  /**\n   * Check if this object will cast a shadow with an offset.\n   * used by Group.shouldCache to know if child has a shadow recursively\n   * @return {Boolean}\n   * @deprecated\n   */\n  willDrawShadow() {\n    return (\n      !!this.shadow && (this.shadow.offsetX !== 0 || this.shadow.offsetY !== 0)\n    );\n  }\n\n  /**\n   * Execute the drawing operation for an object clipPath\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {FabricObject} clipPath\n   */\n  drawClipPathOnCache(\n    ctx: CanvasRenderingContext2D,\n    clipPath: FabricObject,\n    canvasWithClipPath: HTMLCanvasElement,\n  ) {\n    ctx.save();\n    // DEBUG: uncomment this line, comment the following\n    // ctx.globalAlpha = 0.4\n    if (clipPath.inverted) {\n      ctx.globalCompositeOperation = 'destination-out';\n    } else {\n      ctx.globalCompositeOperation = 'destination-in';\n    }\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    //ctx.scale(1 / 2, 1 / 2);\n    ctx.drawImage(canvasWithClipPath, 0, 0);\n    ctx.restore();\n  }\n\n  /**\n   * Execute the drawing operation for an object on a specified context\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {boolean} forClipping apply clipping styles\n   * @param {DrawContext} context additional context for rendering\n   */\n  drawObject(\n    ctx: CanvasRenderingContext2D,\n    forClipping: boolean | undefined,\n    context: DrawContext,\n  ) {\n    const originalFill = this.fill,\n      originalStroke = this.stroke;\n    if (forClipping) {\n      this.fill = 'black';\n      this.stroke = '';\n      this._setClippingProperties(ctx);\n    } else {\n      this._renderBackground(ctx);\n    }\n    this._render(ctx);\n    this._drawClipPath(ctx, this.clipPath, context);\n    this.fill = originalFill;\n    this.stroke = originalStroke;\n  }\n\n  private createClipPathLayer(\n    this: TCachedFabricObject,\n    clipPath: FabricObject,\n    context: DrawContext,\n  ) {\n    const canvas = createCanvasElementFor(context as TSize);\n    const ctx = canvas.getContext('2d')!;\n    ctx.translate(context.cacheTranslationX, context.cacheTranslationY);\n    ctx.scale(context.zoomX, context.zoomY);\n    clipPath._cacheCanvas = canvas;\n    context.parentClipPaths.forEach((prevClipPath) => {\n      prevClipPath.transform(ctx);\n    });\n    context.parentClipPaths.push(clipPath);\n    if (clipPath.absolutePositioned) {\n      const m = invertTransform(this.calcTransformMatrix());\n      ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n    }\n    clipPath.transform(ctx);\n    clipPath.drawObject(ctx, true, context);\n    return canvas;\n  }\n\n  /**\n   * Prepare clipPath state and cache and draw it on instance's cache\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {FabricObject} clipPath\n   */\n  _drawClipPath(\n    ctx: CanvasRenderingContext2D,\n    clipPath: FabricObject | undefined,\n    context: DrawContext,\n  ) {\n    if (!clipPath) {\n      return;\n    }\n    // needed to setup _transformDone\n    // TODO find a better solution?\n    clipPath._transformDone = true;\n    const canvas = (this as TCachedFabricObject).createClipPathLayer(\n      clipPath,\n      context,\n    );\n    this.drawClipPathOnCache(ctx, clipPath, canvas);\n  }\n\n  /**\n   * Paint the cached copy of the object on the target context.\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  drawCacheOnCanvas(this: TCachedFabricObject, ctx: CanvasRenderingContext2D) {\n    ctx.scale(1 / this.zoomX, 1 / this.zoomY);\n    ctx.drawImage(\n      this._cacheCanvas,\n      -this.cacheTranslationX,\n      -this.cacheTranslationY,\n    );\n  }\n\n  /**\n   * Check if cache is dirty\n   * @param {Boolean} skipCanvas skip canvas checks because this object is painted\n   * on parent canvas.\n   */\n  isCacheDirty(skipCanvas = false) {\n    if (this.isNotVisible()) {\n      return false;\n    }\n    const canvas = this._cacheCanvas;\n    const ctx = this._cacheContext;\n    if (canvas && ctx && !skipCanvas && this._updateCacheCanvas()) {\n      // in this case the context is already cleared.\n      return true;\n    } else {\n      if (this.dirty || (this.clipPath && this.clipPath.absolutePositioned)) {\n        if (canvas && ctx && !skipCanvas) {\n          ctx.save();\n          ctx.setTransform(1, 0, 0, 1, 0, 0);\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\n          ctx.restore();\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Draws a background for the object big as its untransformed dimensions\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderBackground(ctx: CanvasRenderingContext2D) {\n    if (!this.backgroundColor) {\n      return;\n    }\n    const dim = this._getNonTransformedDimensions();\n    ctx.fillStyle = this.backgroundColor;\n\n    ctx.fillRect(-dim.x / 2, -dim.y / 2, dim.x, dim.y);\n    // if there is background color no other shadows\n    // should be casted\n    this._removeShadow(ctx);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _setOpacity(ctx: CanvasRenderingContext2D) {\n    if (this.group && !this.group._transformDone) {\n      ctx.globalAlpha = this.getObjectOpacity();\n    } else {\n      ctx.globalAlpha *= this.opacity;\n    }\n  }\n\n  _setStrokeStyles(\n    ctx: CanvasRenderingContext2D,\n    decl: Pick<\n      this,\n      | 'stroke'\n      | 'strokeWidth'\n      | 'strokeLineCap'\n      | 'strokeDashOffset'\n      | 'strokeLineJoin'\n      | 'strokeMiterLimit'\n    >,\n  ) {\n    const stroke = decl.stroke;\n    if (stroke) {\n      ctx.lineWidth = decl.strokeWidth;\n      ctx.lineCap = decl.strokeLineCap;\n      ctx.lineDashOffset = decl.strokeDashOffset;\n      ctx.lineJoin = decl.strokeLineJoin;\n      ctx.miterLimit = decl.strokeMiterLimit;\n      if (isFiller(stroke)) {\n        if (\n          (stroke as Gradient<'linear'>).gradientUnits === 'percentage' ||\n          (stroke as Gradient<'linear'>).gradientTransform ||\n          (stroke as Pattern).patternTransform\n        ) {\n          // need to transform gradient in a pattern.\n          // this is a slow process. If you are hitting this codepath, and the object\n          // is not using caching, you should consider switching it on.\n          // we need a canvas as big as the current object caching canvas.\n          this._applyPatternForTransformedGradient(ctx, stroke);\n        } else {\n          // is a simple gradient or pattern\n          ctx.strokeStyle = stroke.toLive(ctx)!;\n          this._applyPatternGradientTransform(ctx, stroke);\n        }\n      } else {\n        // is a color\n        ctx.strokeStyle = decl.stroke as string;\n      }\n    }\n  }\n\n  _setFillStyles(ctx: CanvasRenderingContext2D, { fill }: Pick<this, 'fill'>) {\n    if (fill) {\n      if (isFiller(fill)) {\n        ctx.fillStyle = fill.toLive(ctx)!;\n        this._applyPatternGradientTransform(ctx, fill);\n      } else {\n        ctx.fillStyle = fill;\n      }\n    }\n  }\n\n  _setClippingProperties(ctx: CanvasRenderingContext2D) {\n    ctx.globalAlpha = 1;\n    ctx.strokeStyle = 'transparent';\n    ctx.fillStyle = '#000000';\n  }\n\n  /**\n   * @private\n   * Sets line dash\n   * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\n   * @param {Array} dashArray array representing dashes\n   */\n  _setLineDash(ctx: CanvasRenderingContext2D, dashArray?: number[] | null) {\n    if (!dashArray || dashArray.length === 0) {\n      return;\n    }\n    // Spec requires the concatenation of two copies of the dash array when the number of elements is odd\n    if (1 & dashArray.length) {\n      dashArray.push(...dashArray);\n    }\n    ctx.setLineDash(dashArray);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _setShadow(ctx: CanvasRenderingContext2D) {\n    if (!this.shadow) {\n      return;\n    }\n\n    const shadow = this.shadow,\n      canvas = this.canvas,\n      retinaScaling = this.getCanvasRetinaScaling(),\n      [sx, , , sy] = canvas?.viewportTransform || iMatrix,\n      multX = sx * retinaScaling,\n      multY = sy * retinaScaling,\n      scaling = shadow.nonScaling ? new Point(1, 1) : this.getObjectScaling();\n    ctx.shadowColor = shadow.color;\n    ctx.shadowBlur =\n      (shadow.blur *\n        config.browserShadowBlurConstant *\n        (multX + multY) *\n        (scaling.x + scaling.y)) /\n      4;\n    ctx.shadowOffsetX = shadow.offsetX * multX * scaling.x;\n    ctx.shadowOffsetY = shadow.offsetY * multY * scaling.y;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _removeShadow(ctx: CanvasRenderingContext2D) {\n    if (!this.shadow) {\n      return;\n    }\n\n    ctx.shadowColor = '';\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {TFiller} filler {@link Pattern} or {@link Gradient}\n   */\n  _applyPatternGradientTransform(\n    ctx: CanvasRenderingContext2D,\n    filler: TFiller,\n  ) {\n    if (!isFiller(filler)) {\n      return { offsetX: 0, offsetY: 0 };\n    }\n    const t =\n      (filler as Gradient<'linear'>).gradientTransform ||\n      (filler as Pattern).patternTransform;\n    const offsetX = -this.width / 2 + filler.offsetX || 0,\n      offsetY = -this.height / 2 + filler.offsetY || 0;\n\n    if ((filler as Gradient<'linear'>).gradientUnits === 'percentage') {\n      ctx.transform(this.width, 0, 0, this.height, offsetX, offsetY);\n    } else {\n      ctx.transform(1, 0, 0, 1, offsetX, offsetY);\n    }\n    if (t) {\n      ctx.transform(t[0], t[1], t[2], t[3], t[4], t[5]);\n    }\n    return { offsetX: offsetX, offsetY: offsetY };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderPaintInOrder(ctx: CanvasRenderingContext2D) {\n    if (this.paintFirst === STROKE) {\n      this._renderStroke(ctx);\n      this._renderFill(ctx);\n    } else {\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    }\n  }\n\n  /**\n   * @private\n   * function that actually render something on the context.\n   * empty here to allow Obects to work on tests to benchmark fabric functionalites\n   * not related to rendering\n   * @param {CanvasRenderingContext2D} _ctx Context to render on\n   */\n  _render(_ctx: CanvasRenderingContext2D) {\n    // placeholder to be overridden\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderFill(ctx: CanvasRenderingContext2D) {\n    if (!this.fill) {\n      return;\n    }\n\n    ctx.save();\n    this._setFillStyles(ctx, this);\n    if (this.fillRule === 'evenodd') {\n      ctx.fill('evenodd');\n    } else {\n      ctx.fill();\n    }\n    ctx.restore();\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderStroke(ctx: CanvasRenderingContext2D) {\n    if (!this.stroke || this.strokeWidth === 0) {\n      return;\n    }\n\n    if (this.shadow && !this.shadow.affectStroke) {\n      this._removeShadow(ctx);\n    }\n\n    ctx.save();\n    if (this.strokeUniform) {\n      const scaling = this.getObjectScaling();\n      ctx.scale(1 / scaling.x, 1 / scaling.y);\n    }\n    this._setLineDash(ctx, this.strokeDashArray);\n    this._setStrokeStyles(ctx, this);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  /**\n   * This function try to patch the missing gradientTransform on canvas gradients.\n   * transforming a context to transform the gradient, is going to transform the stroke too.\n   * we want to transform the gradient but not the stroke operation, so we create\n   * a transformed gradient on a pattern and then we use the pattern instead of the gradient.\n   * this method has drawbacks: is slow, is in low resolution, needs a patch for when the size\n   * is limited.\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {Gradient} filler\n   */\n  _applyPatternForTransformedGradient(\n    ctx: CanvasRenderingContext2D,\n    filler: TFiller,\n  ) {\n    const dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\n      retinaScaling = this.getCanvasRetinaScaling(),\n      width = dims.x / this.scaleX / retinaScaling,\n      height = dims.y / this.scaleY / retinaScaling,\n      pCanvas = createCanvasElementFor({\n        // in case width and height are less than 1px, we have to round up.\n        // since the pattern is no-repeat, this is fine\n        width: Math.ceil(width),\n        height: Math.ceil(height),\n      });\n\n    const pCtx = pCanvas.getContext('2d');\n    if (!pCtx) {\n      return;\n    }\n    pCtx.beginPath();\n    pCtx.moveTo(0, 0);\n    pCtx.lineTo(width, 0);\n    pCtx.lineTo(width, height);\n    pCtx.lineTo(0, height);\n    pCtx.closePath();\n    pCtx.translate(width / 2, height / 2);\n    pCtx.scale(\n      dims.zoomX / this.scaleX / retinaScaling,\n      dims.zoomY / this.scaleY / retinaScaling,\n    );\n    this._applyPatternGradientTransform(pCtx, filler);\n    pCtx.fillStyle = filler.toLive(ctx)!;\n    pCtx.fill();\n    ctx.translate(\n      -this.width / 2 - this.strokeWidth / 2,\n      -this.height / 2 - this.strokeWidth / 2,\n    );\n    ctx.scale(\n      (retinaScaling * this.scaleX) / dims.zoomX,\n      (retinaScaling * this.scaleY) / dims.zoomY,\n    );\n    ctx.strokeStyle = pCtx.createPattern(pCanvas, 'no-repeat') ?? '';\n  }\n\n  /**\n   * This function is an helper for svg import. it returns the center of the object in the svg\n   * untransformed coordinates\n   * @private\n   * @return {Point} center point from element coordinates\n   */\n  _findCenterFromElement() {\n    return new Point(this.left + this.width / 2, this.top + this.height / 2);\n  }\n\n  /**\n   * Clones an instance.\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @returns {Promise<FabricObject>}\n   */\n  clone(propertiesToInclude?: string[]): Promise<this> {\n    const objectForm = this.toObject(propertiesToInclude);\n    return (this.constructor as typeof FabricObject).fromObject(\n      objectForm,\n    ) as unknown as Promise<this>;\n  }\n\n  /**\n   * Creates an instance of Image out of an object\n   * makes use of toCanvasElement.\n   * Once this method was based on toDataUrl and loadImage, so it also had a quality\n   * and format option. toCanvasElement is faster and produce no loss of quality.\n   * If you need to get a real Jpeg or Png from an object, using toDataURL is the right way to do it.\n   * toCanvasElement and then toBlob from the obtained canvas is also a good option.\n   * @todo fix the export type, it could not be Image but the type that getClass return for 'image'.\n   * @param {ObjectToCanvasElementOptions} [options] for clone as image, passed to toDataURL\n   * @param {Number} [options.multiplier=1] Multiplier to scale by\n   * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n   * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n   * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n   * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n   * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n   * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n   * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n   * @return {FabricImage} Object cloned as image.\n   */\n  cloneAsImage(options: ObjectToCanvasElementOptions): FabricImage {\n    const canvasEl = this.toCanvasElement(options);\n    // TODO: how to import Image w/o an import cycle?\n    const ImageClass = classRegistry.getClass<typeof FabricImage>('image');\n    return new ImageClass(canvasEl);\n  }\n\n  /**\n   * Converts an object into a HTMLCanvas element\n   * @param {ObjectToCanvasElementOptions} options Options object\n   * @param {Number} [options.multiplier=1] Multiplier to scale by\n   * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n   * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n   * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n   * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n   * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n   * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n   * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n   * @param {Boolean} [options.viewportTransform] Account for canvas viewport transform\n   * @param {(el?: HTMLCanvasElement) => StaticCanvas} [options.canvasProvider] Create the output canvas\n   * @return {HTMLCanvasElement} Returns DOM element <canvas> with the FabricObject\n   */\n  toCanvasElement(options: ObjectToCanvasElementOptions = {}) {\n    const origParams = saveObjectTransform(this),\n      originalGroup = this.group,\n      originalShadow = this.shadow,\n      abs = Math.abs,\n      retinaScaling = options.enableRetinaScaling ? getDevicePixelRatio() : 1,\n      multiplier = (options.multiplier || 1) * retinaScaling,\n      canvasProvider: (el: HTMLCanvasElement) => StaticCanvas =\n        options.canvasProvider ||\n        ((el: HTMLCanvasElement) =>\n          new StaticCanvas(el, {\n            enableRetinaScaling: false,\n            renderOnAddRemove: false,\n            skipOffscreen: false,\n          }));\n    delete this.group;\n    if (options.withoutTransform) {\n      resetObjectTransform(this);\n    }\n    if (options.withoutShadow) {\n      this.shadow = null;\n    }\n    if (options.viewportTransform) {\n      sendObjectToPlane(this, this.getViewportTransform());\n    }\n\n    this.setCoords();\n    const el = createCanvasElement(),\n      boundingRect = this.getBoundingRect(),\n      shadow = this.shadow,\n      shadowOffset = new Point();\n\n    if (shadow) {\n      const shadowBlur = shadow.blur;\n      const scaling = shadow.nonScaling\n        ? new Point(1, 1)\n        : this.getObjectScaling();\n      // consider non scaling shadow.\n      shadowOffset.x =\n        2 * Math.round(abs(shadow.offsetX) + shadowBlur) * abs(scaling.x);\n      shadowOffset.y =\n        2 * Math.round(abs(shadow.offsetY) + shadowBlur) * abs(scaling.y);\n    }\n    const width = boundingRect.width + shadowOffset.x,\n      height = boundingRect.height + shadowOffset.y;\n    // if the current width/height is not an integer\n    // we need to make it so.\n    el.width = Math.ceil(width);\n    el.height = Math.ceil(height);\n    const canvas = canvasProvider(el);\n    if (options.format === 'jpeg') {\n      canvas.backgroundColor = '#fff';\n    }\n    this.setPositionByOrigin(\n      new Point(canvas.width / 2, canvas.height / 2),\n      CENTER,\n      CENTER,\n    );\n    const originalCanvas = this.canvas;\n    // static canvas and canvas have both an array of InteractiveObjects\n    // @ts-expect-error this needs to be fixed somehow, or ignored globally\n    canvas._objects = [this];\n    this.set('canvas', canvas);\n    this.setCoords();\n    const canvasEl = canvas.toCanvasElement(multiplier || 1, options);\n    this.set('canvas', originalCanvas);\n    this.shadow = originalShadow;\n    if (originalGroup) {\n      this.group = originalGroup;\n    }\n    this.set(origParams);\n    this.setCoords();\n    // canvas.dispose will call image.dispose that will nullify the elements\n    // since this canvas is a simple element for the process, we remove references\n    // to objects in this way in order to avoid object trashing.\n    canvas._objects = [];\n    // since render has settled it is safe to destroy canvas\n    canvas.destroy();\n    return canvasEl;\n  }\n\n  /**\n   * Converts an object into a data-url-like string\n   * @param {Object} options Options object\n   * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n   * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n   * @param {Number} [options.multiplier=1] Multiplier to scale by\n   * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n   * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n   * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n   * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n   * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n   * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n   * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n   * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n   */\n  toDataURL(options: toDataURLOptions = {}) {\n    return toDataURL(\n      this.toCanvasElement(options),\n      options.format || 'png',\n      options.quality || 1,\n    );\n  }\n\n  /**\n   * Returns true if any of the specified types is identical to the type of an instance\n   * @param {String} type Type to check against\n   * @return {Boolean}\n   */\n  isType(...types: string[]) {\n    return (\n      types.includes((this.constructor as typeof FabricObject).type) ||\n      types.includes(this.type)\n    );\n  }\n\n  /**\n   * Returns complexity of an instance\n   * @return {Number} complexity of this instance (is 1 unless subclassed)\n   */\n  complexity() {\n    return 1;\n  }\n\n  /**\n   * Returns a JSON representation of an instance\n   * @return {Object} JSON\n   */\n  toJSON() {\n    // delegate, not alias\n    return this.toObject();\n  }\n\n  /**\n   * Sets \"angle\" of an instance with centered rotation\n   * @param {TDegree} angle Angle value (in degrees)\n   */\n  rotate(angle: TDegree) {\n    const { centeredRotation, originX, originY } = this;\n\n    if (centeredRotation) {\n      const { x, y } = this.getRelativeCenterPoint();\n      this.originX = CENTER;\n      this.originY = CENTER;\n      this.left = x;\n      this.top = y;\n    }\n\n    this.set('angle', angle);\n\n    if (centeredRotation) {\n      const { x, y } = this.translateToOriginPoint(\n        this.getRelativeCenterPoint(),\n        originX,\n        originY,\n      );\n      this.left = x;\n      this.top = y;\n      this.originX = originX;\n      this.originY = originY;\n    }\n  }\n\n  /**\n   * This callback function is called by the parent group of an object every\n   * time a non-delegated property changes on the group. It is passed the key\n   * and value as parameters. Not adding in this function's signature to avoid\n   * Travis build error about unused variables.\n   */\n  setOnGroup() {\n    // implemented by sub-classes, as needed.\n  }\n\n  /**\n   * Sets canvas globalCompositeOperation for specific object\n   * custom composition operation for the particular object can be specified using globalCompositeOperation property\n   * @param {CanvasRenderingContext2D} ctx Rendering canvas context\n   */\n  _setupCompositeOperation(ctx: CanvasRenderingContext2D) {\n    if (this.globalCompositeOperation) {\n      ctx.globalCompositeOperation = this.globalCompositeOperation;\n    }\n  }\n\n  /**\n   * cancel instance's running animations\n   * override if necessary to dispose artifacts such as `clipPath`\n   */\n  dispose() {\n    runningAnimations.cancelByTarget(this);\n    this.off();\n    this._set('canvas', undefined);\n    // clear caches\n    this._cacheCanvas && getEnv().dispose(this._cacheCanvas);\n    this._cacheCanvas = undefined;\n    this._cacheContext = null;\n  }\n\n  // #region Animation methods\n  /**\n   * List of properties to consider for animating colors.\n   * @type String[]\n   */\n  static colorProperties: string[] = [FILL, STROKE, 'backgroundColor'];\n\n  /**\n   * Animates object's properties\n   * @param {Record<string, number | number[] | TColorArg>} animatable map of keys and end values\n   * @param {Partial<AnimationOptions<T>>} options\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\n   * @return {Record<string, TAnimation<T>>} map of animation contexts\n   *\n   * As object — multiple properties\n   *\n   * object.animate({ left: ..., top: ... });\n   * object.animate({ left: ..., top: ... }, { duration: ... });\n   */\n  animate<T extends number | number[] | TColorArg>(\n    animatable: Record<string, T>,\n    options?: Partial<AnimationOptions<T>>,\n  ): Record<string, TAnimation<T>> {\n    return Object.entries(animatable).reduce(\n      (acc, [key, endValue]) => {\n        acc[key] = this._animate(key, endValue, options);\n        return acc;\n      },\n      {} as Record<string, TAnimation<T>>,\n    );\n  }\n\n  /**\n   * @private\n   * @param {String} key Property to animate\n   * @param {String} to Value to animate to\n   * @param {Object} [options] Options object\n   */\n  _animate<T extends number | number[] | TColorArg>(\n    key: string,\n    endValue: T,\n    options: Partial<AnimationOptions<T>> = {},\n  ): TAnimation<T> {\n    const path = key.split('.');\n    const propIsColor = (\n      this.constructor as typeof FabricObject\n    ).colorProperties.includes(path[path.length - 1]);\n    const { abort, startValue, onChange, onComplete } = options;\n    const animationOptions = {\n      ...options,\n      target: this,\n      // path.reduce... is the current value in case start value isn't provided\n      startValue:\n        startValue ?? path.reduce((deep: any, key) => deep[key], this),\n      endValue,\n      abort: abort?.bind(this),\n      onChange: (\n        value: number | number[] | string,\n        valueProgress: number,\n        durationProgress: number,\n      ) => {\n        path.reduce((deep: Record<string, any>, key, index) => {\n          if (index === path.length - 1) {\n            deep[key] = value;\n          }\n          return deep[key];\n        }, this);\n        onChange &&\n          // @ts-expect-error generic callback arg0 is wrong\n          onChange(value, valueProgress, durationProgress);\n      },\n      onComplete: (\n        value: number | number[] | string,\n        valueProgress: number,\n        durationProgress: number,\n      ) => {\n        this.setCoords();\n        onComplete &&\n          // @ts-expect-error generic callback arg0 is wrong\n          onComplete(value, valueProgress, durationProgress);\n      },\n    } as AnimationOptions<T>;\n\n    return (\n      propIsColor\n        ? animateColor(animationOptions as ColorAnimationOptions)\n        : animate(\n            animationOptions as ValueAnimationOptions | ArrayAnimationOptions,\n          )\n    ) as TAnimation<T>;\n  }\n\n  // #region Object stacking methods\n\n  /**\n   * A reference to the parent of the object\n   * Used to keep the original parent ref when the object has been added to an ActiveSelection, hence loosing the `group` ref\n   */\n  declare parent?: Group;\n\n  /**\n   * Checks if object is descendant of target\n   * Should be used instead of {@link Group.contains} or {@link StaticCanvas.contains} for performance reasons\n   * @param {TAncestor} target\n   * @returns {boolean}\n   */\n  isDescendantOf(target: TAncestor): boolean {\n    const { parent, group } = this;\n    return (\n      parent === target ||\n      group === target ||\n      // walk up\n      (!!parent && parent.isDescendantOf(target)) ||\n      (!!group && group !== parent && group.isDescendantOf(target))\n    );\n  }\n\n  /**\n   * @returns {Ancestors} ancestors (excluding `ActiveSelection`) from bottom to top\n   */\n  getAncestors(): Ancestors {\n    const ancestors: TAncestor[] = [];\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let parent: TAncestor | undefined = this;\n    do {\n      parent = parent.parent;\n      parent && ancestors.push(parent);\n    } while (parent);\n    return ancestors as Ancestors;\n  }\n\n  /**\n   * Compare ancestors\n   *\n   * @param {StackedObject} other\n   * @returns {AncestryComparison} an object that represent the ancestry situation.\n   */\n  findCommonAncestors<T extends this>(other: T): AncestryComparison {\n    if (this === other) {\n      return {\n        fork: [],\n        otherFork: [],\n        common: [this, ...this.getAncestors()],\n      } as AncestryComparison;\n    }\n    const ancestors = this.getAncestors();\n    const otherAncestors = other.getAncestors();\n    //  if `this` has no ancestors and `this` is top ancestor of `other` we must handle the following case\n    if (\n      ancestors.length === 0 &&\n      otherAncestors.length > 0 &&\n      this === otherAncestors[otherAncestors.length - 1]\n    ) {\n      return {\n        fork: [],\n        otherFork: [\n          other,\n          ...otherAncestors.slice(0, otherAncestors.length - 1),\n        ],\n        common: [this],\n      } as AncestryComparison;\n    }\n    //  compare ancestors\n    for (let i = 0, ancestor; i < ancestors.length; i++) {\n      ancestor = ancestors[i];\n      if (ancestor === other) {\n        return {\n          fork: [this, ...ancestors.slice(0, i)],\n          otherFork: [],\n          common: ancestors.slice(i),\n        } as AncestryComparison;\n      }\n      for (let j = 0; j < otherAncestors.length; j++) {\n        if (this === otherAncestors[j]) {\n          return {\n            fork: [],\n            otherFork: [other, ...otherAncestors.slice(0, j)],\n            common: [this, ...ancestors],\n          } as AncestryComparison;\n        }\n        if (ancestor === otherAncestors[j]) {\n          return {\n            fork: [this, ...ancestors.slice(0, i)],\n            otherFork: [other, ...otherAncestors.slice(0, j)],\n            common: ancestors.slice(i),\n          } as AncestryComparison;\n        }\n      }\n    }\n    // nothing shared\n    return {\n      fork: [this, ...ancestors],\n      otherFork: [other, ...otherAncestors],\n      common: [],\n    } as AncestryComparison;\n  }\n\n  /**\n   *\n   * @param {StackedObject} other\n   * @returns {boolean}\n   */\n  hasCommonAncestors<T extends this>(other: T): boolean {\n    const commonAncestors = this.findCommonAncestors(other);\n    return commonAncestors && !!commonAncestors.common.length;\n  }\n\n  /**\n   *\n   * @param {FabricObject} other object to compare against\n   * @returns {boolean | undefined} if objects do not share a common ancestor or they are strictly equal it is impossible to determine which is in front of the other; in such cases the function returns `undefined`\n   */\n  isInFrontOf<T extends this>(other: T): boolean | undefined {\n    if (this === other) {\n      return undefined;\n    }\n    const ancestorData = this.findCommonAncestors(other);\n\n    if (ancestorData.fork.includes(other as any)) {\n      return true;\n    }\n    if (ancestorData.otherFork.includes(this as any)) {\n      return false;\n    }\n    // if there isn't a common ancestor, we take the canvas.\n    // if there is no canvas, there is nothing to compare\n    const firstCommonAncestor = ancestorData.common[0] || this.canvas;\n    if (!firstCommonAncestor) {\n      return undefined;\n    }\n    const headOfFork = ancestorData.fork.pop(),\n      headOfOtherFork = ancestorData.otherFork.pop(),\n      thisIndex = (firstCommonAncestor as TCollection)._objects.indexOf(\n        headOfFork as any,\n      ),\n      otherIndex = (firstCommonAncestor as TCollection)._objects.indexOf(\n        headOfOtherFork as any,\n      );\n    return thisIndex > -1 && thisIndex > otherIndex;\n  }\n\n  // #region Serialization\n  /**\n   * Define a list of custom properties that will be serialized when\n   * instance.toObject() gets called\n   */\n  static customProperties: string[] = [];\n\n  /**\n   * Returns an object representation of an instance\n   * @param {string[]} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} Object representation of an instance\n   */\n  toObject(propertiesToInclude: any[] = []): any {\n    const propertiesToSerialize = propertiesToInclude.concat(\n      FabricObject.customProperties,\n      (this.constructor as typeof FabricObject).customProperties || [],\n    );\n    let clipPathData: Partial<SerializedObjectProps> | undefined;\n    const NUM_FRACTION_DIGITS = config.NUM_FRACTION_DIGITS;\n    const {\n      clipPath,\n      fill,\n      stroke,\n      shadow,\n      strokeDashArray,\n      left,\n      top,\n      originX,\n      originY,\n      width,\n      height,\n      strokeWidth,\n      strokeLineCap,\n      strokeDashOffset,\n      strokeLineJoin,\n      strokeUniform,\n      strokeMiterLimit,\n      scaleX,\n      scaleY,\n      angle,\n      flipX,\n      flipY,\n      opacity,\n      visible,\n      backgroundColor,\n      fillRule,\n      paintFirst,\n      globalCompositeOperation,\n      skewX,\n      skewY,\n    } = this;\n    if (clipPath && !clipPath.excludeFromExport) {\n      clipPathData = clipPath.toObject(\n        propertiesToSerialize.concat('inverted', 'absolutePositioned'),\n      );\n    }\n    const toFixedBound = (val: number) => toFixed(val, NUM_FRACTION_DIGITS);\n    const object = {\n      ...pick(this, propertiesToSerialize as (keyof this)[]),\n      type: (this.constructor as typeof FabricObject).type,\n      version: VERSION,\n      originX,\n      originY,\n      left: toFixedBound(left),\n      top: toFixedBound(top),\n      width: toFixedBound(width),\n      height: toFixedBound(height),\n      fill: isSerializableFiller(fill) ? fill.toObject() : fill,\n      stroke: isSerializableFiller(stroke) ? stroke.toObject() : stroke,\n      strokeWidth: toFixedBound(strokeWidth),\n      strokeDashArray: strokeDashArray\n        ? strokeDashArray.concat()\n        : strokeDashArray,\n      strokeLineCap,\n      strokeDashOffset,\n      strokeLineJoin,\n      strokeUniform,\n      strokeMiterLimit: toFixedBound(strokeMiterLimit),\n      scaleX: toFixedBound(scaleX),\n      scaleY: toFixedBound(scaleY),\n      angle: toFixedBound(angle),\n      flipX,\n      flipY,\n      opacity: toFixedBound(opacity),\n      shadow: shadow ? shadow.toObject() : shadow,\n      visible,\n      backgroundColor,\n      fillRule,\n      paintFirst,\n      globalCompositeOperation,\n      skewX: toFixedBound(skewX),\n      skewY: toFixedBound(skewY),\n      ...(clipPathData ? { clipPath: clipPathData } : null),\n    };\n\n    return !this.includeDefaultValues\n      ? this._removeDefaultValues(object)\n      : object;\n  }\n\n  /**\n   * Returns (dataless) object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} Object representation of an instance\n   */\n  toDatalessObject(propertiesToInclude?: any[]): any {\n    // will be overwritten by subclasses\n    return this.toObject(propertiesToInclude);\n  }\n\n  /**\n   * @private\n   * @param {Object} object\n   */\n  _removeDefaultValues<T extends object>(object: T): Partial<T> {\n    // getDefaults() ( get from static ownDefaults ) should win over prototype since anyway they get assigned to instance\n    // ownDefault vs prototype is swappable only if you change all the fabric objects consistently.\n    const defaults = (this.constructor as typeof FabricObject).getDefaults();\n    const hasStaticDefaultValues = Object.keys(defaults).length > 0;\n    const baseValues = hasStaticDefaultValues\n      ? defaults\n      : Object.getPrototypeOf(this);\n\n    return pickBy(object, (value, key) => {\n      if (key === LEFT || key === TOP || key === 'type') {\n        return true;\n      }\n      const baseValue = baseValues[key];\n      return (\n        value !== baseValue &&\n        // basically a check for [] === []\n        !(\n          Array.isArray(value) &&\n          Array.isArray(baseValue) &&\n          value.length === 0 &&\n          baseValue.length === 0\n        )\n      );\n    });\n  }\n\n  /**\n   * Returns a string representation of an instance\n   * @return {String}\n   */\n  toString() {\n    return `#<${(this.constructor as typeof FabricObject).type}>`;\n  }\n\n  /**\n   *\n   * @param {Function} klass\n   * @param {object} object\n   * @param {object} [options]\n   * @param {string} [options.extraParam] property to pass as first argument to the constructor\n   * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @returns {Promise<FabricObject>}\n   */\n  static _fromObject<S extends FabricObject>(\n    { type, ...serializedObjectOptions }: Record<string, unknown>,\n    { extraParam, ...options }: Abortable & { extraParam?: string } = {},\n  ): Promise<S> {\n    return enlivenObjectEnlivables<any>(serializedObjectOptions, options).then(\n      (enlivedObjectOptions) => {\n        // from the resulting enlived options, extract options.extraParam to arg0\n        // to avoid accidental overrides later\n        if (extraParam) {\n          delete enlivedObjectOptions[extraParam];\n          return new this(\n            serializedObjectOptions[extraParam],\n            // @ts-expect-error different signature\n            enlivedObjectOptions,\n          );\n        } else {\n          return new this(enlivedObjectOptions);\n        }\n      },\n    ) as Promise<S>;\n  }\n\n  /**\n   *\n   * @param {object} object\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @returns {Promise<FabricObject>}\n   */\n  static fromObject<T extends TOptions<SerializedObjectProps>>(\n    object: T,\n    options?: Abortable,\n  ) {\n    return this._fromObject(object, options);\n  }\n}\n\nclassRegistry.setClass(FabricObject);\nclassRegistry.setClass(FabricObject, 'object');\n","import type {\n  TModificationEvents,\n  Transform,\n  TransformActionHandler,\n} from '../EventTypeDefs';\nimport { fireEvent } from './fireEvent';\nimport { commonEventInfo } from './util';\n\n/**\n * Wrap an action handler with firing an event if the action is performed\n * @param {TModificationEvents} eventName the event we want to fire\n * @param {TransformActionHandler<T>} actionHandler the function to wrap\n * @param {object} extraEventInfo extra information to pas to the event handler\n * @return {TransformActionHandler<T>} a function with an action handler signature\n */\nexport const wrapWithFireEvent = <\n  T extends Transform,\n  P extends object = Record<string, never>,\n>(\n  eventName: TModificationEvents,\n  actionHandler: TransformActionHandler<T>,\n  extraEventInfo?: P,\n) => {\n  return ((eventData, transform, x, y) => {\n    const actionPerformed = actionHandler(eventData, transform, x, y);\n    if (actionPerformed) {\n      fireEvent(eventName, {\n        ...commonEventInfo(eventData, transform, x, y),\n        ...extraEventInfo,\n      });\n    }\n    return actionPerformed;\n  }) as TransformActionHandler<T>;\n};\n","import type { Transform, TransformActionHandler } from '../EventTypeDefs';\n\n/**\n * Wrap an action handler with saving/restoring object position on the transform.\n * this is the code that permits to objects to keep their position while transforming.\n * @param {Function} actionHandler the function to wrap\n * @return {Function} a function with an action handler signature\n */\nexport function wrapWithFixedAnchor<T extends Transform>(\n  actionHandler: TransformActionHandler<T>,\n) {\n  return ((eventData, transform, x, y) => {\n    const { target, originX, originY } = transform,\n      centerPoint = target.getRelativeCenterPoint(),\n      constraint = target.translateToOriginPoint(centerPoint, originX, originY),\n      actionPerformed = actionHandler(eventData, transform, x, y);\n    // flipping requires to change the transform origin, so we read from the mutated transform\n    // instead of leveraging the one destructured before\n    target.setPositionByOrigin(\n      constraint,\n      transform.originX,\n      transform.originY,\n    );\n    return actionPerformed;\n  }) as TransformActionHandler<T>;\n}\n","import type { TransformActionHandler } from '../EventTypeDefs';\nimport { CENTER, LEFT, RESIZING, RIGHT } from '../constants';\nimport { resolveOrigin } from '../util/misc/resolveOrigin';\nimport { getLocalPoint, isTransformCentered } from './util';\nimport { wrapWithFireEvent } from './wrapWithFireEvent';\nimport { wrapWithFixedAnchor } from './wrapWithFixedAnchor';\n\n/**\n * Action handler to change object's width\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nexport const changeObjectWidth: TransformActionHandler = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  const localPoint = getLocalPoint(\n    transform,\n    transform.originX,\n    transform.originY,\n    x,\n    y,\n  );\n  //  make sure the control changes width ONLY from it's side of target\n  if (\n    resolveOrigin(transform.originX) === resolveOrigin(CENTER) ||\n    (resolveOrigin(transform.originX) === resolveOrigin(RIGHT) &&\n      localPoint.x < 0) ||\n    (resolveOrigin(transform.originX) === resolveOrigin(LEFT) &&\n      localPoint.x > 0)\n  ) {\n    const { target } = transform,\n      strokePadding =\n        target.strokeWidth / (target.strokeUniform ? target.scaleX : 1),\n      multiplier = isTransformCentered(transform) ? 2 : 1,\n      oldWidth = target.width,\n      newWidth =\n        Math.abs((localPoint.x * multiplier) / target.scaleX) - strokePadding;\n    target.set('width', Math.max(newWidth, 1));\n    //  check against actual target width in case `newWidth` was rejected\n    return oldWidth !== target.width;\n  }\n  return false;\n};\n\nexport const changeWidth = wrapWithFireEvent(\n  RESIZING,\n  wrapWithFixedAnchor(changeObjectWidth),\n);\n","import { FILL, STROKE, twoMathPi } from '../constants';\nimport type { InteractiveFabricObject } from '../shapes/Object/InteractiveObject';\nimport { degreesToRadians } from '../util/misc/radiansDegreesConversion';\nimport type { Control } from './Control';\n\nexport type ControlRenderingStyleOverride = Partial<\n  Pick<\n    InteractiveFabricObject,\n    | 'cornerStyle'\n    | 'cornerSize'\n    | 'cornerColor'\n    | 'cornerStrokeColor'\n    | 'cornerDashArray'\n    | 'transparentCorners'\n  >\n>;\n\nexport type ControlRenderer<\n  O extends InteractiveFabricObject = InteractiveFabricObject,\n> = (\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  top: number,\n  styleOverride: ControlRenderingStyleOverride,\n  fabricObject: O,\n) => void;\n\n/**\n * Render a round control, as per fabric features.\n * This function is written to respect object properties like transparentCorners, cornerSize\n * cornerColor, cornerStrokeColor\n * plus the addition of offsetY and offsetX.\n * @param {CanvasRenderingContext2D} ctx context to render on\n * @param {Number} left x coordinate where the control center should be\n * @param {Number} top y coordinate where the control center should be\n * @param {Object} styleOverride override for FabricObject controls style\n * @param {FabricObject} fabricObject the fabric object for which we are rendering controls\n */\nexport function renderCircleControl(\n  this: Control,\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  top: number,\n  styleOverride: ControlRenderingStyleOverride,\n  fabricObject: InteractiveFabricObject,\n) {\n  styleOverride = styleOverride || {};\n  const xSize =\n      this.sizeX || styleOverride.cornerSize || fabricObject.cornerSize,\n    ySize = this.sizeY || styleOverride.cornerSize || fabricObject.cornerSize,\n    transparentCorners =\n      typeof styleOverride.transparentCorners !== 'undefined'\n        ? styleOverride.transparentCorners\n        : fabricObject.transparentCorners,\n    methodName = transparentCorners ? STROKE : FILL,\n    stroke =\n      !transparentCorners &&\n      (styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor);\n  let myLeft = left,\n    myTop = top,\n    size;\n  ctx.save();\n  ctx.fillStyle = styleOverride.cornerColor || fabricObject.cornerColor || '';\n  ctx.strokeStyle =\n    styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor || '';\n  // TODO: use proper ellipse code.\n  if (xSize > ySize) {\n    size = xSize;\n    ctx.scale(1.0, ySize / xSize);\n    myTop = (top * xSize) / ySize;\n  } else if (ySize > xSize) {\n    size = ySize;\n    ctx.scale(xSize / ySize, 1.0);\n    myLeft = (left * ySize) / xSize;\n  } else {\n    size = xSize;\n  }\n  // this is still wrong\n  ctx.lineWidth = 1;\n  ctx.beginPath();\n  ctx.arc(myLeft, myTop, size / 2, 0, twoMathPi, false);\n  ctx[methodName]();\n  if (stroke) {\n    ctx.stroke();\n  }\n  ctx.restore();\n}\n\n/**\n * Render a square control, as per fabric features.\n * This function is written to respect object properties like transparentCorners, cornerSize\n * cornerColor, cornerStrokeColor\n * plus the addition of offsetY and offsetX.\n * @param {CanvasRenderingContext2D} ctx context to render on\n * @param {Number} left x coordinate where the control center should be\n * @param {Number} top y coordinate where the control center should be\n * @param {Object} styleOverride override for FabricObject controls style\n * @param {FabricObject} fabricObject the fabric object for which we are rendering controls\n */\nexport function renderSquareControl(\n  this: Control,\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  top: number,\n  styleOverride: ControlRenderingStyleOverride,\n  fabricObject: InteractiveFabricObject,\n) {\n  styleOverride = styleOverride || {};\n  const xSize =\n      this.sizeX || styleOverride.cornerSize || fabricObject.cornerSize,\n    ySize = this.sizeY || styleOverride.cornerSize || fabricObject.cornerSize,\n    transparentCorners =\n      typeof styleOverride.transparentCorners !== 'undefined'\n        ? styleOverride.transparentCorners\n        : fabricObject.transparentCorners,\n    methodName = transparentCorners ? STROKE : FILL,\n    stroke =\n      !transparentCorners &&\n      (styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor),\n    xSizeBy2 = xSize / 2,\n    ySizeBy2 = ySize / 2;\n  ctx.save();\n  ctx.fillStyle = styleOverride.cornerColor || fabricObject.cornerColor || '';\n  ctx.strokeStyle =\n    styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor || '';\n  // this is still wrong\n  ctx.lineWidth = 1;\n  ctx.translate(left, top);\n  //  angle is relative to canvas plane\n  const angle = fabricObject.getTotalAngle();\n  ctx.rotate(degreesToRadians(angle));\n  // this does not work, and fixed with ( && ) does not make sense.\n  // to have real transparent corners we need the controls on upperCanvas\n  // transparentCorners || ctx.clearRect(-xSizeBy2, -ySizeBy2, xSize, ySize);\n  ctx[`${methodName}Rect`](-xSizeBy2, -ySizeBy2, xSize, ySize);\n  if (stroke) {\n    ctx.strokeRect(-xSizeBy2, -ySizeBy2, xSize, ySize);\n  }\n  ctx.restore();\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport type {\n  ControlActionHandler,\n  TPointerEvent,\n  TransformActionHandler,\n} from '../EventTypeDefs';\nimport { Intersection } from '../Intersection';\nimport { Point } from '../Point';\nimport { SCALE } from '../constants';\nimport type { InteractiveFabricObject } from '../shapes/Object/InteractiveObject';\nimport type { TCornerPoint, TDegree, TMat2D } from '../typedefs';\nimport {\n  createRotateMatrix,\n  createScaleMatrix,\n  createTranslateMatrix,\n  multiplyTransformMatrixArray,\n} from '../util/misc/matrix';\nimport type { ControlRenderingStyleOverride } from './controlRendering';\nimport { renderCircleControl, renderSquareControl } from './controlRendering';\n\nexport class Control {\n  /**\n   * keep track of control visibility.\n   * mainly for backward compatibility.\n   * if you do not want to see a control, you can remove it\n   * from the control set.\n   * @type {Boolean}\n   * @default true\n   */\n  visible = true;\n\n  /**\n   * Name of the action that the control will likely execute.\n   * This is optional. FabricJS uses to identify what the user is doing for some\n   * extra optimizations. If you are writing a custom control and you want to know\n   * somewhere else in the code what is going on, you can use this string here.\n   * you can also provide a custom getActionName if your control run multiple actions\n   * depending on some external state.\n   * default to scale since is the most common, used on 4 corners by default\n   * @type {String}\n   * @default 'scale'\n   */\n  actionName = SCALE;\n\n  /**\n   * Drawing angle of the control.\n   * NOT used for now, but name marked as needed for internal logic\n   * example: to reuse the same drawing function for different rotated controls\n   * @type {Number}\n   * @default 0\n   */\n  angle = 0;\n\n  /**\n   * Relative position of the control. X\n   * 0,0 is the center of the Object, while -0.5 (left) or 0.5 (right) are the extremities\n   * of the bounding box.\n   * @type {Number}\n   * @default 0\n   */\n  x = 0;\n\n  /**\n   * Relative position of the control. Y\n   * 0,0 is the center of the Object, while -0.5 (top) or 0.5 (bottom) are the extremities\n   * of the bounding box.\n   * @type {Number}\n   * @default 0\n   */\n  y = 0;\n\n  /**\n   * Horizontal offset of the control from the defined position. In pixels\n   * Positive offset moves the control to the right, negative to the left.\n   * It used when you want to have position of control that does not scale with\n   * the bounding box. Example: rotation control is placed at x:0, y: 0.5 on\n   * the boundind box, with an offset of 30 pixels vertically. Those 30 pixels will\n   * stay 30 pixels no matter how the object is big. Another example is having 2\n   * controls in the corner, that stay in the same position when the object scale.\n   * of the bounding box.\n   * @type {Number}\n   * @default 0\n   */\n  offsetX = 0;\n\n  /**\n   * Vertical offset of the control from the defined position. In pixels\n   * Positive offset moves the control to the bottom, negative to the top.\n   * @type {Number}\n   * @default 0\n   */\n  offsetY = 0;\n\n  /**\n   * Sets the length of the control. If null, defaults to object's cornerSize.\n   * Expects both sizeX and sizeY to be set when set.\n   * @type {?Number}\n   * @default null\n   */\n  sizeX = 0;\n\n  /**\n   * Sets the height of the control. If null, defaults to object's cornerSize.\n   * Expects both sizeX and sizeY to be set when set.\n   * @type {?Number}\n   * @default null\n   */\n  sizeY = 0;\n\n  /**\n   * Sets the length of the touch area of the control. If null, defaults to object's touchCornerSize.\n   * Expects both touchSizeX and touchSizeY to be set when set.\n   * @type {?Number}\n   * @default null\n   */\n  touchSizeX = 0;\n\n  /**\n   * Sets the height of the touch area of the control. If null, defaults to object's touchCornerSize.\n   * Expects both touchSizeX and touchSizeY to be set when set.\n   * @type {?Number}\n   * @default null\n   */\n  touchSizeY = 0;\n\n  /**\n   * Css cursor style to display when the control is hovered.\n   * if the method `cursorStyleHandler` is provided, this property is ignored.\n   * @type {String}\n   * @default 'crosshair'\n   */\n  cursorStyle = 'crosshair';\n\n  /**\n   * If controls has an offsetY or offsetX, draw a line that connects\n   * the control to the bounding box\n   * @type {Boolean}\n   * @default false\n   */\n  withConnection = false;\n\n  /** fills Width of object */\n  fillX = false;\n  /** fills Height of object */\n  fillY = false;\n\n  constructor(options?: Partial<Control>) {\n    Object.assign(this, options);\n  }\n\n  /**\n   * The control actionHandler, provide one to handle action ( control being moved )\n   * @param {Event} eventData the native mouse event\n   * @param {Transform} transformData properties of the current transform\n   * @param {Number} x x position of the cursor\n   * @param {Number} y y position of the cursor\n   * @return {Boolean} true if the action/event modified the object\n   */\n  declare actionHandler: TransformActionHandler;\n\n  /**\n   * The control handler for mouse down, provide one to handle mouse down on control\n   * @param {Event} eventData the native mouse event\n   * @param {Transform} transformData properties of the current transform\n   * @param {Number} x x position of the cursor\n   * @param {Number} y y position of the cursor\n   * @return {Boolean} true if the action/event modified the object\n   */\n  declare mouseDownHandler?: ControlActionHandler;\n\n  /**\n   * The control mouseUpHandler, provide one to handle an effect on mouse up.\n   * @param {Event} eventData the native mouse event\n   * @param {Transform} transformData properties of the current transform\n   * @param {Number} x x position of the cursor\n   * @param {Number} y y position of the cursor\n   * @return {Boolean} true if the action/event modified the object\n   */\n  declare mouseUpHandler?: ControlActionHandler;\n\n  shouldActivate(\n    controlKey: string,\n    fabricObject: InteractiveFabricObject,\n    pointer: Point,\n    { tl, tr, br, bl }: TCornerPoint,\n  ) {\n    // TODO: locking logic can be handled here instead of in the control handler logic\n    return (\n      fabricObject.canvas?.getActiveObject() === fabricObject &&\n      fabricObject.isControlVisible(controlKey) &&\n      Intersection.isPointInPolygon(pointer, [tl, tr, br, bl])\n    );\n  }\n\n  /**\n   * Returns control actionHandler\n   * @param {Event} eventData the native mouse event\n   * @param {FabricObject} fabricObject on which the control is displayed\n   * @param {Control} control control for which the action handler is being asked\n   * @return {Function} the action handler\n   */\n  getActionHandler(\n    eventData: TPointerEvent,\n    fabricObject: InteractiveFabricObject,\n    control: Control,\n  ): TransformActionHandler | undefined {\n    return this.actionHandler;\n  }\n\n  /**\n   * Returns control mouseDown handler\n   * @param {Event} eventData the native mouse event\n   * @param {FabricObject} fabricObject on which the control is displayed\n   * @param {Control} control control for which the action handler is being asked\n   * @return {Function} the action handler\n   */\n  getMouseDownHandler(\n    eventData: TPointerEvent,\n    fabricObject: InteractiveFabricObject,\n    control: Control,\n  ): ControlActionHandler | undefined {\n    return this.mouseDownHandler;\n  }\n\n  /**\n   * Returns control mouseUp handler.\n   * During actions the fabricObject or the control can be of different obj\n   * @param {Event} eventData the native mouse event\n   * @param {FabricObject} fabricObject on which the control is displayed\n   * @param {Control} control control for which the action handler is being asked\n   * @return {Function} the action handler\n   */\n  getMouseUpHandler(\n    eventData: TPointerEvent,\n    fabricObject: InteractiveFabricObject,\n    control: Control,\n  ): ControlActionHandler | undefined {\n    return this.mouseUpHandler;\n  }\n\n  /**\n   * Returns control cursorStyle for css using cursorStyle. If you need a more elaborate\n   * function you can pass one in the constructor\n   * the cursorStyle property\n   * @param {Event} eventData the native mouse event\n   * @param {Control} control the current control ( likely this)\n   * @param {FabricObject} object on which the control is displayed\n   * @return {String}\n   */\n  cursorStyleHandler(\n    eventData: TPointerEvent,\n    control: Control,\n    fabricObject: InteractiveFabricObject,\n  ) {\n    return control.cursorStyle;\n  }\n\n  /**\n   * Returns the action name. The basic implementation just return the actionName property.\n   * @param {Event} eventData the native mouse event\n   * @param {Control} control the current control ( likely this)\n   * @param {FabricObject} object on which the control is displayed\n   * @return {String}\n   */\n  getActionName(\n    eventData: TPointerEvent,\n    control: Control,\n    fabricObject: InteractiveFabricObject,\n  ) {\n    return control.actionName;\n  }\n\n  /**\n   * Returns controls visibility\n   * @param {FabricObject} object on which the control is displayed\n   * @param {String} controlKey key where the control is memorized on the\n   * @return {Boolean}\n   */\n  getVisibility(fabricObject: InteractiveFabricObject, controlKey: string) {\n    return fabricObject._controlsVisibility?.[controlKey] ?? this.visible;\n  }\n\n  /**\n   * Sets controls visibility\n   * @param {Boolean} visibility for the object\n   * @return {Void}\n   */\n  setVisibility(\n    visibility: boolean,\n    name: string,\n    fabricObject: InteractiveFabricObject,\n  ) {\n    this.visible = visibility;\n  }\n\n  positionHandler(\n    dim: Point,\n    finalMatrix: TMat2D,\n    fabricObject: InteractiveFabricObject,\n    currentControl: Control,\n  ) {\n    return new Point(\n      this.x * dim.x + this.offsetX,\n      this.y * dim.y + this.offsetY,\n    ).transform(finalMatrix);\n  }\n\n  /**\n   * Returns the coords for this control based on object values.\n   * @param {Number} objectAngle angle from the fabric object holding the control\n   * @param {Number} objectCornerSize cornerSize from the fabric object holding the control (or touchCornerSize if\n   *   isTouch is true)\n   * @param {Number} centerX x coordinate where the control center should be\n   * @param {Number} centerY y coordinate where the control center should be\n   * @param {boolean} isTouch true if touch corner, false if normal corner\n   */\n  calcCornerCoords(\n    angle: TDegree,\n    objectCornerSize: number,\n    centerX: number,\n    centerY: number,\n    isTouch: boolean,\n    fabricObject: InteractiveFabricObject,\n  ) {\n    const t = multiplyTransformMatrixArray([\n      createTranslateMatrix(centerX, centerY),\n      createRotateMatrix({ angle }),\n      createScaleMatrix(\n        this.fillX ? fabricObject.getScaledWidth() : (isTouch ? this.touchSizeX : this.sizeX) || objectCornerSize,\n        this.fillY ? fabricObject.getScaledHeight() : (isTouch ? this.touchSizeY : this.sizeY) || objectCornerSize,\n      ),\n    ]);\n\n    return {\n      tl: new Point(-0.5, -0.5).transform(t),\n      tr: new Point(0.5, -0.5).transform(t),\n      br: new Point(0.5, 0.5).transform(t),\n      bl: new Point(-0.5, 0.5).transform(t),\n    };\n  }\n\n  /**\n   * Render function for the control.\n   * When this function runs the context is unscaled. unrotate. Just retina scaled.\n   * all the functions will have to translate to the point left,top before starting Drawing\n   * if they want to draw a control where the position is detected.\n   * left and top are the result of the positionHandler function\n   * @param {RenderingContext2D} ctx the context where the control will be drawn\n   * @param {Number} left position of the canvas where we are about to render the control.\n   * @param {Number} top position of the canvas where we are about to render the control.\n   * @param {Object} styleOverride\n   * @param {FabricObject} fabricObject the object where the control is about to be rendered\n   */\n  render(\n    ctx: CanvasRenderingContext2D,\n    left: number,\n    top: number,\n    styleOverride: ControlRenderingStyleOverride | undefined,\n    fabricObject: InteractiveFabricObject,\n  ) {\n    styleOverride = styleOverride || {};\n    switch (styleOverride.cornerStyle || fabricObject.cornerStyle) {\n      case 'circle':\n        renderCircleControl.call(\n          this,\n          ctx,\n          left,\n          top,\n          styleOverride,\n          fabricObject,\n        );\n        break;\n      default:\n        renderSquareControl.call(\n          this,\n          ctx,\n          left,\n          top,\n          styleOverride,\n          fabricObject,\n        );\n    }\n  }\n}\n","import type {\n  ControlCursorCallback,\n  TransformActionHandler,\n} from '../EventTypeDefs';\nimport { ROTATING } from '../constants';\nimport { radiansToDegrees } from '../util/misc/radiansDegreesConversion';\nimport { isLocked, NOT_ALLOWED_CURSOR } from './util';\nimport { wrapWithFireEvent } from './wrapWithFireEvent';\nimport { wrapWithFixedAnchor } from './wrapWithFixedAnchor';\n\n/**\n * Find the correct style for the control that is used for rotation.\n * this function is very simple and it just take care of not-allowed or standard cursor\n * @param {Event} eventData the javascript event that is causing the scale\n * @param {Control} control the control that is interested in the action\n * @param {FabricObject} fabricObject the fabric object that is interested in the action\n * @return {String} a valid css string for the cursor\n */\nexport const rotationStyleHandler: ControlCursorCallback = (\n  eventData,\n  control,\n  fabricObject,\n) => {\n  if (fabricObject.lockRotation) {\n    return NOT_ALLOWED_CURSOR;\n  }\n  return control.cursorStyle;\n};\n\n/**\n * Action handler for rotation and snapping, without anchor point.\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n * @private\n */\nconst rotateObjectWithSnapping: TransformActionHandler = (\n  eventData,\n  { target, ex, ey, theta, originX, originY },\n  x,\n  y,\n) => {\n  const pivotPoint = target.translateToOriginPoint(\n    target.getRelativeCenterPoint(),\n    originX,\n    originY,\n  );\n\n  if (isLocked(target, 'lockRotation')) {\n    return false;\n  }\n\n  const lastAngle = Math.atan2(ey - pivotPoint.y, ex - pivotPoint.x),\n    curAngle = Math.atan2(y - pivotPoint.y, x - pivotPoint.x),\n    snapKey = eventData[target.canvas!.snapAngleKey!];\n  let angle = radiansToDegrees(curAngle - lastAngle + theta);\n\n  if (snapKey && target.snapAngle && target.snapAngle > 0) {\n    const snapAngle = target.snapAngle,\n      snapThreshold = target.snapThreshold || snapAngle,\n      rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle,\n      leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\n\n    if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\n      angle = leftAngleLocked;\n    } else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\n      angle = rightAngleLocked;\n    }\n  }\n\n  // normalize angle to positive value\n  if (angle < 0) {\n    angle = 360 + angle;\n  }\n  angle %= 360;\n\n  const hasRotated = target.angle !== angle;\n  // TODO: why aren't we using set?\n  target.angle = angle;\n  return hasRotated;\n};\n\nexport const rotationWithSnapping = wrapWithFireEvent(\n  ROTATING,\n  wrapWithFixedAnchor(rotateObjectWithSnapping),\n);\n","import type {\n  ControlCursorCallback,\n  TPointerEvent,\n  Transform,\n  TransformActionHandler,\n} from '../EventTypeDefs';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { TAxis } from '../typedefs';\nimport type { Canvas } from '../canvas/Canvas';\nimport {\n  findCornerQuadrant,\n  getLocalPoint,\n  invertOrigin,\n  isLocked,\n  isTransformCentered,\n  NOT_ALLOWED_CURSOR,\n} from './util';\nimport { wrapWithFireEvent } from './wrapWithFireEvent';\nimport { wrapWithFixedAnchor } from './wrapWithFixedAnchor';\nimport { SCALE_X, SCALE_Y, SCALING } from '../constants';\n\ntype ScaleTransform = Transform & {\n  gestureScale?: number;\n  signX?: number;\n  signY?: number;\n};\n\ntype ScaleBy = TAxis | 'equally' | '' | undefined;\n\n/**\n * Inspect event and fabricObject properties to understand if the scaling action\n * @param {Event} eventData from the user action\n * @param {FabricObject} fabricObject the fabric object about to scale\n * @return {Boolean} true if scale is proportional\n */\nexport function scaleIsProportional(\n  eventData: TPointerEvent,\n  fabricObject: FabricObject,\n): boolean {\n  if (fabricObject.lockUniScaling) return true;\n  const canvas = fabricObject.canvas as Canvas,\n    uniformIsToggled = eventData[canvas.uniScaleKey!];\n  return (\n    (canvas.uniformScaling && !uniformIsToggled) ||\n    (!canvas.uniformScaling && uniformIsToggled)\n  );\n}\n\n/**\n * Inspect fabricObject to understand if the current scaling action is allowed\n * @param {FabricObject} fabricObject the fabric object about to scale\n * @param {String} by 'x' or 'y' or ''\n * @param {Boolean} scaleProportionally true if we are trying to scale proportionally\n * @return {Boolean} true if scaling is not allowed at current conditions\n */\nexport function scalingIsForbidden(\n  fabricObject: FabricObject,\n  by: ScaleBy,\n  scaleProportionally: boolean,\n) {\n  const lockX = isLocked(fabricObject, 'lockScalingX'),\n    lockY = isLocked(fabricObject, 'lockScalingY');\n  if (lockX && lockY) {\n    return true;\n  }\n  if (!by && (lockX || lockY) && scaleProportionally) {\n    return true;\n  }\n  if (lockX && by === 'x') {\n    return true;\n  }\n  if (lockY && by === 'y') {\n    return true;\n  }\n  // code crashes because of a division by 0 if a 0 sized object is scaled\n  // forbid to prevent scaling to happen. ISSUE-9475\n  const { width, height, strokeWidth } = fabricObject;\n  if (width === 0 && strokeWidth === 0 && by !== 'y') {\n    return true;\n  }\n  if (height === 0 && strokeWidth === 0 && by !== 'x') {\n    return true;\n  }\n  return false;\n}\n\nconst scaleMap = ['e', 'se', 's', 'sw', 'w', 'nw', 'n', 'ne', 'e'];\n\n/**\n * return the correct cursor style for the scale action\n * @param {Event} eventData the javascript event that is causing the scale\n * @param {Control} control the control that is interested in the action\n * @param {FabricObject} fabricObject the fabric object that is interested in the action\n * @return {String} a valid css string for the cursor\n */\nexport const scaleCursorStyleHandler: ControlCursorCallback = (\n  eventData,\n  control,\n  fabricObject,\n) => {\n  const scaleProportionally = scaleIsProportional(eventData, fabricObject),\n    by =\n      control.x !== 0 && control.y === 0\n        ? 'x'\n        : control.x === 0 && control.y !== 0\n          ? 'y'\n          : '';\n  if (scalingIsForbidden(fabricObject, by, scaleProportionally)) {\n    return NOT_ALLOWED_CURSOR;\n  }\n  const n = findCornerQuadrant(fabricObject, control);\n  return `${scaleMap[n]}-resize`;\n};\n\n/**\n * Basic scaling logic, reused with different constrain for scaling X,Y, freely or equally.\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @param {Object} options additional information for scaling\n * @param {String} options.by 'x', 'y', 'equally' or '' to indicate type of scaling\n * @return {Boolean} true if some change happened\n * @private\n */\nfunction scaleObject(\n  eventData: TPointerEvent,\n  transform: ScaleTransform,\n  x: number,\n  y: number,\n  options: { by?: ScaleBy } = {},\n) {\n  const target = transform.target,\n    by = options.by,\n    scaleProportionally = scaleIsProportional(eventData, target),\n    forbidScaling = scalingIsForbidden(target, by, scaleProportionally);\n  let newPoint, scaleX, scaleY, dim, signX, signY;\n\n  if (forbidScaling) {\n    return false;\n  }\n\n  if (target.canvas?.snapPointFn && !target.angle) {\n    const snapped = target.canvas.snapPointFn([x, y]);\n    x = snapped[0];\n    y = snapped[1];\n  }\n\n  if (transform.gestureScale) {\n    scaleX = transform.scaleX * transform.gestureScale;\n    scaleY = transform.scaleY * transform.gestureScale;\n  } else {\n    newPoint = getLocalPoint(\n      transform,\n      transform.originX,\n      transform.originY,\n      x,\n      y,\n    );\n    // use of sign: We use sign to detect change of direction of an action. sign usually change when\n    // we cross the origin point with the mouse. So a scale flip for example. There is an issue when scaling\n    // by center and scaling using one middle control ( default: mr, mt, ml, mb), the mouse movement can easily\n    // cross many time the origin point and flip the object. so we need a way to filter out the noise.\n    // This ternary here should be ok to filter out X scaling when we want Y only and vice versa.\n    signX = by !== 'y' ? Math.sign(newPoint.x || transform.signX || 1) : 1;\n    signY = by !== 'x' ? Math.sign(newPoint.y || transform.signY || 1) : 1;\n    if (!transform.signX) {\n      transform.signX = signX;\n    }\n    if (!transform.signY) {\n      transform.signY = signY;\n    }\n\n    if (\n      isLocked(target, 'lockScalingFlip') &&\n      (transform.signX !== signX || transform.signY !== signY)\n    ) {\n      return false;\n    }\n\n    dim = target._getTransformedDimensions();\n    // missing detection of flip and logic to switch the origin\n    if (scaleProportionally && !by) {\n      // uniform scaling\n      // const distance = Math.abs(newPoint.x) + Math.abs(newPoint.y),\n      //   { original } = transform,\n      //   originalDistance =\n      //     Math.abs((dim.x * original.scaleX) / target.scaleX) +\n      //     Math.abs((dim.y * original.scaleY) / target.scaleY),\n      //   scale = distance / originalDistance;\n      // scaleX = original.scaleX * scale;\n      // scaleY = original.scaleY * scale;\n\n      // new logic to scale upto furthest point\n      scaleX = Math.abs(newPoint.x * target.scaleX / dim.x) / transform.original.scaleX;\n      scaleY = Math.abs(newPoint.y * target.scaleY / dim.y) / transform.original.scaleY;\n      const scale = Math.max(scaleX, scaleY);\n      scaleX = transform.original.scaleX * scale;\n      scaleY = transform.original.scaleY * scale;\n    } else {\n      scaleX = Math.abs((newPoint.x * target.scaleX) / dim.x);\n      scaleY = Math.abs((newPoint.y * target.scaleY) / dim.y);\n    }\n    // if we are scaling by center, we need to double the scale\n    if (isTransformCentered(transform)) {\n      scaleX *= 2;\n      scaleY *= 2;\n    }\n    if (transform.signX !== signX && by !== 'y') {\n      transform.originX = invertOrigin(transform.originX);\n      scaleX *= -1;\n      transform.signX = signX;\n    }\n    if (transform.signY !== signY && by !== 'x') {\n      transform.originY = invertOrigin(transform.originY);\n      scaleY *= -1;\n      transform.signY = signY;\n    }\n  }\n  // minScale is taken care of in the setter.\n  const oldScaleX = target.scaleX,\n    oldScaleY = target.scaleY;\n  if (!by) {\n    !isLocked(target, 'lockScalingX') && target.set(SCALE_X, scaleX);\n    !isLocked(target, 'lockScalingY') && target.set(SCALE_Y, scaleY);\n  } else {\n    // forbidden cases already handled on top here.\n    by === 'x' && target.set(SCALE_X, scaleX);\n    by === 'y' && target.set(SCALE_Y, scaleY);\n  }\n  return oldScaleX !== target.scaleX || oldScaleY !== target.scaleY;\n}\n\n/**\n * Generic scaling logic, to scale from corners either equally or freely.\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nexport const scaleObjectFromCorner: TransformActionHandler<ScaleTransform> = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  return scaleObject(eventData, transform, x, y);\n};\n\n/**\n * Scaling logic for the X axis.\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nconst scaleObjectX: TransformActionHandler<ScaleTransform> = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  return scaleObject(eventData, transform, x, y, { by: 'x' });\n};\n\n/**\n * Scaling logic for the Y axis.\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nconst scaleObjectY: TransformActionHandler<ScaleTransform> = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  return scaleObject(eventData, transform, x, y, { by: 'y' });\n};\n\nexport const scalingEqually = wrapWithFireEvent(\n  SCALING,\n  wrapWithFixedAnchor(scaleObjectFromCorner),\n);\n\nexport const scalingX = wrapWithFireEvent(\n  SCALING,\n  wrapWithFixedAnchor(scaleObjectX),\n);\n\nexport const scalingY = wrapWithFireEvent(\n  SCALING,\n  wrapWithFixedAnchor(scaleObjectY),\n);\n","import type {\n  ControlCursorCallback,\n  TPointerEvent,\n  Transform,\n  TransformActionHandler,\n} from '../EventTypeDefs';\nimport { resolveOrigin } from '../util/misc/resolveOrigin';\nimport { Point } from '../Point';\nimport type { TAxis, TAxisKey } from '../typedefs';\nimport {\n  degreesToRadians,\n  radiansToDegrees,\n} from '../util/misc/radiansDegreesConversion';\nimport {\n  findCornerQuadrant,\n  getLocalPoint,\n  isLocked,\n  NOT_ALLOWED_CURSOR,\n} from './util';\nimport { wrapWithFireEvent } from './wrapWithFireEvent';\nimport { wrapWithFixedAnchor } from './wrapWithFixedAnchor';\nimport {\n  CENTER,\n  SCALE_X,\n  SCALE_Y,\n  SKEWING,\n  SKEW_X,\n  SKEW_Y,\n} from '../constants';\n\nexport type SkewTransform = Transform & { skewingSide: -1 | 1 };\n\nconst AXIS_KEYS: Record<\n  TAxis,\n  {\n    counterAxis: TAxis;\n    scale: TAxisKey<'scale'>;\n    skew: TAxisKey<'skew'>;\n    lockSkewing: TAxisKey<'lockSkewing'>;\n    origin: TAxisKey<'origin'>;\n    flip: TAxisKey<'flip'>;\n  }\n> = {\n  x: {\n    counterAxis: 'y',\n    scale: SCALE_X,\n    skew: SKEW_X,\n    lockSkewing: 'lockSkewingX',\n    origin: 'originX',\n    flip: 'flipX',\n  },\n  y: {\n    counterAxis: 'x',\n    scale: SCALE_Y,\n    skew: SKEW_Y,\n    lockSkewing: 'lockSkewingY',\n    origin: 'originY',\n    flip: 'flipY',\n  },\n};\n\nconst skewMap = ['ns', 'nesw', 'ew', 'nwse'];\n\n/**\n * return the correct cursor style for the skew action\n * @param {Event} eventData the javascript event that is causing the scale\n * @param {Control} control the control that is interested in the action\n * @param {FabricObject} fabricObject the fabric object that is interested in the action\n * @return {String} a valid css string for the cursor\n */\nexport const skewCursorStyleHandler: ControlCursorCallback = (\n  eventData,\n  control,\n  fabricObject,\n) => {\n  if (control.x !== 0 && isLocked(fabricObject, 'lockSkewingY')) {\n    return NOT_ALLOWED_CURSOR;\n  }\n  if (control.y !== 0 && isLocked(fabricObject, 'lockSkewingX')) {\n    return NOT_ALLOWED_CURSOR;\n  }\n  const n = findCornerQuadrant(fabricObject, control) % 4;\n  return `${skewMap[n]}-resize`;\n};\n\n/**\n * Since skewing is applied before scaling, calculations are done in a scaleless plane\n * @see https://github.com/fabricjs/fabric.js/pull/8380\n */\nfunction skewObject(\n  axis: TAxis,\n  { target, ex, ey, skewingSide, ...transform }: SkewTransform,\n  pointer: Point,\n) {\n  const { skew: skewKey } = AXIS_KEYS[axis],\n    offset = pointer\n      .subtract(new Point(ex, ey))\n      .divide(new Point(target.scaleX, target.scaleY))[axis],\n    skewingBefore = target[skewKey],\n    skewingStart = transform[skewKey],\n    shearingStart = Math.tan(degreesToRadians(skewingStart)),\n    // let a, b be the size of target\n    // let a' be the value of a after applying skewing\n    // then:\n    // a' = a + b * skewA => skewA = (a' - a) / b\n    // the value b is tricky since skewY is applied before skewX\n    b =\n      axis === 'y'\n        ? target._getTransformedDimensions({\n            scaleX: 1,\n            scaleY: 1,\n            // since skewY is applied before skewX, b (=width) is not affected by skewX\n            skewX: 0,\n          }).x\n        : target._getTransformedDimensions({\n            scaleX: 1,\n            scaleY: 1,\n          }).y;\n\n  const shearing =\n    (2 * offset * skewingSide) /\n      // we max out fractions to safeguard from asymptotic behavior\n      Math.max(b, 1) +\n    // add starting state\n    shearingStart;\n\n  const skewing = radiansToDegrees(Math.atan(shearing));\n\n  target.set(skewKey, skewing);\n  const changed = skewingBefore !== target[skewKey];\n\n  if (changed && axis === 'y') {\n    // we don't want skewing to affect scaleX\n    // so we factor it by the inverse skewing diff to make it seem unchanged to the viewer\n    const { skewX, scaleX } = target,\n      dimBefore = target._getTransformedDimensions({ skewY: skewingBefore }),\n      dimAfter = target._getTransformedDimensions(),\n      compensationFactor = skewX !== 0 ? dimBefore.x / dimAfter.x : 1;\n    compensationFactor !== 1 &&\n      target.set(SCALE_X, compensationFactor * scaleX);\n  }\n\n  return changed;\n}\n\n/**\n * Wrapped Action handler for skewing on a given axis, takes care of the\n * skew direction and determines the correct transform origin for the anchor point\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nfunction skewHandler(\n  axis: TAxis,\n  eventData: TPointerEvent,\n  transform: Transform,\n  x: number,\n  y: number,\n) {\n  const { target } = transform,\n    {\n      counterAxis,\n      origin: originKey,\n      lockSkewing: lockSkewingKey,\n      skew: skewKey,\n      flip: flipKey,\n    } = AXIS_KEYS[axis];\n  if (isLocked(target, lockSkewingKey)) {\n    return false;\n  }\n\n  const { origin: counterOriginKey, flip: counterFlipKey } =\n      AXIS_KEYS[counterAxis],\n    counterOriginFactor =\n      resolveOrigin(transform[counterOriginKey]) *\n      (target[counterFlipKey] ? -1 : 1),\n    // if the counter origin is top/left (= -0.5) then we are skewing x/y values on the bottom/right side of target respectively.\n    // if the counter origin is bottom/right (= 0.5) then we are skewing x/y values on the top/left side of target respectively.\n    // skewing direction on the top/left side of target is OPPOSITE to the direction of the movement of the pointer,\n    // so we factor skewing direction by this value.\n    skewingSide = (-Math.sign(counterOriginFactor) *\n      (target[flipKey] ? -1 : 1)) as 1 | -1,\n    skewingDirection =\n      ((target[skewKey] === 0 &&\n        // in case skewing equals 0 we use the pointer offset from target center to determine the direction of skewing\n        getLocalPoint(transform, CENTER, CENTER, x, y)[axis] > 0) ||\n      // in case target has skewing we use that as the direction\n      target[skewKey] > 0\n        ? 1\n        : -1) * skewingSide,\n    // anchor to the opposite side of the skewing direction\n    // normalize value from [-1, 1] to origin value [0, 1]\n    origin = -skewingDirection * 0.5 + 0.5;\n\n  const finalHandler = wrapWithFireEvent<SkewTransform>(\n    SKEWING,\n    wrapWithFixedAnchor((eventData, transform, x, y) =>\n      skewObject(axis, transform, new Point(x, y)),\n    ),\n  );\n\n  return finalHandler(\n    eventData,\n    {\n      ...transform,\n      [originKey]: origin,\n      skewingSide,\n    },\n    x,\n    y,\n  );\n}\n\n/**\n * Wrapped Action handler for skewing on the X axis, takes care of the\n * skew direction and determines the correct transform origin for the anchor point\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nexport const skewHandlerX: TransformActionHandler = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  return skewHandler('x', eventData, transform, x, y);\n};\n\n/**\n * Wrapped Action handler for skewing on the Y axis, takes care of the\n * skew direction and determines the correct transform origin for the anchor point\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nexport const skewHandlerY: TransformActionHandler = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  return skewHandler('y', eventData, transform, x, y);\n};\n","import type {\n  ControlCallback,\n  ControlCursorCallback,\n  TPointerEvent,\n  TransformActionHandler,\n} from '../EventTypeDefs';\nimport { SCALE_X, SCALE_Y, SKEW_X, SKEW_Y } from '../constants';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { TAxisKey } from '../typedefs';\nimport { scaleCursorStyleHandler, scalingX, scalingY } from './scale';\nimport { skewCursorStyleHandler, skewHandlerX, skewHandlerY } from './skew';\n\nfunction isAltAction(eventData: TPointerEvent, target: FabricObject) {\n  return eventData[target.canvas!.altActionKey!];\n}\n\n/**\n * Inspect event, control and fabricObject to return the correct action name\n * @param {Event} eventData the javascript event that is causing the scale\n * @param {Control} control the control that is interested in the action\n * @param {FabricObject} fabricObject the fabric object that is interested in the action\n * @return {String} an action name\n */\nexport const scaleOrSkewActionName: ControlCallback<\n  TAxisKey<'skew' | 'scale'> | ''\n> = (eventData, control, fabricObject) => {\n  const isAlternative = isAltAction(eventData, fabricObject);\n  if (control.x === 0) {\n    // then is scaleY or skewX\n    return isAlternative ? SKEW_X : SCALE_Y;\n  }\n  if (control.y === 0) {\n    // then is scaleY or skewX\n    return isAlternative ? SKEW_Y : SCALE_X;\n  }\n  return '';\n};\n\n/**\n * Combine skew and scale style handlers to cover fabric standard use case\n * @param {Event} eventData the javascript event that is causing the scale\n * @param {Control} control the control that is interested in the action\n * @param {FabricObject} fabricObject the fabric object that is interested in the action\n * @return {String} a valid css string for the cursor\n */\nexport const scaleSkewCursorStyleHandler: ControlCursorCallback = (\n  eventData,\n  control,\n  fabricObject,\n) => {\n  return isAltAction(eventData, fabricObject)\n    ? skewCursorStyleHandler(eventData, control, fabricObject)\n    : scaleCursorStyleHandler(eventData, control, fabricObject);\n};\n/**\n * Composed action handler to either scale X or skew Y\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nexport const scalingXOrSkewingY: TransformActionHandler = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  return isAltAction(eventData, transform.target)\n    ? skewHandlerY(eventData, transform, x, y)\n    : scalingX(eventData, transform, x, y);\n};\n\n/**\n * Composed action handler to either scale Y or skew X\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nexport const scalingYOrSkewingX: TransformActionHandler = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  return isAltAction(eventData, transform.target)\n    ? skewHandlerX(eventData, transform, x, y)\n    : scalingY(eventData, transform, x, y);\n};\n","import { RESIZING, ROTATE } from '../constants';\nimport { changeWidth } from './changeWidth';\nimport { Control } from './Control';\nimport { rotationStyleHandler, rotationWithSnapping } from './rotate';\nimport { scaleCursorStyleHandler, scalingEqually } from './scale';\nimport {\n  scaleOrSkewActionName,\n  scaleSkewCursorStyleHandler,\n  scalingXOrSkewingY,\n  scalingYOrSkewingX,\n} from './scaleSkew';\n\n// use this function if you want to generate new controls for every instance\nexport const createObjectDefaultControls = () => ({\n  ml: new Control({\n    x: -0.5,\n    y: 0,\n    cursorStyleHandler: scaleSkewCursorStyleHandler,\n    actionHandler: scalingXOrSkewingY,\n    getActionName: scaleOrSkewActionName,\n  }),\n\n  mr: new Control({\n    x: 0.5,\n    y: 0,\n    cursorStyleHandler: scaleSkewCursorStyleHandler,\n    actionHandler: scalingXOrSkewingY,\n    getActionName: scaleOrSkewActionName,\n  }),\n\n  mb: new Control({\n    x: 0,\n    y: 0.5,\n    cursorStyleHandler: scaleSkewCursorStyleHandler,\n    actionHandler: scalingYOrSkewingX,\n    getActionName: scaleOrSkewActionName,\n  }),\n\n  mt: new Control({\n    x: 0,\n    y: -0.5,\n    cursorStyleHandler: scaleSkewCursorStyleHandler,\n    actionHandler: scalingYOrSkewingX,\n    getActionName: scaleOrSkewActionName,\n  }),\n\n  tl: new Control({\n    x: -0.5,\n    y: -0.5,\n    cursorStyleHandler: scaleCursorStyleHandler,\n    actionHandler: scalingEqually,\n  }),\n\n  tr: new Control({\n    x: 0.5,\n    y: -0.5,\n    cursorStyleHandler: scaleCursorStyleHandler,\n    actionHandler: scalingEqually,\n  }),\n\n  bl: new Control({\n    x: -0.5,\n    y: 0.5,\n    cursorStyleHandler: scaleCursorStyleHandler,\n    actionHandler: scalingEqually,\n  }),\n\n  br: new Control({\n    x: 0.5,\n    y: 0.5,\n    cursorStyleHandler: scaleCursorStyleHandler,\n    actionHandler: scalingEqually,\n  }),\n\n  mtr: new Control({\n    x: 0,\n    y: -0.5,\n    actionHandler: rotationWithSnapping,\n    cursorStyleHandler: rotationStyleHandler,\n    offsetY: -40,\n    withConnection: true,\n    actionName: ROTATE,\n  }),\n});\n\nexport const createResizeControls = () => ({\n  mr: new Control({\n    x: 0.5,\n    y: 0,\n    actionHandler: changeWidth,\n    cursorStyleHandler: scaleSkewCursorStyleHandler,\n    actionName: RESIZING,\n  }),\n  ml: new Control({\n    x: -0.5,\n    y: 0,\n    actionHandler: changeWidth,\n    cursorStyleHandler: scaleSkewCursorStyleHandler,\n    actionName: RESIZING,\n  }),\n});\n\nexport const createTextboxDefaultControls = () => ({\n  ...createObjectDefaultControls(),\n  ...createResizeControls(),\n});\n","import { Point, ZERO } from '../../Point';\nimport type { TCornerPoint, TDegree } from '../../typedefs';\nimport { FabricObject } from './Object';\nimport { degreesToRadians } from '../../util/misc/radiansDegreesConversion';\nimport type { TQrDecomposeOut } from '../../util/misc/matrix';\nimport {\n  calcDimensionsMatrix,\n  createRotateMatrix,\n  createTranslateMatrix,\n  multiplyTransformMatrices,\n  qrDecompose,\n} from '../../util/misc/matrix';\nimport type { Control } from '../../controls/Control';\nimport { sizeAfterTransform } from '../../util/misc/objectTransforms';\nimport type { ObjectEvents, TPointerEvent } from '../../EventTypeDefs';\nimport type { Canvas } from '../../canvas/Canvas';\nimport type { ControlRenderingStyleOverride } from '../../controls/controlRendering';\nimport type { FabricObjectProps } from './types/FabricObjectProps';\nimport type { TFabricObjectProps, SerializedObjectProps } from './types';\nimport { createObjectDefaultControls } from '../../controls/commonControls';\nimport { interactiveObjectDefaultValues } from './defaultValues';\nimport { SCALE } from '../../constants';\n\nexport type TOCoord = Point & {\n  corner: TCornerPoint;\n  touchCorner: TCornerPoint;\n};\n\nexport type TControlSet = Record<string, Control>;\n\nexport type TBorderRenderingStyleOverride = Partial<\n  Pick<InteractiveFabricObject, 'borderColor' | 'borderDashArray'>\n>;\n\nexport type TStyleOverride = ControlRenderingStyleOverride &\n  TBorderRenderingStyleOverride &\n  Partial<\n    Pick<InteractiveFabricObject, 'hasBorders' | 'hasControls'> & {\n      forActiveSelection: boolean;\n    }\n  >;\n\nexport class InteractiveFabricObject<\n  Props extends TFabricObjectProps = Partial<FabricObjectProps>,\n  SProps extends SerializedObjectProps = SerializedObjectProps,\n  EventSpec extends ObjectEvents = ObjectEvents,\n>\n  extends FabricObject<Props, SProps, EventSpec>\n  implements FabricObjectProps {\n  declare noScaleCache: boolean;\n\n  declare snapAngle?: TDegree;\n  declare snapThreshold?: TDegree;\n\n  declare lockMovementX: boolean;\n  declare lockMovementY: boolean;\n  declare lockRotation: boolean;\n  declare lockScalingX: boolean;\n  declare lockScalingY: boolean;\n  declare lockSkewingX: boolean;\n  declare lockSkewingY: boolean;\n  declare lockScalingFlip: boolean;\n\n  declare cornerSize: number;\n  declare touchCornerSize: number;\n  declare transparentCorners: boolean;\n  declare cornerColor: string;\n  declare cornerStrokeColor: string;\n  declare cornerStyle: 'rect' | 'circle';\n  declare cornerDashArray: number[] | null;\n  declare hasControls: boolean;\n\n  declare borderColor: string;\n  declare borderDashArray: number[] | null;\n  declare borderOpacityWhenMoving: number;\n  declare borderScaleFactor: number;\n  declare hasBorders: boolean;\n  declare selectionBackgroundColor: string;\n\n  declare selectable: boolean;\n  declare evented: boolean;\n  declare perPixelTargetFind: boolean;\n  declare activeOn: 'down' | 'up';\n\n  declare hoverCursor: CSSStyleDeclaration['cursor'] | null;\n  declare moveCursor: CSSStyleDeclaration['cursor'] | null;\n\n  declare lockUniScaling: boolean;\n\n  /**\n   * The object's controls' position in viewport coordinates\n   * Calculated by {@link Control#positionHandler} and {@link Control#calcCornerCoords}, depending on {@link padding}.\n   * `corner/touchCorner` describe the 4 points forming the interactive area of the corner.\n   * Used to draw and locate controls.\n   */\n  declare oCoords: Record<string, TOCoord>;\n\n  /**\n   * keeps the value of the last hovered corner during mouse move.\n   * 0 is no corner, or 'mt', 'ml', 'mtr' etc..\n   * It should be private, but there is no harm in using it as\n   * a read-only property.\n   * this isn't cleaned automatically. Non selected objects may have wrong values\n   * @type [string]\n   */\n  declare __corner?: string;\n\n  /**\n   * a map of control visibility for this object.\n   * this was left when controls were introduced to not break the api too much\n   * this takes priority over the generic control visibility\n   */\n  declare _controlsVisibility: Record<string, boolean>;\n\n  /**\n   * holds the controls for the object.\n   * controls are added by default_controls.js\n   */\n  declare controls: TControlSet;\n\n  /**\n   * internal boolean to signal the code that the object is\n   * part of the move action.\n   */\n  declare isMoving?: boolean;\n\n  /**\n   * A boolean used from the gesture module to keep tracking of a scaling\n   * action when there is no scaling transform in place.\n   * This is an edge case and is used twice in all codebase.\n   * Probably added to keep track of some performance issues\n   * @TODO use git blame to investigate why it was added\n   * DON'T USE IT. WE WILL TRY TO REMOVE IT\n   */\n  declare _scaling?: boolean;\n\n  declare canvas?: Canvas;\n\n  static ownDefaults = interactiveObjectDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...InteractiveFabricObject.ownDefaults,\n    };\n  }\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  constructor(options?: Props) {\n    super();\n    Object.assign(\n      this,\n      (this.constructor as typeof InteractiveFabricObject).createControls(),\n      InteractiveFabricObject.ownDefaults,\n    );\n    this.setOptions(options);\n  }\n\n  /**\n   * Creates the default control object.\n   * If you prefer to have on instance of controls shared among all objects\n   * make this function return an empty object and add controls to the ownDefaults\n   * @param {Object} [options] Options object\n   */\n  static createControls(): { controls: Record<string, Control> } {\n    return { controls: createObjectDefaultControls() };\n  }\n\n  /**\n   * Update width and height of the canvas for cache\n   * returns true or false if canvas needed resize.\n   * @private\n   * @return {Boolean} true if the canvas has been resized\n   */\n  _updateCacheCanvas() {\n    const targetCanvas = this.canvas;\n    if (this.noScaleCache && targetCanvas && targetCanvas._currentTransform) {\n      const transform = targetCanvas._currentTransform,\n        target = transform.target,\n        action = transform.action;\n      if (\n        this === (target as unknown as this) &&\n        action &&\n        action.startsWith(SCALE)\n      ) {\n        return false;\n      }\n    }\n    return super._updateCacheCanvas();\n  }\n\n  getActiveControl() {\n    const key = this.__corner;\n    return key\n      ? {\n        key,\n        control: this.controls[key],\n        coord: this.oCoords[key],\n      }\n      : undefined;\n  }\n\n  /**\n   * Determines which corner is under the mouse cursor, represented by `pointer`.\n   * This function is return a corner only if the object is the active one.\n   * This is done to avoid selecting corner of non active object and activating transformations\n   * rather than drag action. The default behavior of fabricJS is that if you want to transform\n   * an object, first you select it to show the control set\n   * @private\n   * @param {Object} pointer The pointer indicating the mouse position\n   * @param {boolean} forTouch indicates if we are looking for interaction area with a touch action\n   * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or 0 if nothing is found.\n   */\n  findControl(\n    pointer: Point,\n    forTouch = false,\n  ): { key: string; control: Control; coord: TOCoord } | undefined {\n    if (!this.hasControls || !this.canvas) {\n      return undefined;\n    }\n\n    this.__corner = undefined;\n    const cornerEntries = Object.entries(this.oCoords);\n    for (let i = cornerEntries.length - 1; i >= 0; i--) {\n      const [key, corner] = cornerEntries[i];\n      const control = this.controls[key];\n\n      if (\n        control.shouldActivate(\n          key,\n          this,\n          pointer,\n          forTouch ? corner.touchCorner : corner.corner,\n        )\n      ) {\n        // this.canvas.contextTop.fillRect(pointer.x - 1, pointer.y - 1, 2, 2);\n        this.__corner = key;\n\n        return { key, control, coord: this.oCoords[key] };\n      }\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Calculates the coordinates of the center of each control plus the corners of the control itself\n   * This basically just delegates to each control positionHandler\n   * WARNING: changing what is passed to positionHandler is a breaking change, since position handler\n   * is a public api and should be done just if extremely necessary\n   * @return {Record<string, TOCoord>}\n   */\n  calcOCoords(): Record<string, TOCoord> {\n    const vpt = this.getViewportTransform(),\n      center = this.getCenterPoint(),\n      tMatrix = createTranslateMatrix(center.x, center.y),\n      rMatrix = createRotateMatrix({\n        angle: this.getTotalAngle() - (!!this.group && this.flipX ? 180 : 0),\n      }),\n      positionMatrix = multiplyTransformMatrices(tMatrix, rMatrix),\n      startMatrix = multiplyTransformMatrices(vpt, positionMatrix),\n      finalMatrix = multiplyTransformMatrices(startMatrix, [\n        1 / vpt[0],\n        0,\n        0,\n        1 / vpt[3],\n        0,\n        0,\n      ]),\n      transformOptions = this.group\n        ? qrDecompose(this.calcTransformMatrix())\n        : undefined;\n    // decomposing could bring negative scaling and `_calculateCurrentDimensions` can't take it\n    if (transformOptions) {\n      transformOptions.scaleX = Math.abs(transformOptions.scaleX);\n      transformOptions.scaleY = Math.abs(transformOptions.scaleY);\n    }\n    const dim = this._calculateCurrentDimensions(transformOptions),\n      coords: Record<string, TOCoord> = {};\n\n    this.forEachControl((control, key) => {\n      const position = control.positionHandler(dim, finalMatrix, this, control);\n      // coords[key] are sometimes used as points. Those are points to which we add\n      // the property corner and touchCorner from `_calcCornerCoords`.\n      // don't remove this assign for an object spread.\n      coords[key] = Object.assign(\n        position,\n        this._calcCornerCoords(control, position),\n      );\n    });\n\n    // debug code\n    /*\n      const canvas = this.canvas;\n      setTimeout(function () {\n      if (!canvas) return;\n        canvas.contextTop.clearRect(0, 0, 700, 700);\n        canvas.contextTop.fillStyle = 'green';\n        Object.keys(coords).forEach(function(key) {\n          const control = coords[key];\n          canvas.contextTop.fillRect(control.x, control.y, 3, 3);\n        });\n      } 50);\n    */\n    return coords;\n  }\n\n  /**\n   * Sets the coordinates that determine the interaction area of each control\n   * note: if we would switch to ROUND corner area, all of this would disappear.\n   * everything would resolve to a single point and a pythagorean theorem for the distance\n   * @todo evaluate simplification of code switching to circle interaction area at runtime\n   * @private\n   */\n  private _calcCornerCoords(control: Control, position: Point) {\n    const angle = this.getTotalAngle();\n    const corner = control.calcCornerCoords(\n      angle,\n      this.cornerSize,\n      position.x,\n      position.y,\n      false,\n      this,\n    );\n    const touchCorner = control.calcCornerCoords(\n      angle,\n      this.touchCornerSize,\n      position.x,\n      position.y,\n      true,\n      this,\n    );\n    return { corner, touchCorner };\n  }\n\n  /**\n   * @override set controls' coordinates as well\n   * See {@link https://github.com/fabricjs/fabric.js/wiki/When-to-call-setCoords} and {@link http://fabricjs.com/fabric-gotchas}\n   * @return {void}\n   */\n  setCoords(): void {\n    super.setCoords();\n    this.canvas && (this.oCoords = this.calcOCoords());\n  }\n\n  /**\n   * Calls a function for each control. The function gets called,\n   * with the control, the control's key and the object that is calling the iterator\n   * @param {Function} fn function to iterate over the controls over\n   */\n  forEachControl(\n    fn: (\n      control: Control,\n      key: string,\n      fabricObject: InteractiveFabricObject,\n    ) => any,\n  ) {\n    for (const i in this.controls) {\n      fn(this.controls[i], i, this);\n    }\n  }\n\n  /**\n   * Draws a colored layer behind the object, inside its selection borders.\n   * Requires public options: padding, selectionBackgroundColor\n   * this function is called when the context is transformed\n   * has checks to be skipped when the object is on a staticCanvas\n   * @todo evaluate if make this disappear in favor of a pre-render hook for objects\n   * this was added by Andrea Bogazzi to make possible some feature for work reasons\n   * it seemed a good option, now is an edge case\n   * @param {CanvasRenderingContext2D} ctx Context to draw on\n   */\n  drawSelectionBackground(ctx: CanvasRenderingContext2D): void {\n    if (\n      !this.selectionBackgroundColor ||\n      (this.canvas && (this.canvas._activeObject as unknown as this) !== this)\n    ) {\n      return;\n    }\n    ctx.save();\n    const center = this.getRelativeCenterPoint(),\n      wh = this._calculateCurrentDimensions(),\n      vpt = this.getViewportTransform();\n    ctx.translate(center.x, center.y);\n    ctx.scale(1 / vpt[0], 1 / vpt[3]);\n    ctx.rotate(degreesToRadians(this.angle));\n    ctx.fillStyle = this.selectionBackgroundColor;\n    ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\n    ctx.restore();\n  }\n\n  /**\n   * @public override this function in order to customize the drawing of the control box, e.g. rounded corners, different border style.\n   * @param {CanvasRenderingContext2D} ctx ctx is rotated and translated so that (0,0) is at object's center\n   * @param {Point} size the control box size used\n   */\n  strokeBorders(ctx: CanvasRenderingContext2D, size: Point): void {\n    ctx.strokeRect(-size.x / 2, -size.y / 2, size.x, size.y);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to draw on\n   * @param {Point} size\n   * @param {TStyleOverride} styleOverride object to override the object style\n   */\n  _drawBorders(\n    ctx: CanvasRenderingContext2D,\n    size: Point,\n    styleOverride: TStyleOverride = {},\n  ): void {\n    const options = {\n      hasControls: this.hasControls,\n      borderColor: this.borderColor,\n      borderDashArray: this.borderDashArray,\n      ...styleOverride,\n    };\n    ctx.save();\n    ctx.strokeStyle = options.borderColor;\n    this._setLineDash(ctx, options.borderDashArray);\n    this.strokeBorders(ctx, size);\n    options.hasControls && this.drawControlsConnectingLines(ctx, size);\n    ctx.restore();\n  }\n\n  /**\n   * Renders controls and borders for the object\n   * the context here is not transformed\n   * @todo move to interactivity\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {TStyleOverride} [styleOverride] properties to override the object style\n   */\n  _renderControls(\n    ctx: CanvasRenderingContext2D,\n    styleOverride: TStyleOverride = {},\n  ) {\n    const { hasBorders, hasControls } = this;\n    const styleOptions = {\n      hasBorders,\n      hasControls,\n      ...styleOverride,\n    };\n    const vpt = this.getViewportTransform(),\n      shouldDrawBorders = styleOptions.hasBorders,\n      shouldDrawControls = styleOptions.hasControls;\n    const matrix = multiplyTransformMatrices(vpt, this.calcTransformMatrix());\n    const options = qrDecompose(matrix);\n    ctx.save();\n    ctx.translate(options.translateX, options.translateY);\n    ctx.lineWidth = 1 * this.borderScaleFactor;\n    // since interactive groups have been introduced, an object could be inside a group and needing controls\n    // the following equality check `this.group === this.parent` covers:\n    // object without a group ( undefined === undefined )\n    // object inside a group\n    // excludes object inside a group but multi selected since group and parent will differ in value\n    if (this.group === this.parent) {\n      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n    }\n    if (this.flipX) {\n      options.angle -= 180;\n    }\n    ctx.rotate(degreesToRadians(this.group ? options.angle : this.angle));\n    shouldDrawBorders && this.drawBorders(ctx, options, styleOverride);\n    shouldDrawControls && this.drawControls(ctx, styleOverride);\n    ctx.restore();\n  }\n\n  /**\n   * Draws borders of an object's bounding box.\n   * Requires public properties: width, height\n   * Requires public options: padding, borderColor\n   * @param {CanvasRenderingContext2D} ctx Context to draw on\n   * @param {object} options object representing current object parameters\n   * @param {TStyleOverride} [styleOverride] object to override the object style\n   */\n  drawBorders(\n    ctx: CanvasRenderingContext2D,\n    options: TQrDecomposeOut,\n    styleOverride: TStyleOverride,\n  ): void {\n    let size;\n    if ((styleOverride && styleOverride.forActiveSelection) || this.group) {\n      const bbox = sizeAfterTransform(\n        this.width,\n        this.height,\n        calcDimensionsMatrix(options),\n      ),\n        stroke = !this.isStrokeAccountedForInDimensions()\n          ? (this.strokeUniform\n            ? new Point().scalarAdd(this.canvas ? this.canvas.getZoom() : 1)\n            : // this is extremely confusing. options comes from the upper function\n            // and is the qrDecompose of a matrix that takes in account zoom too\n            new Point(options.scaleX, options.scaleY)\n          ).scalarMultiply(this.strokeWidth)\n          : ZERO;\n      size = bbox\n        .add(stroke)\n        .scalarAdd(this.borderScaleFactor)\n        .scalarAdd(this.padding * 2);\n    } else {\n      size = this._calculateCurrentDimensions().scalarAdd(\n        this.borderScaleFactor,\n      );\n    }\n    this._drawBorders(ctx, size, styleOverride);\n  }\n\n  /**\n   * Draws lines from a borders of an object's bounding box to controls that have `withConnection` property set.\n   * Requires public properties: width, height\n   * Requires public options: padding, borderColor\n   * @param {CanvasRenderingContext2D} ctx Context to draw on\n   * @param {Point} size object size x = width, y = height\n   */\n  drawControlsConnectingLines(\n    ctx: CanvasRenderingContext2D,\n    size: Point,\n  ): void {\n    let shouldStroke = false;\n\n    ctx.beginPath();\n    this.forEachControl((control, key) => {\n      // in this moment, the ctx is centered on the object.\n      // width and height of the above function are the size of the bbox.\n      if (control.withConnection && control.getVisibility(this, key)) {\n        // reset movement for each control\n        shouldStroke = true;\n        ctx.moveTo(control.x * size.x, control.y * size.y);\n        ctx.lineTo(\n          control.x * size.x + control.offsetX,\n          control.y * size.y + control.offsetY,\n        );\n      }\n    });\n    shouldStroke && ctx.stroke();\n  }\n\n  /**\n   * Draws corners of an object's bounding box.\n   * Requires public properties: width, height\n   * Requires public options: cornerSize, padding\n   * Be aware that since fabric 6.0 this function does not call setCoords anymore.\n   * setCoords needs to be called manually if the object of which we are rendering controls\n   * is outside the standard selection and transform process.\n   * @param {CanvasRenderingContext2D} ctx Context to draw on\n   * @param {ControlRenderingStyleOverride} styleOverride object to override the object style\n   */\n  drawControls(\n    ctx: CanvasRenderingContext2D,\n    styleOverride: ControlRenderingStyleOverride = {},\n  ) {\n    ctx.save();\n    const retinaScaling = this.getCanvasRetinaScaling();\n    const { cornerStrokeColor, cornerDashArray, cornerColor } = this;\n    const options = {\n      cornerStrokeColor,\n      cornerDashArray,\n      cornerColor,\n      ...styleOverride,\n    };\n    ctx.setTransform(retinaScaling, 0, 0, retinaScaling, 0, 0);\n    ctx.strokeStyle = ctx.fillStyle = options.cornerColor;\n    if (!this.transparentCorners) {\n      ctx.strokeStyle = options.cornerStrokeColor;\n    }\n    this._setLineDash(ctx, options.cornerDashArray);\n    this.forEachControl((control, key) => {\n      if (control.getVisibility(this, key)) {\n        const p = this.oCoords[key];\n        control.render(ctx, p.x, p.y, options, this);\n      }\n    });\n    ctx.restore();\n  }\n\n  /**\n   * Returns true if the specified control is visible, false otherwise.\n   * @param {string} controlKey The key of the control. Possible values are usually 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr',\n   * but since the control api allow for any control name, can be any string.\n   * @returns {boolean} true if the specified control is visible, false otherwise\n   */\n  isControlVisible(controlKey: string): boolean {\n    return (\n      this.controls[controlKey] &&\n      this.controls[controlKey].getVisibility(this, controlKey)\n    );\n  }\n\n  /**\n   * Sets the visibility of the specified control.\n   * please do not use.\n   * @param {String} controlKey The key of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n   * but since the control api allow for any control name, can be any string.\n   * @param {Boolean} visible true to set the specified control visible, false otherwise\n   * @todo discuss this overlap of priority here with the team. Andrea Bogazzi for details\n   */\n  setControlVisible(controlKey: string, visible: boolean) {\n    if (!this._controlsVisibility) {\n      this._controlsVisibility = {};\n    }\n    this._controlsVisibility[controlKey] = visible;\n  }\n\n  /**\n   * Sets the visibility state of object controls, this is just a bulk option for setControlVisible;\n   * @param {Record<string, boolean>} [options] with an optional key per control\n   * example: {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\n   */\n  setControlsVisibility(options: Record<string, boolean> = {}) {\n    Object.entries(options).forEach(([controlKey, visibility]) =>\n      this.setControlVisible(controlKey, visibility),\n    );\n  }\n\n  /**\n   * Clears the canvas.contextTop in a specific area that corresponds to the object's bounding box\n   * that is in the canvas.contextContainer.\n   * This function is used to clear pieces of contextTop where we render ephemeral effects on top of the object.\n   * Example: blinking cursor text selection, drag effects.\n   * @todo discuss swapping restoreManually with a renderCallback, but think of async issues\n   * @param {Boolean} [restoreManually] When true won't restore the context after clear, in order to draw something else.\n   * @return {CanvasRenderingContext2D|undefined} canvas.contextTop that is either still transformed\n   * with the object transformMatrix, or restored to neutral transform\n   */\n  clearContextTop(\n    restoreManually?: boolean,\n  ): CanvasRenderingContext2D | undefined {\n    if (!this.canvas) {\n      return;\n    }\n    const ctx = this.canvas.contextTop;\n    if (!ctx) {\n      return;\n    }\n    const v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n    this.transform(ctx);\n    // we add 4 pixel, to be sure to do not leave any pixel out\n    const width = this.width + 4,\n      height = this.height + 4;\n    ctx.clearRect(-width / 2, -height / 2, width, height);\n\n    restoreManually || ctx.restore();\n    return ctx;\n  }\n\n  /**\n   * This callback function is called every time _discardActiveObject or _setActiveObject\n   * try to to deselect this object. If the function returns true, the process is cancelled\n   * @param {Object} [_options] options sent from the upper functions\n   * @param {TPointerEvent} [options.e] event if the process is generated by an event\n   * @param {FabricObject} [options.object] next object we are setting as active, and reason why\n   * this is being deselected\n   */\n  onDeselect(_options?: {\n    e?: TPointerEvent;\n    object?: InteractiveFabricObject;\n  }): boolean {\n    // implemented by sub-classes, as needed.\n    return false;\n  }\n\n  /**\n   * This callback function is called every time _discardActiveObject or _setActiveObject\n   * try to to select this object. If the function returns true, the process is cancelled\n   * @param {Object} [_options] options sent from the upper functions\n   * @param {Event} [_options.e] event if the process is generated by an event\n   */\n  onSelect(_options?: { e?: TPointerEvent }): boolean {\n    // implemented by sub-classes, as needed.\n    return false;\n  }\n\n  /**\n   * Override to customize Drag behavior\n   * Fired from {@link Canvas#_onMouseMove}\n   * @returns true in order for the window to start a drag session\n   */\n  shouldStartDragging(_e: TPointerEvent) {\n    return false;\n  }\n\n  /**\n   * Override to customize Drag behavior\\\n   * Fired once a drag session has started\n   * @returns true to handle the drag event\n   */\n  onDragStart(_e: DragEvent) {\n    return false;\n  }\n\n  /**\n   * Override to customize drag and drop behavior\n   * @public\n   * @param {DragEvent} _e\n   * @returns {boolean} true if the object currently dragged can be dropped on the target\n   */\n  canDrop(_e: DragEvent): boolean {\n    return false;\n  }\n\n  /**\n   * Override to customize drag and drop behavior\n   * render a specific effect when an object is the source of a drag event\n   * example: render the selection status for the part of text that is being dragged from a text object\n   * @public\n   * @param {DragEvent} _e\n   */\n  renderDragSourceEffect(_e: DragEvent) {\n    // for subclasses\n  }\n\n  /**\n   * Override to customize drag and drop behavior\n   * render a specific effect when an object is the target of a drag event\n   * used to show that the underly object can receive a drop, or to show how the\n   * object will change when dropping. example: show the cursor where the text is about to be dropped\n   * @public\n   * @param {DragEvent} _e\n   */\n  renderDropTargetEffect(_e: DragEvent) {\n    // for subclasses\n  }\n}\n","import type { Constructor } from '../typedefs';\n\n/***\n * https://www.typescriptlang.org/docs/handbook/mixins.html#alternative-pattern\n */\nexport function applyMixins<T extends Constructor, S extends Constructor>(\n  derivedCtor: T,\n  constructors: S[],\n) {\n  constructors.forEach((baseCtor) => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n      name !== 'constructor' &&\n        Object.defineProperty(\n          derivedCtor.prototype,\n          name,\n          Object.getOwnPropertyDescriptor(baseCtor.prototype, name) ||\n            Object.create(null),\n        );\n    });\n  });\n  return derivedCtor as T & { prototype: InstanceType<T & S> };\n}\n","import type { ObjectEvents } from '../../EventTypeDefs';\nimport { FabricObjectSVGExportMixin } from './FabricObjectSVGExportMixin';\nimport { InteractiveFabricObject } from './InteractiveObject';\nimport { applyMixins } from '../../util/applyMixins';\nimport type { FabricObjectProps } from './types/FabricObjectProps';\nimport type { TFabricObjectProps, SerializedObjectProps } from './types';\nimport { classRegistry } from '../../ClassRegistry';\n\n// TODO somehow we have to make a tree-shakeable import\n\n// eslint-disable-next-line @typescript-eslint/no-empty-object-type\nexport interface FabricObject<\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  Props extends TFabricObjectProps = Partial<FabricObjectProps>,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  SProps extends SerializedObjectProps = SerializedObjectProps,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  EventSpec extends ObjectEvents = ObjectEvents,\n> extends FabricObjectSVGExportMixin {}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-declaration-merging\nexport class FabricObject<\n  Props extends TFabricObjectProps = Partial<FabricObjectProps>,\n  SProps extends SerializedObjectProps = SerializedObjectProps,\n  EventSpec extends ObjectEvents = ObjectEvents,\n> extends InteractiveFabricObject<Props, SProps, EventSpec> {}\n\napplyMixins(FabricObject, [FabricObjectSVGExportMixin]);\n\nclassRegistry.setClass(FabricObject);\nclassRegistry.setClass(FabricObject, 'object');\n\nexport { cacheProperties } from './defaultValues';\n","/**\n * Returns true if context has transparent pixel\n * at specified location (taking tolerance into account)\n * @param {CanvasRenderingContext2D} ctx context\n * @param {Number} x x coordinate in canvasElementCoordinate, not fabric space. integer\n * @param {Number} y y coordinate in canvasElementCoordinate, not fabric space. integer\n * @param {Number} tolerance Tolerance pixels around the point, not alpha tolerance, integer\n * @return {boolean} true if transparent\n */\nexport const isTransparent = (\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  tolerance: number,\n): boolean => {\n  tolerance = Math.round(tolerance);\n  const size = tolerance * 2 + 1;\n  const { data } = ctx.getImageData(x - tolerance, y - tolerance, size, size);\n\n  // Split image data - for tolerance > 1, pixelDataSize = 4;\n  for (let i = 3; i < data.length; i += 4) {\n    const alphaChannel = data[i];\n    if (alphaChannel > 0) {\n      return false;\n    }\n  }\n  return true;\n};\n","import type { XY } from '../../../Point';\nimport { Point } from '../../../Point';\nimport { degreesToRadians } from '../radiansDegreesConversion';\nimport { createVector } from '../vectors';\nimport type { TProjectStrokeOnPointsOptions, TProjection } from './types';\n\n/**\n * @see https://github.com/fabricjs/fabric.js/pull/8344\n * @todo consider removing skewing from points before calculating stroke projection,\n * see https://github.com/fabricjs/fabric.js/commit/494a10ee2f8c2278ae9a55b20bf50cf6ee25b064#commitcomment-94751537\n */\nexport abstract class StrokeProjectionsBase {\n  declare options: TProjectStrokeOnPointsOptions;\n  declare scale: Point;\n  declare strokeUniformScalar: Point;\n  declare strokeProjectionMagnitude: number;\n\n  constructor(options: TProjectStrokeOnPointsOptions) {\n    this.options = options;\n    this.strokeProjectionMagnitude = this.options.strokeWidth / 2;\n    this.scale = new Point(this.options.scaleX, this.options.scaleY);\n    this.strokeUniformScalar = this.options.strokeUniform\n      ? new Point(1 / this.options.scaleX, 1 / this.options.scaleY)\n      : new Point(1, 1);\n  }\n\n  /**\n   * When the stroke is uniform, scaling affects the arrangement of points. So we must take it into account.\n   */\n  protected createSideVector(from: XY, to: XY) {\n    const v = createVector(from, to);\n    return this.options.strokeUniform ? v.multiply(this.scale) : v;\n  }\n\n  protected abstract calcOrthogonalProjection(\n    from: Point,\n    to: Point,\n    magnitude?: number,\n  ): Point;\n\n  protected projectOrthogonally(from: Point, to: Point, magnitude?: number) {\n    return this.applySkew(\n      from.add(this.calcOrthogonalProjection(from, to, magnitude)),\n    );\n  }\n\n  protected isSkewed() {\n    return this.options.skewX !== 0 || this.options.skewY !== 0;\n  }\n\n  protected applySkew(point: Point) {\n    const p = new Point(point);\n    // skewY must be applied before skewX as this distortion affects skewX calculation\n    p.y += p.x * Math.tan(degreesToRadians(this.options.skewY));\n    p.x += p.y * Math.tan(degreesToRadians(this.options.skewX));\n    return p;\n  }\n\n  protected scaleUnitVector(unitVector: Point, scalar: number) {\n    return unitVector.multiply(this.strokeUniformScalar).scalarMultiply(scalar);\n  }\n\n  protected abstract projectPoints(): Point[];\n\n  public abstract project(): TProjection[];\n}\n","import type { XY } from '../../../Point';\nimport { Point } from '../../../Point';\nimport { halfPI, twoMathPi } from '../../../constants';\nimport type { TRadian } from '../../../typedefs';\nimport { degreesToRadians } from '../radiansDegreesConversion';\nimport {\n  calcAngleBetweenVectors,\n  calcVectorRotation,\n  crossProduct,\n  getOrthonormalVector,\n  getUnitVector,\n  isBetweenVectors,\n  magnitude,\n  rotateVector,\n} from '../vectors';\nimport { StrokeProjectionsBase } from './StrokeProjectionsBase';\nimport type { TProjection, TProjectStrokeOnPointsOptions } from './types';\n\nconst zeroVector = new Point();\n\n/**\n * class in charge of finding projections for each type of line join\n * @see {@link [Closed path projections at #8344](https://github.com/fabricjs/fabric.js/pull/8344#2-closed-path)}\n *\n * - MDN:\n *   - https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/lineJoin\n *   - https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin\n * - Spec: https://svgwg.org/svg2-draft/painting.html#StrokeLinejoinProperty\n * - Playground to understand how the line joins works: https://hypertolosana.github.io/efficient-webgl-stroking/index.html\n * - View the calculated projections for each of the control points: https://codesandbox.io/s/project-stroke-points-with-context-to-trace-b8jc4j?file=/src/index.js\n *\n */\nexport class StrokeLineJoinProjections extends StrokeProjectionsBase {\n  /**\n   * The point being projected (the angle ∠BAC)\n   */\n  declare A: Point;\n  /**\n   * The point before A\n   */\n  declare B: Point;\n  /**\n   * The point after A\n   */\n  declare C: Point;\n  /**\n   * The AB vector\n   */\n  AB: Point;\n  /**\n   * The AC vector\n   */\n  AC: Point;\n  /**\n   * The angle of A (∠BAC)\n   */\n  alpha: TRadian;\n  /**\n   * The bisector of A (∠BAC)\n   */\n  bisector: Point;\n\n  static getOrthogonalRotationFactor(vector1: Point, vector2?: Point) {\n    const angle = vector2\n      ? calcAngleBetweenVectors(vector1, vector2)\n      : calcVectorRotation(vector1);\n    return Math.abs(angle) < halfPI ? -1 : 1;\n  }\n\n  constructor(A: XY, B: XY, C: XY, options: TProjectStrokeOnPointsOptions) {\n    super(options);\n    this.A = new Point(A);\n    this.B = new Point(B);\n    this.C = new Point(C);\n    this.AB = this.createSideVector(this.A, this.B);\n    this.AC = this.createSideVector(this.A, this.C);\n    this.alpha = calcAngleBetweenVectors(this.AB, this.AC);\n    this.bisector = getUnitVector(\n      // if AC is also the zero vector nothing will be projected\n      // in that case the next point will handle the projection\n      rotateVector(this.AB.eq(zeroVector) ? this.AC : this.AB, this.alpha / 2),\n    );\n  }\n\n  calcOrthogonalProjection(\n    from: Point,\n    to: Point,\n    magnitude: number = this.strokeProjectionMagnitude,\n  ) {\n    const vector = this.createSideVector(from, to);\n    const orthogonalProjection = getOrthonormalVector(vector);\n    const correctSide = StrokeLineJoinProjections.getOrthogonalRotationFactor(\n      orthogonalProjection,\n      this.bisector,\n    );\n    return this.scaleUnitVector(orthogonalProjection, magnitude * correctSide);\n  }\n\n  /**\n   * BEVEL\n   * Calculation: the projection points are formed by the vector orthogonal to the vertex.\n   *\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#2-2-bevel\n   */\n  projectBevel() {\n    const projections: Point[] = [];\n    // if `alpha` equals 0 or 2*PI, the projections are the same for `B` and `C`\n    (this.alpha % twoMathPi === 0 ? [this.B] : [this.B, this.C]).forEach(\n      (to) => {\n        projections.push(this.projectOrthogonally(this.A, to));\n        projections.push(\n          this.projectOrthogonally(this.A, to, -this.strokeProjectionMagnitude),\n        );\n      },\n    );\n    return projections;\n  }\n\n  /**\n   * MITER\n   * Calculation: the corner is formed by extending the outer edges of the stroke\n   * at the tangents of the path segments until they intersect.\n   *\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#2-1-miter\n   */\n  projectMiter() {\n    const projections: Point[] = [],\n      alpha = Math.abs(this.alpha),\n      hypotUnitScalar = 1 / Math.sin(alpha / 2),\n      miterVector = this.scaleUnitVector(\n        this.bisector,\n        -this.strokeProjectionMagnitude * hypotUnitScalar,\n      );\n\n    // When two line segments meet at a sharp angle, it is possible for the join to extend,\n    // far beyond the thickness of the line stroking the path. The stroke-miterlimit imposes\n    // a limit on the extent of the line join.\n    // MDN: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit\n    // When the stroke is uniform, scaling changes the arrangement of points, this changes the miter-limit\n    const strokeMiterLimit = this.options.strokeUniform\n      ? magnitude(\n          this.scaleUnitVector(this.bisector, this.options.strokeMiterLimit),\n        )\n      : this.options.strokeMiterLimit;\n\n    if (\n      magnitude(miterVector) / this.strokeProjectionMagnitude <=\n      strokeMiterLimit\n    ) {\n      projections.push(this.applySkew(this.A.add(miterVector)));\n    }\n    /* when the miter-limit is reached, the stroke line join becomes of type bevel.\n      We always need two orthogonal projections which are basically bevel-type projections,\n      so regardless of whether the miter-limit was reached or not, we include these projections.\n    */\n    projections.push(...this.projectBevel());\n\n    return projections;\n  }\n\n  /**\n   * ROUND (without skew)\n   * Calculation: the projections are the two vectors parallel to X and Y axes\n   *\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#2-3-1-round-without-skew\n   */\n  private projectRoundNoSkew(startCircle: Point, endCircle: Point) {\n    const projections: Point[] = [],\n      // correctSide is used to only consider projecting for the outer side\n      correctSide = new Point(\n        StrokeLineJoinProjections.getOrthogonalRotationFactor(this.bisector),\n        StrokeLineJoinProjections.getOrthogonalRotationFactor(\n          new Point(this.bisector.y, this.bisector.x),\n        ),\n      ),\n      radiusOnAxisX = new Point(1, 0)\n        .scalarMultiply(this.strokeProjectionMagnitude)\n        .multiply(this.strokeUniformScalar)\n        .multiply(correctSide),\n      radiusOnAxisY = new Point(0, 1)\n        .scalarMultiply(this.strokeProjectionMagnitude)\n        .multiply(this.strokeUniformScalar)\n        .multiply(correctSide);\n\n    [radiusOnAxisX, radiusOnAxisY].forEach((vector) => {\n      if (isBetweenVectors(vector, startCircle, endCircle)) {\n        projections.push(this.A.add(vector));\n      }\n    });\n    return projections;\n  }\n\n  /**\n   * ROUND (with skew)\n   * Calculation: the projections are the points furthest from the vertex in\n   * the direction of the X and Y axes after distortion.\n   *\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#2-3-2-round-skew\n   */\n  private projectRoundWithSkew(startCircle: Point, endCircle: Point) {\n    const projections: Point[] = [];\n\n    const { skewX, skewY, scaleX, scaleY, strokeUniform } = this.options,\n      shearing = new Point(\n        Math.tan(degreesToRadians(skewX)),\n        Math.tan(degreesToRadians(skewY)),\n      );\n    // The points furthest from the vertex in the direction of the X and Y axes after distortion\n    const circleRadius = this.strokeProjectionMagnitude,\n      newY = strokeUniform\n        ? circleRadius /\n          scaleY /\n          Math.sqrt(1 / scaleY ** 2 + (1 / scaleX ** 2) * shearing.y ** 2)\n        : circleRadius / Math.sqrt(1 + shearing.y ** 2),\n      furthestY = new Point(\n        // Safe guard due to floating point precision. In some situations the square root\n        // was returning NaN because of a negative number close to zero.\n        Math.sqrt(Math.max(circleRadius ** 2 - newY ** 2, 0)),\n        newY,\n      ),\n      newX = strokeUniform\n        ? circleRadius /\n          Math.sqrt(\n            1 +\n              (shearing.x ** 2 * (1 / scaleY) ** 2) /\n                (1 / scaleX + (1 / scaleX) * shearing.x * shearing.y) ** 2,\n          )\n        : circleRadius /\n          Math.sqrt(1 + shearing.x ** 2 / (1 + shearing.x * shearing.y) ** 2),\n      furthestX = new Point(\n        newX,\n        Math.sqrt(Math.max(circleRadius ** 2 - newX ** 2, 0)),\n      );\n\n    [\n      furthestX,\n      furthestX.scalarMultiply(-1),\n      furthestY,\n      furthestY.scalarMultiply(-1),\n    ]\n      // We need to skew the vector here as this information is used to check if\n      // it is between the start and end of the circle segment\n      .map((vector) =>\n        this.applySkew(\n          strokeUniform ? vector.multiply(this.strokeUniformScalar) : vector,\n        ),\n      )\n      .forEach((vector) => {\n        if (isBetweenVectors(vector, startCircle, endCircle)) {\n          projections.push(this.applySkew(this.A).add(vector));\n        }\n      });\n\n    return projections;\n  }\n\n  projectRound() {\n    const projections: Point[] = [];\n    /* Include the start and end points of the circle segment, so that only\n      the projections contained within it are included */\n    // add the orthogonal projections (start and end points of circle segment)\n    projections.push(...this.projectBevel());\n    // let's determines which one of the orthogonal projection is the beginning and end of the circle segment.\n    // when `alpha` equals 0 or 2*PI, we have a straight line, so the way to find the start/end is different.\n    const isStraightLine = this.alpha % twoMathPi === 0,\n      // change the origin of the projections to point A\n      // so that the cross product calculation is correct\n      newOrigin = this.applySkew(this.A),\n      proj0 = projections[isStraightLine ? 0 : 2].subtract(newOrigin),\n      proj1 = projections[isStraightLine ? 1 : 0].subtract(newOrigin),\n      // when `isStraightLine` === true, we compare with the vector opposite AB, otherwise we compare with the bisector.\n      comparisonVector = isStraightLine\n        ? this.applySkew(this.AB.scalarMultiply(-1))\n        : this.applySkew(\n            this.bisector.multiply(this.strokeUniformScalar).scalarMultiply(-1),\n          ),\n      // the beginning of the circle segment is always to the right of the comparison vector (cross product > 0)\n      isProj0Start = crossProduct(proj0, comparisonVector) > 0,\n      startCircle = isProj0Start ? proj0 : proj1,\n      endCircle = isProj0Start ? proj1 : proj0;\n    if (!this.isSkewed()) {\n      projections.push(...this.projectRoundNoSkew(startCircle, endCircle));\n    } else {\n      projections.push(...this.projectRoundWithSkew(startCircle, endCircle));\n    }\n    return projections;\n  }\n\n  /**\n   * Project stroke width on points returning projections for each point as follows:\n   * - `miter`: 1 point corresponding to the outer boundary. If the miter limit is exceeded, it will be 2 points (becomes bevel)\n   * - `bevel`: 2 points corresponding to the bevel possible boundaries, orthogonal to the stroke.\n   * - `round`: same as `bevel` when it has no skew, with skew are 4 points.\n   */\n  protected projectPoints() {\n    switch (this.options.strokeLineJoin) {\n      case 'miter':\n        return this.projectMiter();\n      case 'round':\n        return this.projectRound();\n      default:\n        return this.projectBevel();\n    }\n  }\n\n  public project(): TProjection[] {\n    return this.projectPoints().map((point) => ({\n      originPoint: this.A,\n      projectedPoint: point,\n      angle: this.alpha,\n      bisector: this.bisector,\n    }));\n  }\n}\n","import type { XY } from '../../../Point';\nimport { Point } from '../../../Point';\nimport { getOrthonormalVector, getUnitVector } from '../vectors';\nimport { StrokeLineJoinProjections } from './StrokeLineJoinProjections';\nimport { StrokeProjectionsBase } from './StrokeProjectionsBase';\nimport type { TProjection, TProjectStrokeOnPointsOptions } from './types';\n\n/**\n * class in charge of finding projections for each type of line cap for start/end of an open path\n * @see {@link [Open path projections at #8344](https://github.com/fabricjs/fabric.js/pull/8344#1-open-path)}\n *\n * Reference:\n * - MDN:\n *   - https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/lineCap\n *   - https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap\n * - Spec: https://html.spec.whatwg.org/multipage/canvas.html#dom-context-2d-linecap-dev\n * - Playground to understand how the line joins works: https://hypertolosana.github.io/efficient-webgl-stroking/index.html\n * - View the calculated projections for each of the control points: https://codesandbox.io/s/project-stroke-points-with-context-to-trace-b8jc4j?file=/src/index.js\n */\nexport class StrokeLineCapProjections extends StrokeProjectionsBase {\n  /**\n   * edge point\n   */\n  declare A: Point;\n  /**\n   * point next to edge point\n   */\n  declare T: Point;\n\n  constructor(A: XY, T: XY, options: TProjectStrokeOnPointsOptions) {\n    super(options);\n    this.A = new Point(A);\n    this.T = new Point(T);\n  }\n\n  calcOrthogonalProjection(\n    from: Point,\n    to: Point,\n    magnitude: number = this.strokeProjectionMagnitude,\n  ) {\n    const vector = this.createSideVector(from, to);\n    return this.scaleUnitVector(getOrthonormalVector(vector), magnitude);\n  }\n\n  /**\n   * OPEN PATH START/END - Line cap: Butt\n   * Calculation: to find the projections, just find the points orthogonal to the stroke\n   *\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#1-1-butt\n   */\n  projectButt() {\n    return [\n      this.projectOrthogonally(this.A, this.T, this.strokeProjectionMagnitude),\n      this.projectOrthogonally(this.A, this.T, -this.strokeProjectionMagnitude),\n    ];\n  }\n\n  /**\n   * OPEN PATH START/END - Line cap: Round\n   * Calculation: same as stroke line join `round`\n   *\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#1-2-round\n   */\n  projectRound() {\n    const projections: Point[] = [];\n\n    if (!this.isSkewed() && this.A.eq(this.T)) {\n      /* 1 point case without `skew`\n        When `strokeUniform` is true, scaling has no effect.\n        So we divide by scale, to remove its effect.\n      */\n      const projection = new Point(1, 1)\n        .scalarMultiply(this.strokeProjectionMagnitude)\n        .multiply(this.strokeUniformScalar);\n      projections.push(\n        this.applySkew(this.A.add(projection)),\n        this.applySkew(this.A.subtract(projection)),\n      );\n    } else {\n      projections.push(\n        ...new StrokeLineJoinProjections(\n          this.A,\n          this.T,\n          this.T,\n          this.options,\n        ).projectRound(),\n      );\n    }\n\n    return projections;\n  }\n\n  /**\n   * OPEN PATH START/END - Line cap: Square\n   * Calculation: project a rectangle of points on the stroke in the opposite direction of the vector `AT`\n   *\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#1-3-square\n   */\n  projectSquare() {\n    const projections: Point[] = [];\n\n    if (this.A.eq(this.T)) {\n      /* 1 point case without `skew`\n        When `strokeUniform` is true, scaling has no effect.\n        So we divide by scale, to remove its effect.\n      */\n      const projection = new Point(1, 1)\n        .scalarMultiply(this.strokeProjectionMagnitude)\n        .multiply(this.strokeUniformScalar);\n      projections.push(this.A.add(projection), this.A.subtract(projection));\n    } else {\n      const orthogonalProjection = this.calcOrthogonalProjection(\n        this.A,\n        this.T,\n        this.strokeProjectionMagnitude,\n      );\n      const strokePointingOut = this.scaleUnitVector(\n        getUnitVector(this.createSideVector(this.A, this.T)),\n        -this.strokeProjectionMagnitude,\n      );\n      const projectedA = this.A.add(strokePointingOut);\n      projections.push(\n        projectedA.add(orthogonalProjection),\n        projectedA.subtract(orthogonalProjection),\n      );\n    }\n\n    return projections.map((p) => this.applySkew(p));\n  }\n\n  protected projectPoints() {\n    switch (this.options.strokeLineCap) {\n      case 'round':\n        return this.projectRound();\n      case 'square':\n        return this.projectSquare();\n      default:\n        return this.projectButt();\n    }\n  }\n\n  public project(): TProjection[] {\n    return this.projectPoints().map((point) => ({\n      originPoint: this.A,\n      projectedPoint: point,\n    }));\n  }\n}\n","import { Point, type XY } from '../../../Point';\nimport { findIndexRight } from '../../internals/findRight';\nimport { StrokeLineCapProjections } from './StrokeLineCapProjections';\nimport { StrokeLineJoinProjections } from './StrokeLineJoinProjections';\nimport type { TProjection, TProjectStrokeOnPointsOptions } from './types';\n\nexport * from './types';\n\n/**\n *\n * Used to calculate object's bounding box\n *\n * @see https://github.com/fabricjs/fabric.js/pull/8344\n *\n */\nexport const projectStrokeOnPoints = (\n  points: XY[],\n  options: TProjectStrokeOnPointsOptions,\n  openPath = false,\n): TProjection[] => {\n  const projections: TProjection[] = [];\n\n  if (points.length === 0) {\n    return projections;\n  }\n\n  // first we remove duplicate neighboring points\n  const reduced = points.reduce(\n    (reduced, point) => {\n      if (!reduced[reduced.length - 1].eq(point)) {\n        reduced.push(new Point(point));\n      }\n      return reduced;\n    },\n    [new Point(points[0])],\n  );\n\n  if (reduced.length === 1) {\n    openPath = true;\n  } else if (!openPath) {\n    // remove points from end in case they equal the first point\n    // in order to correctly project the first point\n    const start = reduced[0];\n    const index = findIndexRight(reduced, (point) => !point.eq(start));\n    reduced.splice(index + 1);\n  }\n\n  reduced.forEach((A, index, points) => {\n    let B: XY, C: XY;\n    if (index === 0) {\n      C = points[1];\n      B = openPath ? A : points[points.length - 1];\n    } else if (index === points.length - 1) {\n      B = points[index - 1];\n      C = openPath ? A : points[0];\n    } else {\n      B = points[index - 1];\n      C = points[index + 1];\n    }\n\n    if (openPath && points.length === 1) {\n      projections.push(\n        ...new StrokeLineCapProjections(A, A, options).project(),\n      );\n    } else if (openPath && (index === 0 || index === points.length - 1)) {\n      projections.push(\n        ...new StrokeLineCapProjections(\n          A,\n          index === 0 ? C : B,\n          options,\n        ).project(),\n      );\n    } else {\n      projections.push(\n        ...new StrokeLineJoinProjections(A, B, C, options).project(),\n      );\n    }\n  });\n\n  return projections;\n};\n","export const findIndexRight = <T>(\n  array: T[],\n  predicate: (value: T, index: number, array: T[]) => boolean,\n) => {\n  for (let index = array.length - 1; index >= 0; index--) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n};\n","import type { TextStyle } from '../../shapes/Text/StyledText';\n\nexport const cloneStyles = (style: TextStyle): TextStyle => {\n  const newObj: TextStyle = {};\n  Object.keys(style).forEach((key) => {\n    newObj[key] = {};\n    Object.keys(style[key]).forEach((keyInner) => {\n      newObj[key][keyInner] = { ...style[key][keyInner] };\n    });\n  });\n  return newObj;\n};\n","/**\n * Capitalizes a string\n * @param {String} string String to capitalize\n * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\n * and other letters stay untouched, if false first letter is capitalized\n * and other letters are converted to lowercase.\n * @return {String} Capitalized version of a string\n */\nexport const capitalize = (string: string, firstLetterOnly = false): string =>\n  `${string.charAt(0).toUpperCase()}${\n    firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase()\n  }`;\n\n/**\n * Escapes XML in a string\n * @param {String} string String to escape\n * @return {String} Escaped version of a string\n */\nexport const escapeXml = (string: string): string =>\n  string\n    .replace(/&/g, '&amp;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&apos;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;');\n\n/**\n * Divide a string in the user perceived single units\n * @param {String} textstring String to escape\n * @return {Array} array containing the graphemes\n */\nexport const graphemeSplit = (textstring: string): string[] => {\n  const graphemes = [];\n  for (let i = 0, chr; i < textstring.length; i++) {\n    if ((chr = getWholeChar(textstring, i)) === false) {\n      continue;\n    }\n    graphemes.push(chr as string);\n  }\n  return graphemes;\n};\n\n// taken from mdn in the charAt doc page.\nconst getWholeChar = (str: string, i: number): string | boolean => {\n  const code = str.charCodeAt(i);\n  if (isNaN(code)) {\n    return ''; // Position not found\n  }\n  if (code < 0xd800 || code > 0xdfff) {\n    return str.charAt(i);\n  }\n\n  // High surrogate (could change last hex to 0xDB7F to treat high private\n  // surrogates as single characters)\n  if (0xd800 <= code && code <= 0xdbff) {\n    if (str.length <= i + 1) {\n      throw 'High surrogate without following low surrogate';\n    }\n    const next = str.charCodeAt(i + 1);\n    if (0xdc00 > next || next > 0xdfff) {\n      throw 'High surrogate without following low surrogate';\n    }\n    return str.charAt(i) + str.charAt(i + 1);\n  }\n  // Low surrogate (0xDC00 <= code && code <= 0xDFFF)\n  if (i === 0) {\n    throw 'Low surrogate without preceding high surrogate';\n  }\n  const prev = str.charCodeAt(i - 1);\n\n  // (could change last hex to 0xDB7F to treat high private\n  // surrogates as single characters)\n  if (0xd800 > prev || prev > 0xdbff) {\n    throw 'Low surrogate without preceding high surrogate';\n  }\n  // We can pass over low surrogates now as the second component\n  // in a pair which we have already processed\n  return false;\n};\n","import { reNewline } from '../../constants';\nimport type {\n  TextStyle,\n  TextStyleDeclaration,\n} from '../../shapes/Text/StyledText';\nimport { cloneStyles } from '../internals/cloneStyles';\nimport { graphemeSplit } from '../lang_string';\n\nexport type TextStyleArray = {\n  start: number;\n  end: number;\n  style: TextStyleDeclaration;\n}[];\n\n/**\n * @param {Object} prevStyle first style to compare\n * @param {Object} thisStyle second style to compare\n * @param {boolean} forTextSpans whether to check overline, underline, and line-through properties\n * @return {boolean} true if the style changed\n */\nexport const hasStyleChanged = (\n  prevStyle: TextStyleDeclaration,\n  thisStyle: TextStyleDeclaration,\n  forTextSpans = false,\n) =>\n  prevStyle.fill !== thisStyle.fill ||\n  prevStyle.stroke !== thisStyle.stroke ||\n  prevStyle.strokeWidth !== thisStyle.strokeWidth ||\n  prevStyle.fontSize !== thisStyle.fontSize ||\n  prevStyle.fontFamily !== thisStyle.fontFamily ||\n  prevStyle.fontWeight !== thisStyle.fontWeight ||\n  prevStyle.fontStyle !== thisStyle.fontStyle ||\n  prevStyle.textBackgroundColor !== thisStyle.textBackgroundColor ||\n  prevStyle.deltaY !== thisStyle.deltaY ||\n  (forTextSpans &&\n    (prevStyle.overline !== thisStyle.overline ||\n      prevStyle.underline !== thisStyle.underline ||\n      prevStyle.linethrough !== thisStyle.linethrough));\n\n/**\n * Returns the array form of a text object's inline styles property with styles grouped in ranges\n * rather than per character. This format is less verbose, and is better suited for storage\n * so it is used in serialization (not during runtime).\n * @param {object} styles per character styles for a text object\n * @param {String} text the text string that the styles are applied to\n * @return {{start: number, end: number, style: object}[]}\n */\nexport const stylesToArray = (\n  styles: TextStyle,\n  text: string,\n): TextStyleArray => {\n  const textLines = text.split('\\n'),\n    stylesArray = [];\n  let charIndex = -1,\n    prevStyle = {};\n  // clone style structure to prevent mutation\n  styles = cloneStyles(styles);\n\n  //loop through each textLine\n  for (let i = 0; i < textLines.length; i++) {\n    const chars = graphemeSplit(textLines[i]);\n    if (!styles[i]) {\n      //no styles exist for this line, so add the line's length to the charIndex total and reset prevStyle\n      charIndex += chars.length;\n      prevStyle = {};\n      continue;\n    }\n    //loop through each character of the current line\n    for (let c = 0; c < chars.length; c++) {\n      charIndex++;\n      const thisStyle = styles[i][c];\n      //check if style exists for this character\n      if (thisStyle && Object.keys(thisStyle).length > 0) {\n        if (hasStyleChanged(prevStyle, thisStyle, true)) {\n          stylesArray.push({\n            start: charIndex,\n            end: charIndex + 1,\n            style: thisStyle,\n          });\n        } else {\n          //if style is the same as previous character, increase end index\n          stylesArray[stylesArray.length - 1].end++;\n        }\n      }\n      prevStyle = thisStyle || {};\n    }\n  }\n  return stylesArray;\n};\n\n/**\n * Returns the object form of the styles property with styles that are assigned per\n * character rather than grouped by range. This format is more verbose, and is\n * only used during runtime (not for serialization/storage)\n * @param {Array} styles the serialized form of a text object's styles\n * @param {String} text the text string that the styles are applied to\n * @return {Object}\n */\nexport const stylesFromArray = (\n  styles: TextStyleArray | TextStyle,\n  text: string,\n): TextStyle => {\n  if (!Array.isArray(styles)) {\n    // clone to prevent mutation\n    return cloneStyles(styles);\n  }\n  const textLines = text.split(reNewline),\n    stylesObject: TextStyle = {};\n  let charIndex = -1,\n    styleIndex = 0;\n  //loop through each textLine\n  for (let i = 0; i < textLines.length; i++) {\n    const chars = graphemeSplit(textLines[i]);\n\n    //loop through each character of the current line\n    for (let c = 0; c < chars.length; c++) {\n      charIndex++;\n      //check if there's a style collection that includes the current character\n      if (\n        styles[styleIndex] &&\n        styles[styleIndex].start <= charIndex &&\n        charIndex < styles[styleIndex].end\n      ) {\n        //create object for line index if it doesn't exist\n        stylesObject[i] = stylesObject[i] || {};\n        //assign a style at this character's index\n        stylesObject[i][c] = { ...styles[styleIndex].style };\n        //if character is at the end of the current style collection, move to the next\n        if (charIndex === styles[styleIndex].end - 1) {\n          styleIndex++;\n        }\n      }\n    }\n  }\n  return stylesObject;\n};\n","import { FILL, STROKE } from '../constants';\n\n/**\n * Attributes parsed from all SVG elements\n * @type array\n */\nexport const SHARED_ATTRIBUTES = [\n  'display',\n  'transform',\n  FILL,\n  'fill-opacity',\n  'fill-rule',\n  'opacity',\n  STROKE,\n  'stroke-dasharray',\n  'stroke-linecap',\n  'stroke-dashoffset',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke-width',\n  'id',\n  'paint-order',\n  'vector-effect',\n  'instantiated_by_use',\n  'clip-path',\n];\n","export function selectorMatches(element: HTMLElement, selector: string) {\n  const nodeName = element.nodeName;\n  const classNames = element.getAttribute('class');\n  const id = element.getAttribute('id');\n  const azAz = '(?![a-zA-Z\\\\-]+)';\n  let matcher;\n  // i check if a selector matches slicing away part from it.\n  // if i get empty string i should match\n  matcher = new RegExp('^' + nodeName, 'i');\n  selector = selector.replace(matcher, '');\n  if (id && selector.length) {\n    matcher = new RegExp('#' + id + azAz, 'i');\n    selector = selector.replace(matcher, '');\n  }\n  if (classNames && selector.length) {\n    const splitClassNames = classNames.split(' ');\n    for (let i = splitClassNames.length; i--; ) {\n      matcher = new RegExp('\\\\.' + splitClassNames[i] + azAz, 'i');\n      selector = selector.replace(matcher, '');\n    }\n  }\n  return selector.length === 0;\n}\n","import { selectorMatches } from './selectorMatches';\nimport { doesSomeParentMatch } from './doesSomeParentMatch';\n\n/**\n * @private\n */\n\nexport function elementMatchesRule(element: HTMLElement, selectors: string[]) {\n  let parentMatching = true;\n  // start from rightmost selector.\n  const firstMatching = selectorMatches(element, selectors.pop()!);\n  if (firstMatching && selectors.length) {\n    parentMatching = doesSomeParentMatch(element, selectors);\n  }\n  return firstMatching && parentMatching && selectors.length === 0;\n}\n","import { selectorMatches } from './selectorMatches';\n\nexport function doesSomeParentMatch(element: HTMLElement, selectors: string[]) {\n  let selector: string,\n    parentMatching = true;\n  while (\n    element.parentElement &&\n    element.parentElement.nodeType === 1 &&\n    selectors.length\n  ) {\n    if (parentMatching) {\n      selector = selectors.pop()!;\n    }\n    element = element.parentElement;\n    parentMatching = selectorMatches(element, selector!);\n  }\n  return selectors.length === 0;\n}\n","import { attributesMap } from './constants';\n\nexport const normalizeAttr = (\n  attr: keyof typeof attributesMap | string,\n): string => attributesMap[attr as keyof typeof attributesMap] ?? attr;\n","import { reNum } from '../../parser/constants';\n\nconst regex = new RegExp(`(${reNum})`, 'gi');\n\nexport const cleanupSvgAttribute = (attributeValue: string) =>\n  attributeValue\n    .replace(regex, ' $1 ')\n    // replace annoying commas and arbitrary whitespace with single spaces\n    .replace(/,/gi, ' ')\n    .replace(/\\s+/gi, ' ');\n","import { ROTATE, SCALE, SKEW_X, SKEW_Y, iMatrix } from '../constants';\nimport { reNum } from './constants';\nimport type { TMat2D } from '../typedefs';\nimport { cleanupSvgAttribute } from '../util/internals/cleanupSvgAttribute';\nimport {\n  createRotateMatrix,\n  createScaleMatrix,\n  createSkewXMatrix,\n  createSkewYMatrix,\n  createTranslateMatrix,\n  multiplyTransformMatrixArray,\n} from '../util/misc/matrix';\n\n// == begin transform regexp\nconst p = `(${reNum})`;\nconst skewX = String.raw`(skewX)\\(${p}\\)`;\nconst skewY = String.raw`(skewY)\\(${p}\\)`;\nconst rotate = String.raw`(rotate)\\(${p}(?: ${p} ${p})?\\)`;\nconst scale = String.raw`(scale)\\(${p}(?: ${p})?\\)`;\nconst translate = String.raw`(translate)\\(${p}(?: ${p})?\\)`;\nconst matrix = String.raw`(matrix)\\(${p} ${p} ${p} ${p} ${p} ${p}\\)`;\nconst transform = `(?:${matrix}|${translate}|${rotate}|${scale}|${skewX}|${skewY})`;\nconst transforms = `(?:${transform}*)`;\nconst transformList = String.raw`^\\s*(?:${transforms}?)\\s*$`;\n// http://www.w3.org/TR/SVG/coords.html#TransformAttribute\nconst reTransformList = new RegExp(transformList);\nconst reTransform = new RegExp(transform);\nconst reTransformAll = new RegExp(transform, 'g');\n// == end transform regexp\n\n/**\n * Parses \"transform\" attribute, returning an array of values\n * @static\n * @function\n * @memberOf fabric\n * @param {String} attributeValue String containing attribute value\n * @return {TTransformMatrix} Array of 6 elements representing transformation matrix\n */\nexport function parseTransformAttribute(attributeValue: string): TMat2D {\n  // first we clean the string\n  attributeValue = cleanupSvgAttribute(attributeValue)\n    // remove spaces around front parentheses\n    .replace(/\\s*([()])\\s*/gi, '$1');\n\n  // start with identity matrix\n  const matrices: TMat2D[] = [];\n\n  // return if no argument was given or\n  // an argument does not match transform attribute regexp\n  if (\n    !attributeValue ||\n    (attributeValue && !reTransformList.test(attributeValue))\n  ) {\n    return [...iMatrix];\n  }\n\n  for (const match of attributeValue.matchAll(reTransformAll)) {\n    const transformMatch = reTransform.exec(match[0]);\n    if (!transformMatch) {\n      continue;\n    }\n    let matrix: TMat2D = iMatrix;\n    const matchedParams = transformMatch.filter((m) => !!m);\n    const [, operation, ...rawArgs] = matchedParams;\n    const [arg0, arg1, arg2, arg3, arg4, arg5] = rawArgs.map((arg) =>\n      parseFloat(arg),\n    );\n\n    switch (operation) {\n      case 'translate':\n        matrix = createTranslateMatrix(arg0, arg1);\n        break;\n      case ROTATE:\n        matrix = createRotateMatrix({ angle: arg0 }, { x: arg1, y: arg2 });\n        break;\n      case SCALE:\n        matrix = createScaleMatrix(arg0, arg1);\n        break;\n      case SKEW_X:\n        matrix = createSkewXMatrix(arg0);\n        break;\n      case SKEW_Y:\n        matrix = createSkewYMatrix(arg0);\n        break;\n      case 'matrix':\n        matrix = [arg0, arg1, arg2, arg3, arg4, arg5];\n        break;\n    }\n\n    // snapshot current matrix into matrices array\n    matrices.push(matrix);\n  }\n\n  return multiplyTransformMatrixArray(matrices);\n}\n","import { multiplyTransformMatrices } from '../util/misc/matrix';\nimport { parseUnit } from '../util/misc/svgParsing';\nimport { parseTransformAttribute } from './parseTransformAttribute';\nimport { CENTER, LEFT, RIGHT, NONE, FILL, STROKE } from '../constants';\n\nexport function normalizeValue(\n  attr: string,\n  value: any,\n  parentAttributes: Record<string, any>,\n  fontSize: number,\n): string | null | boolean | number[] | number {\n  const isArray = Array.isArray(value);\n  let parsed: number | number[];\n  let ouputValue: string | null | boolean | number[] | number = value;\n  if ((attr === FILL || attr === STROKE) && value === NONE) {\n    ouputValue = '';\n  } else if (attr === 'strokeUniform') {\n    return value === 'non-scaling-stroke';\n  } else if (attr === 'strokeDashArray') {\n    if (value === NONE) {\n      ouputValue = null;\n    } else {\n      ouputValue = value.replace(/,/g, ' ').split(/\\s+/).map(parseFloat);\n    }\n  } else if (attr === 'transformMatrix') {\n    if (parentAttributes && parentAttributes.transformMatrix) {\n      ouputValue = multiplyTransformMatrices(\n        parentAttributes.transformMatrix,\n        parseTransformAttribute(value),\n      );\n    } else {\n      ouputValue = parseTransformAttribute(value);\n    }\n  } else if (attr === 'visible') {\n    ouputValue = value !== NONE && value !== 'hidden';\n    // display=none on parent element always takes precedence over child element\n    if (parentAttributes && parentAttributes.visible === false) {\n      ouputValue = false;\n    }\n  } else if (attr === 'opacity') {\n    ouputValue = parseFloat(value);\n    if (parentAttributes && typeof parentAttributes.opacity !== 'undefined') {\n      ouputValue *= parentAttributes.opacity as number;\n    }\n  } else if (attr === 'textAnchor' /* text-anchor */) {\n    ouputValue = value === 'start' ? LEFT : value === 'end' ? RIGHT : CENTER;\n  } else if (attr === 'charSpacing') {\n    // parseUnit returns px and we convert it to em\n    parsed = (parseUnit(value, fontSize) / fontSize) * 1000;\n  } else if (attr === 'paintFirst') {\n    const fillIndex = value.indexOf(FILL);\n    const strokeIndex = value.indexOf(STROKE);\n    ouputValue = FILL;\n    if (fillIndex > -1 && strokeIndex > -1 && strokeIndex < fillIndex) {\n      ouputValue = STROKE;\n    } else if (fillIndex === -1 && strokeIndex > -1) {\n      ouputValue = STROKE;\n    }\n  } else if (\n    attr === 'href' ||\n    attr === 'xlink:href' ||\n    attr === 'font' ||\n    attr === 'id'\n  ) {\n    return value;\n  } else if (attr === 'imageSmoothing') {\n    return value === 'optimizeQuality';\n  } else {\n    parsed = isArray\n      ? (value as string[]).map(parseUnit)\n      : parseUnit(value, fontSize);\n  }\n\n  return !isArray && isNaN(parsed! as number) ? ouputValue : parsed!;\n}\n","import { parseUnit } from '../util/misc/svgParsing';\nimport { reFontDeclaration } from './constants';\n\n/**\n * Parses a short font declaration, building adding its properties to a style object\n * @static\n * @function\n * @memberOf fabric\n * @param {String} value font declaration\n * @param {Object} oStyle definition\n */\nexport function parseFontDeclaration(\n  value: string,\n  oStyle: Record<string, any>,\n): void {\n  const match = value.match(reFontDeclaration);\n\n  if (!match) {\n    return;\n  }\n  const fontStyle = match[1],\n    // font variant is not used\n    // fontVariant = match[2],\n    fontWeight = match[3],\n    fontSize = match[4],\n    lineHeight = match[5],\n    fontFamily = match[6];\n\n  if (fontStyle) {\n    oStyle.fontStyle = fontStyle;\n  }\n  if (fontWeight) {\n    oStyle.fontWeight = isNaN(parseFloat(fontWeight))\n      ? fontWeight\n      : parseFloat(fontWeight);\n  }\n  if (fontSize) {\n    oStyle.fontSize = parseUnit(fontSize);\n  }\n  if (fontFamily) {\n    oStyle.fontFamily = fontFamily;\n  }\n  if (lineHeight) {\n    oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\n  }\n}\n","/**\n * Takes a style string and parses it in one that has only defined values\n * and lowercases properties\n * @param style\n * @param oStyle\n */\nexport function parseStyleString(\n  style: string,\n  oStyle: Record<string, any>,\n): void {\n  style\n    .replace(/;\\s*$/, '')\n    .split(';')\n    .forEach((chunk) => {\n      if (!chunk) return;\n      const [attr, value] = chunk.split(':');\n      oStyle[attr.trim().toLowerCase()] = value.trim();\n    });\n}\n","import { parseStyleObject } from './parseStyleObject';\nimport { parseStyleString } from './parseStyleString';\n\n/**\n * Parses \"style\" attribute, retuning an object with values\n * @static\n * @memberOf fabric\n * @param {SVGElement} element Element to parse\n * @return {Object} Objects with values parsed from style attribute of an element\n */\nexport function parseStyleAttribute(element: HTMLElement): Record<string, any> {\n  const oStyle: Record<string, any> = {},\n    style = element.getAttribute('style');\n\n  if (!style) {\n    return oStyle;\n  }\n\n  if (typeof style === 'string') {\n    parseStyleString(style, oStyle);\n  } else {\n    parseStyleObject(style, oStyle);\n  }\n\n  return oStyle;\n}\n","/**\n * Takes a style object and parses it in one that has only defined values\n * and lowercases properties\n * @param style\n * @param oStyle\n */\nexport function parseStyleObject(\n  style: Record<string, any>,\n  oStyle: Record<string, any>,\n): void {\n  Object.entries(style).forEach(([prop, value]) => {\n    if (value === undefined) {\n      return;\n    }\n    oStyle[prop.toLowerCase()] = value;\n  });\n}\n","import { Color } from '../color/Color';\nimport { toFixed } from '../util/misc/toFixed';\nimport { FabricObject } from '../shapes/Object/FabricObject';\n\nconst colorAttributesMap = {\n  stroke: 'strokeOpacity',\n  fill: 'fillOpacity',\n};\n\n/**\n * @private\n * @param {Object} attributes Array of attributes to parse\n */\n\nexport function setStrokeFillOpacity(\n  attributes: Record<string, any>,\n): Record<string, any> {\n  const defaults = FabricObject.getDefaults();\n  Object.entries(colorAttributesMap).forEach(([attr, colorAttr]) => {\n    if (\n      typeof attributes[colorAttr] === 'undefined' ||\n      attributes[attr] === ''\n    ) {\n      return;\n    }\n    if (typeof attributes[attr] === 'undefined') {\n      if (!defaults[attr]) {\n        return;\n      }\n      attributes[attr] = defaults[attr];\n    }\n    if (attributes[attr].indexOf('url(') === 0) {\n      return;\n    }\n    const color = new Color(attributes[attr]);\n    attributes[attr] = color\n      .setAlpha(toFixed(color.getAlpha() * attributes[colorAttr], 2))\n      .toRgba();\n  });\n  return attributes;\n}\n","import { DEFAULT_SVG_FONT_SIZE } from '../constants';\nimport { parseUnit } from '../util/misc/svgParsing';\nimport { cPath, fSize, svgValidParentsRegEx } from './constants';\nimport { getGlobalStylesForElement } from './getGlobalStylesForElement';\nimport { normalizeAttr } from './normalizeAttr';\nimport { normalizeValue } from './normalizeValue';\nimport { parseFontDeclaration } from './parseFontDeclaration';\nimport { parseStyleAttribute } from './parseStyleAttribute';\nimport { setStrokeFillOpacity } from './setStrokeFillOpacity';\nimport type { CSSRules } from './typedefs';\n\n/**\n * Returns an object of attributes' name/value, given element and an array of attribute names;\n * Parses parent \"g\" nodes recursively upwards.\n * @param {SVGElement | HTMLElement} element Element to parse\n * @param {Array} attributes Array of attributes to parse\n * @return {Object} object containing parsed attributes' names/values\n */\nexport function parseAttributes(\n  element: HTMLElement | null,\n  attributes: string[],\n  cssRules?: CSSRules,\n): Record<string, any> {\n  if (!element) {\n    return {};\n  }\n\n  let parentAttributes: Record<string, string> = {},\n    fontSize: number,\n    parentFontSize = DEFAULT_SVG_FONT_SIZE;\n\n  // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\n  if (\n    element.parentNode &&\n    svgValidParentsRegEx.test(element.parentNode.nodeName)\n  ) {\n    parentAttributes = parseAttributes(\n      element.parentElement,\n      attributes,\n      cssRules,\n    );\n    if (parentAttributes.fontSize) {\n      fontSize = parentFontSize = parseUnit(parentAttributes.fontSize);\n    }\n  }\n\n  const ownAttributes: Record<string, string> = {\n    ...attributes.reduce<Record<string, string>>((memo, attr) => {\n      const value = element.getAttribute(attr);\n      if (value) {\n        memo[attr] = value;\n      }\n      return memo;\n    }, {}),\n    // add values parsed from style, which take precedence over attributes\n    // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\n    ...getGlobalStylesForElement(element, cssRules),\n    ...parseStyleAttribute(element),\n  };\n\n  if (ownAttributes[cPath]) {\n    element.setAttribute(cPath, ownAttributes[cPath]);\n  }\n  if (ownAttributes[fSize]) {\n    // looks like the minimum should be 9px when dealing with ems. this is what looks like in browsers.\n    fontSize = parseUnit(ownAttributes[fSize], parentFontSize);\n    ownAttributes[fSize] = `${fontSize}`;\n  }\n\n  // this should have its own complex type\n  const normalizedStyle: Record<\n    string,\n    string | boolean | number | number[] | null\n  > = {};\n  for (const attr in ownAttributes) {\n    const normalizedAttr = normalizeAttr(attr);\n    const normalizedValue = normalizeValue(\n      normalizedAttr,\n      ownAttributes[attr],\n      parentAttributes,\n      fontSize!,\n    );\n    normalizedStyle[normalizedAttr] = normalizedValue;\n  }\n  if (normalizedStyle && normalizedStyle.font) {\n    parseFontDeclaration(normalizedStyle.font as string, normalizedStyle);\n  }\n  const mergedAttrs = { ...parentAttributes, ...normalizedStyle };\n  return svgValidParentsRegEx.test(element.nodeName)\n    ? mergedAttrs\n    : setStrokeFillOpacity(mergedAttrs);\n}\n","import { elementMatchesRule } from './elementMatchesRule';\nimport type { CSSRules } from './typedefs';\n\n/**\n * @private\n */\n\nexport function getGlobalStylesForElement(\n  element: HTMLElement,\n  cssRules: CSSRules = {},\n) {\n  let styles: Record<string, string> = {};\n  for (const rule in cssRules) {\n    if (elementMatchesRule(element, rule.split(' '))) {\n      styles = {\n        ...styles,\n        ...cssRules[rule],\n      };\n    }\n  }\n  return styles;\n}\n","import { kRect } from '../constants';\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport type { Abortable, TClassProperties, TOptions } from '../typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { ObjectEvents } from '../EventTypeDefs';\nimport type { CSSRules } from '../parser/typedefs';\n\nexport const rectDefaultValues: Partial<TClassProperties<Rect>> = {\n  rx: 0,\n  ry: 0,\n};\n\ninterface UniqueRectProps {\n  rx: number;\n  ry: number;\n}\n\nexport interface SerializedRectProps\n  extends SerializedObjectProps,\n    UniqueRectProps {}\n\nexport interface RectProps extends FabricObjectProps, UniqueRectProps {}\n\nconst RECT_PROPS = ['rx', 'ry'] as const;\n\nexport class Rect<\n    Props extends TOptions<RectProps> = Partial<RectProps>,\n    SProps extends SerializedRectProps = SerializedRectProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends FabricObject<Props, SProps, EventSpec>\n  implements RectProps\n{\n  /**\n   * Horizontal border radius\n   * @type Number\n   * @default\n   */\n  declare rx: number;\n\n  /**\n   * Vertical border radius\n   * @type Number\n   * @default\n   */\n  declare ry: number;\n\n  static type = 'Rect';\n\n  static cacheProperties = [...cacheProperties, ...RECT_PROPS];\n\n  static ownDefaults = rectDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...Rect.ownDefaults,\n    };\n  }\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  constructor(options?: Props) {\n    super();\n    Object.assign(this, Rect.ownDefaults);\n    this.setOptions(options);\n    this._initRxRy();\n  }\n  /**\n   * Initializes rx/ry attributes\n   * @private\n   */\n  _initRxRy() {\n    const { rx, ry } = this;\n    if (rx && !ry) {\n      this.ry = rx;\n    } else if (ry && !rx) {\n      this.rx = ry;\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    const { width: w, height: h } = this;\n    const x = -w / 2;\n    const y = -h / 2;\n    const rx = this.rx ? Math.min(this.rx, w / 2) : 0;\n    const ry = this.ry ? Math.min(this.ry, h / 2) : 0;\n    const isRounded = rx !== 0 || ry !== 0;\n\n    ctx.beginPath();\n\n    ctx.moveTo(x + rx, y);\n\n    ctx.lineTo(x + w - rx, y);\n    isRounded &&\n      ctx.bezierCurveTo(\n        x + w - kRect * rx,\n        y,\n        x + w,\n        y + kRect * ry,\n        x + w,\n        y + ry,\n      );\n\n    ctx.lineTo(x + w, y + h - ry);\n    isRounded &&\n      ctx.bezierCurveTo(\n        x + w,\n        y + h - kRect * ry,\n        x + w - kRect * rx,\n        y + h,\n        x + w - rx,\n        y + h,\n      );\n\n    ctx.lineTo(x + rx, y + h);\n    isRounded &&\n      ctx.bezierCurveTo(\n        x + kRect * rx,\n        y + h,\n        x,\n        y + h - kRect * ry,\n        x,\n        y + h - ry,\n      );\n\n    ctx.lineTo(x, y + ry);\n    isRounded &&\n      ctx.bezierCurveTo(x, y + kRect * ry, x + kRect * rx, y, x + rx, y);\n\n    ctx.closePath();\n\n    this._renderPaintInOrder(ctx);\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return super.toObject([...RECT_PROPS, ...propertiesToInclude]);\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG() {\n    const { width, height, rx, ry } = this;\n    return [\n      '<rect ',\n      'COMMON_PARTS',\n      `x=\"${-width / 2}\" y=\"${\n        -height / 2\n      }\" rx=\"${rx}\" ry=\"${ry}\" width=\"${width}\" height=\"${height}\" />\\n`,\n    ];\n  }\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `Rect.fromElement`)\n   * @static\n   * @memberOf Rect\n   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\n   */\n  static ATTRIBUTE_NAMES = [\n    ...SHARED_ATTRIBUTES,\n    'x',\n    'y',\n    'rx',\n    'ry',\n    'width',\n    'height',\n  ];\n\n  /* _FROM_SVG_START_ */\n\n  /**\n   * Returns {@link Rect} instance from an SVG element\n   * @static\n   * @memberOf Rect\n   * @param {HTMLElement} element Element to parse\n   * @param {Object} [options] Options object\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable,\n    cssRules?: CSSRules,\n  ) {\n    const {\n      left = 0,\n      top = 0,\n      width = 0,\n      height = 0,\n      visible = true,\n      ...restOfparsedAttributes\n    } = parseAttributes(element, this.ATTRIBUTE_NAMES, cssRules);\n\n    return new this({\n      ...options,\n      ...restOfparsedAttributes,\n      left,\n      top,\n      width,\n      height,\n      visible: Boolean(visible && width && height),\n    });\n  }\n\n  /* _FROM_SVG_END_ */\n}\n\nclassRegistry.setClass(Rect);\nclassRegistry.setSVGClass(Rect);\n","export const LAYOUT_TYPE_INITIALIZATION = 'initialization';\nexport const LAYOUT_TYPE_ADDED = 'added';\nexport const LAYOUT_TYPE_REMOVED = 'removed';\nexport const LAYOUT_TYPE_IMPERATIVE = 'imperative';\nexport const LAYOUT_TYPE_OBJECT_MODIFIED = 'object_modified';\nexport const LAYOUT_TYPE_OBJECT_MODIFYING = 'object_modifying';\n","import { Point, ZERO } from '../../Point';\nimport type { Group } from '../../shapes/Group';\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\nimport { multiplyTransformMatrixArray } from '../../util/misc/matrix';\nimport { sizeAfterTransform } from '../../util/misc/objectTransforms';\nimport {\n  calcPlaneChangeMatrix,\n  sendVectorToPlane,\n} from '../../util/misc/planeChange';\n\n/**\n * @returns 2 points, the tl and br corners of the non rotated bounding box of an object\n * in the {@link group} plane, taking into account objects that {@link group} is their parent\n * but also belong to the active selection.\n */\nexport const getObjectBounds = (\n  destinationGroup: Group,\n  object: FabricObject,\n): Point[] => {\n  const {\n    strokeUniform,\n    strokeWidth,\n    width,\n    height,\n    group: currentGroup,\n  } = object;\n  const t =\n    currentGroup && currentGroup !== destinationGroup\n      ? calcPlaneChangeMatrix(\n          currentGroup.calcTransformMatrix(),\n          destinationGroup.calcTransformMatrix(),\n        )\n      : null;\n  const objectCenter = t\n    ? object.getRelativeCenterPoint().transform(t)\n    : object.getRelativeCenterPoint();\n  const accountForStroke = !object['isStrokeAccountedForInDimensions']();\n  const strokeUniformVector =\n    strokeUniform && accountForStroke\n      ? sendVectorToPlane(\n          new Point(strokeWidth, strokeWidth),\n          undefined,\n          destinationGroup.calcTransformMatrix(),\n        )\n      : ZERO;\n  const scalingStrokeWidth =\n    !strokeUniform && accountForStroke ? strokeWidth : 0;\n  const sizeVector = sizeAfterTransform(\n    width + scalingStrokeWidth,\n    height + scalingStrokeWidth,\n    multiplyTransformMatrixArray([t, object.calcOwnMatrix()], true),\n  )\n    .add(strokeUniformVector)\n    .scalarDivide(2);\n  return [objectCenter.subtract(sizeVector), objectCenter.add(sizeVector)];\n};\n","import { Point } from '../../Point';\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\nimport { makeBoundingBoxFromPoints } from '../../util/misc/boundingBoxFromPoints';\nimport {\n  LAYOUT_TYPE_INITIALIZATION,\n  LAYOUT_TYPE_IMPERATIVE,\n} from '../constants';\nimport type {\n  InitializationLayoutContext,\n  LayoutStrategyResult,\n  StrictLayoutContext,\n} from '../types';\nimport { getObjectBounds } from './utils';\n\n/**\n * Exposes a main public method {@link calcLayoutResult} that is used by the `LayoutManager` to perform layout.\n * Returning `undefined` signals the `LayoutManager` to skip the layout.\n *\n * In charge of calculating the bounding box of the passed objects.\n */\nexport abstract class LayoutStrategy {\n  /**\n   * override by subclass for persistence (TS does not support `static abstract`)\n   */\n  static type = 'strategy';\n\n  /**\n   * Used by the `LayoutManager` to perform layout\n   * @TODO/fix: if this method is calcResult, should calc unconditionally.\n   * the condition to not calc should be evaluated by the layoutManager.\n   * @returns layout result **OR** `undefined` to skip layout\n   */\n  public calcLayoutResult(\n    context: StrictLayoutContext,\n    objects: FabricObject[],\n  ): LayoutStrategyResult | undefined {\n    if (this.shouldPerformLayout(context)) {\n      return this.calcBoundingBox(objects, context);\n    }\n  }\n\n  shouldPerformLayout({ type, prevStrategy, strategy }: StrictLayoutContext) {\n    return (\n      type === LAYOUT_TYPE_INITIALIZATION ||\n      type === LAYOUT_TYPE_IMPERATIVE ||\n      (!!prevStrategy && strategy !== prevStrategy)\n    );\n  }\n\n  shouldLayoutClipPath({ type, target: { clipPath } }: StrictLayoutContext) {\n    return (\n      type !== LAYOUT_TYPE_INITIALIZATION &&\n      clipPath &&\n      !clipPath.absolutePositioned\n    );\n  }\n\n  getInitialSize(\n    context: StrictLayoutContext & InitializationLayoutContext,\n    result: Pick<LayoutStrategyResult, 'center' | 'size'>,\n  ) {\n    return result.size;\n  }\n\n  /**\n   * Override this method to customize layout.\n   */\n  calcBoundingBox(\n    objects: FabricObject[],\n    context: StrictLayoutContext,\n  ): LayoutStrategyResult | undefined {\n    const { type, target } = context;\n    if (type === LAYOUT_TYPE_IMPERATIVE && context.overrides) {\n      return context.overrides;\n    }\n    if (objects.length === 0) {\n      return;\n    }\n    const { left, top, width, height } = makeBoundingBoxFromPoints(\n      objects\n        .map((object) => getObjectBounds(target, object))\n        .reduce<Point[]>((coords, curr) => coords.concat(curr), []),\n    );\n    const bboxSize = new Point(width, height);\n    const bboxLeftTop = new Point(left, top);\n    const bboxCenter = bboxLeftTop.add(bboxSize.scalarDivide(2));\n\n    if (type === LAYOUT_TYPE_INITIALIZATION) {\n      const actualSize = this.getInitialSize(context, {\n        size: bboxSize,\n        center: bboxCenter,\n      });\n      return {\n        // in `initialization` we do not account for target's transformation matrix\n        center: bboxCenter,\n        // TODO: investigate if this is still necessary\n        relativeCorrection: new Point(0, 0),\n        size: actualSize,\n      };\n    } else {\n      //  we send `relativeCenter` up to group's containing plane\n      const center = bboxCenter.transform(target.calcOwnMatrix());\n      return {\n        center,\n        size: bboxSize,\n      };\n    }\n  }\n}\n","import type { StrictLayoutContext } from '../types';\nimport { LayoutStrategy } from './LayoutStrategy';\nimport { classRegistry } from '../../ClassRegistry';\n\n/**\n * Layout will adjust the bounding box to fit target's objects.\n */\nexport class FitContentLayout extends LayoutStrategy {\n  static readonly type = 'fit-content';\n\n  /**\n   * @override layout on all triggers\n   * Override at will\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  shouldPerformLayout(context: StrictLayoutContext) {\n    return true;\n  }\n}\n\nclassRegistry.setClass(FitContentLayout);\n","import { Point } from '../Point';\nimport {\n  CENTER,\n  CHANGED,\n  MODIFIED,\n  MODIFY_PATH,\n  MODIFY_POLY,\n  MOVING,\n  RESIZING,\n  ROTATING,\n  SCALING,\n  SKEWING,\n  iMatrix,\n} from '../constants';\nimport type { Group } from '../shapes/Group';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport { invertTransform } from '../util/misc/matrix';\nimport { resolveOrigin } from '../util/misc/resolveOrigin';\nimport { FitContentLayout } from './LayoutStrategies/FitContentLayout';\nimport type { LayoutStrategy } from './LayoutStrategies/LayoutStrategy';\nimport {\n  LAYOUT_TYPE_INITIALIZATION,\n  LAYOUT_TYPE_ADDED,\n  LAYOUT_TYPE_REMOVED,\n  LAYOUT_TYPE_IMPERATIVE,\n  LAYOUT_TYPE_OBJECT_MODIFIED,\n  LAYOUT_TYPE_OBJECT_MODIFYING,\n} from './constants';\nimport type {\n  LayoutContext,\n  LayoutResult,\n  RegistrationContext,\n  StrictLayoutContext,\n} from './types';\nimport { classRegistry } from '../ClassRegistry';\nimport type { TModificationEvents } from '../EventTypeDefs';\n\nconst LAYOUT_MANAGER = 'layoutManager';\n\nexport type SerializedLayoutManager = {\n  type: string;\n  strategy: string;\n};\n\nexport class LayoutManager {\n  private declare _prevLayoutStrategy?: LayoutStrategy;\n  protected declare _subscriptions: Map<FabricObject, VoidFunction[]>;\n\n  strategy: LayoutStrategy;\n\n  constructor(strategy: LayoutStrategy = new FitContentLayout()) {\n    this.strategy = strategy;\n    this._subscriptions = new Map();\n  }\n\n  public performLayout(context: LayoutContext) {\n    const strictContext: StrictLayoutContext = {\n      bubbles: true,\n      strategy: this.strategy,\n      ...context,\n      prevStrategy: this._prevLayoutStrategy,\n      stopPropagation() {\n        this.bubbles = false;\n      },\n    };\n\n    this.onBeforeLayout(strictContext);\n\n    const layoutResult = this.getLayoutResult(strictContext);\n    if (layoutResult) {\n      this.commitLayout(strictContext, layoutResult);\n    }\n\n    this.onAfterLayout(strictContext, layoutResult);\n    this._prevLayoutStrategy = strictContext.strategy;\n  }\n\n  /**\n   * Attach handlers for events that we know will invalidate the layout when\n   * performed on child objects ( general transforms ).\n   * Returns the disposers for later unsubscribing and cleanup\n   * @param {FabricObject} object\n   * @param {RegistrationContext & Partial<StrictLayoutContext>} context\n   * @returns {VoidFunction[]} disposers remove the handlers\n   */\n  protected attachHandlers(\n    object: FabricObject,\n    context: RegistrationContext & Partial<StrictLayoutContext>,\n  ): VoidFunction[] {\n    const { target } = context;\n    return (\n      [\n        MODIFIED,\n        MOVING,\n        RESIZING,\n        ROTATING,\n        SCALING,\n        SKEWING,\n        CHANGED,\n        MODIFY_POLY,\n        MODIFY_PATH,\n      ] as (TModificationEvents & 'modified')[]\n    ).map((key) =>\n      object.on(key, (e) =>\n        this.performLayout(\n          key === MODIFIED\n            ? {\n                type: LAYOUT_TYPE_OBJECT_MODIFIED,\n                trigger: key,\n                e,\n                target,\n              }\n            : {\n                type: LAYOUT_TYPE_OBJECT_MODIFYING,\n                trigger: key,\n                e,\n                target,\n              },\n        ),\n      ),\n    );\n  }\n\n  /**\n   * Subscribe an object to transform events that will trigger a layout change on the parent\n   * This is important only for interactive groups.\n   * @param object\n   * @param context\n   */\n  protected subscribe(\n    object: FabricObject,\n    context: RegistrationContext & Partial<StrictLayoutContext>,\n  ) {\n    this.unsubscribe(object, context);\n    const disposers = this.attachHandlers(object, context);\n    this._subscriptions.set(object, disposers);\n  }\n\n  /**\n   * unsubscribe object layout triggers\n   */\n  protected unsubscribe(\n    object: FabricObject,\n    _context?: RegistrationContext & Partial<StrictLayoutContext>,\n  ) {\n    (this._subscriptions.get(object) || []).forEach((d) => d());\n    this._subscriptions.delete(object);\n  }\n\n  unsubscribeTargets(\n    context: RegistrationContext & Partial<StrictLayoutContext>,\n  ) {\n    context.targets.forEach((object) => this.unsubscribe(object, context));\n  }\n\n  subscribeTargets(\n    context: RegistrationContext & Partial<StrictLayoutContext>,\n  ) {\n    context.targets.forEach((object) => this.subscribe(object, context));\n  }\n\n  protected onBeforeLayout(context: StrictLayoutContext) {\n    const { target, type } = context;\n    const { canvas } = target;\n    // handle layout triggers subscription\n    // @TODO: gate the registration when the group is interactive\n    if (type === LAYOUT_TYPE_INITIALIZATION || type === LAYOUT_TYPE_ADDED) {\n      this.subscribeTargets(context);\n    } else if (type === LAYOUT_TYPE_REMOVED) {\n      this.unsubscribeTargets(context);\n    }\n    // fire layout event (event will fire only for layouts after initialization layout)\n    target.fire('layout:before', {\n      context,\n    });\n    canvas &&\n      canvas.fire('object:layout:before', {\n        target,\n        context,\n      });\n\n    if (type === LAYOUT_TYPE_IMPERATIVE && context.deep) {\n      const { strategy: _, ...tricklingContext } = context;\n      // traverse the tree\n      target.forEachObject(\n        (object) =>\n          (object as Group).layoutManager &&\n          (object as Group).layoutManager.performLayout({\n            ...tricklingContext,\n            bubbles: false,\n            target: object as Group,\n          }),\n      );\n    }\n  }\n\n  protected getLayoutResult(\n    context: StrictLayoutContext,\n  ): Required<LayoutResult> | undefined {\n    const { target, strategy, type } = context;\n\n    const result = strategy.calcLayoutResult(context, target.getObjects());\n\n    if (!result) {\n      return;\n    }\n\n    const prevCenter =\n      type === LAYOUT_TYPE_INITIALIZATION\n        ? new Point()\n        : target.getRelativeCenterPoint();\n\n    const {\n      center: nextCenter,\n      correction = new Point(),\n      relativeCorrection = new Point(),\n    } = result;\n    const offset = prevCenter\n      .subtract(nextCenter)\n      .add(correction)\n      .transform(\n        // in `initialization` we do not account for target's transformation matrix\n        type === LAYOUT_TYPE_INITIALIZATION\n          ? iMatrix\n          : invertTransform(target.calcOwnMatrix()),\n        true,\n      )\n      .add(relativeCorrection);\n\n    return {\n      result,\n      prevCenter,\n      nextCenter,\n      offset,\n    };\n  }\n\n  protected commitLayout(\n    context: StrictLayoutContext,\n    layoutResult: Required<LayoutResult>,\n  ) {\n    const { target } = context;\n    const {\n      result: { size },\n      nextCenter,\n    } = layoutResult;\n    // set dimensions\n    target.set({ width: size.x, height: size.y });\n    // layout descendants\n    this.layoutObjects(context, layoutResult);\n    //  set position\n    // in `initialization` we do not account for target's transformation matrix\n    if (context.type === LAYOUT_TYPE_INITIALIZATION) {\n      // TODO: what about strokeWidth?\n      target.set({\n        left:\n          context.x ?? nextCenter.x + size.x * resolveOrigin(target.originX),\n        top: context.y ?? nextCenter.y + size.y * resolveOrigin(target.originY),\n      });\n    } else {\n      target.setPositionByOrigin(nextCenter, CENTER, CENTER);\n      // invalidate\n      target.setCoords();\n      target.set('dirty', true);\n    }\n  }\n\n  protected layoutObjects(\n    context: StrictLayoutContext,\n    layoutResult: Required<LayoutResult>,\n  ) {\n    const { target } = context;\n    //  adjust objects to account for new center\n    target.forEachObject((object) => {\n      object.group === target &&\n        this.layoutObject(context, layoutResult, object);\n    });\n    // adjust clip path to account for new center\n    context.strategy.shouldLayoutClipPath(context) &&\n      this.layoutObject(context, layoutResult, target.clipPath as FabricObject);\n  }\n\n  /**\n   * @param {FabricObject} object\n   * @param {Point} offset\n   */\n  protected layoutObject(\n    context: StrictLayoutContext,\n    { offset }: Required<LayoutResult>,\n    object: FabricObject,\n  ) {\n    // TODO: this is here for cache invalidation.\n    // verify if this is necessary since we have explicit\n    // cache invalidation at the end of commitLayout\n    object.set({\n      left: object.left + offset.x,\n      top: object.top + offset.y,\n    });\n  }\n\n  protected onAfterLayout(\n    context: StrictLayoutContext,\n    layoutResult?: LayoutResult,\n  ) {\n    const {\n      target,\n      strategy,\n      bubbles,\n      prevStrategy: _,\n      ...bubblingContext\n    } = context;\n    const { canvas } = target;\n\n    //  fire layout event (event will fire only for layouts after initialization layout)\n    target.fire('layout:after', {\n      context,\n      result: layoutResult,\n    });\n    canvas &&\n      canvas.fire('object:layout:after', {\n        context,\n        result: layoutResult,\n        target,\n      });\n\n    //  bubble\n    const parent = target.parent;\n    if (bubbles && parent?.layoutManager) {\n      //  add target to context#path\n      (bubblingContext.path || (bubblingContext.path = [])).push(target);\n      //  all parents should invalidate their layout\n      parent.layoutManager.performLayout({\n        ...bubblingContext,\n        target: parent,\n      });\n    }\n    target.set('dirty', true);\n  }\n\n  dispose() {\n    const { _subscriptions } = this;\n    _subscriptions.forEach((disposers) => disposers.forEach((d) => d()));\n    _subscriptions.clear();\n  }\n\n  toObject() {\n    return {\n      type: LAYOUT_MANAGER,\n      strategy: (this.strategy.constructor as typeof LayoutStrategy).type,\n    };\n  }\n\n  toJSON() {\n    return this.toObject();\n  }\n}\n\nclassRegistry.setClass(LayoutManager, LAYOUT_MANAGER);\n","import type { CollectionEvents, ObjectEvents } from '../EventTypeDefs';\nimport { createCollectionMixin } from '../Collection';\nimport type {\n  TClassProperties,\n  TSVGReviver,\n  TOptions,\n  Abortable,\n} from '../typedefs';\nimport {\n  invertTransform,\n  multiplyTransformMatrices,\n} from '../util/misc/matrix';\nimport {\n  enlivenObjectEnlivables,\n  enlivenObjects,\n} from '../util/misc/objectEnlive';\nimport { applyTransformToObject } from '../util/misc/objectTransforms';\nimport { FabricObject } from './Object/FabricObject';\nimport { Rect } from './Rect';\nimport { classRegistry } from '../ClassRegistry';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport { log } from '../util/internals/console';\nimport type {\n  ImperativeLayoutOptions,\n  LayoutBeforeEvent,\n  LayoutAfterEvent,\n} from '../LayoutManager/types';\nimport { LayoutManager } from '../LayoutManager/LayoutManager';\nimport {\n  LAYOUT_TYPE_ADDED,\n  LAYOUT_TYPE_IMPERATIVE,\n  LAYOUT_TYPE_INITIALIZATION,\n  LAYOUT_TYPE_REMOVED,\n} from '../LayoutManager/constants';\nimport type { SerializedLayoutManager } from '../LayoutManager/LayoutManager';\nimport type { FitContentLayout } from '../LayoutManager';\nimport type { DrawContext } from './Object/Object';\n\n/**\n * This class handles the specific case of creating a group using {@link Group#fromObject} and is not meant to be used in any other case.\n * We could have used a boolean in the constructor, as we did previously, but we think the boolean\n * would stay in the group's constructor interface and create confusion, therefore it was removed.\n * This layout manager doesn't do anything and therefore keeps the exact layout the group had when {@link Group#toObject} was called.\n */\nclass NoopLayoutManager extends LayoutManager {\n  performLayout() {}\n}\n\nexport interface GroupEvents extends ObjectEvents, CollectionEvents {\n  'layout:before': LayoutBeforeEvent;\n  'layout:after': LayoutAfterEvent;\n}\n\nexport interface GroupOwnProps {\n  subTargetCheck: boolean;\n  interactive: boolean;\n}\n\nexport interface SerializedGroupProps\n  extends SerializedObjectProps,\n    GroupOwnProps {\n  objects: SerializedObjectProps[];\n  layoutManager: SerializedLayoutManager;\n}\n\nexport interface GroupProps extends FabricObjectProps, GroupOwnProps {\n  layoutManager: LayoutManager;\n}\n\nexport const groupDefaultValues: Partial<TClassProperties<Group>> = {\n  strokeWidth: 0,\n  subTargetCheck: false,\n  interactive: false,\n};\n\n/**\n * @fires object:added\n * @fires object:removed\n * @fires layout:before\n * @fires layout:after\n */\nexport class Group\n  extends createCollectionMixin(\n    FabricObject<GroupProps, SerializedGroupProps, GroupEvents>,\n  )\n  implements GroupProps\n{\n  /**\n   * Used to optimize performance\n   * set to `false` if you don't need contained objects to be targets of events\n   * @default\n   * @type boolean\n   */\n  declare subTargetCheck: boolean;\n\n  /**\n   * Used to allow targeting of object inside groups.\n   * set to true if you want to select an object inside a group.\\\n   * **REQUIRES** `subTargetCheck` set to true\n   * This will be not removed but slowly replaced with a method setInteractive\n   * that will take care of enabling subTargetCheck and necessary object events.\n   * There is too much attached to group interactivity to just be evaluated by a\n   * boolean in the code\n   * @default\n   * @deprecated\n   * @type boolean\n   */\n  declare interactive: boolean;\n\n  declare layoutManager: LayoutManager;\n\n  /**\n   * Used internally to optimize performance\n   * Once an object is selected, instance is rendered without the selected object.\n   * This way instance is cached only once for the entire interaction with the selected object.\n   * @private\n   */\n  protected _activeObjects: FabricObject[] = [];\n\n  static type = 'Group';\n\n  static ownDefaults: Record<string, any> = groupDefaultValues;\n  private __objectSelectionTracker: (ev: ObjectEvents['selected']) => void;\n  private __objectSelectionDisposer: (ev: ObjectEvents['deselected']) => void;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...Group.ownDefaults,\n    };\n  }\n\n  /**\n   * Constructor\n   *\n   * @param {FabricObject[]} [objects] instance objects\n   * @param {Object} [options] Options object\n   */\n  constructor(objects: FabricObject[] = [], options: Partial<GroupProps> = {}) {\n    super();\n    Object.assign(this, Group.ownDefaults);\n    this.setOptions(options);\n    this.groupInit(objects, options);\n  }\n\n  /**\n   * Shared code between group and active selection\n   * Meant to be used by the constructor.\n   */\n  protected groupInit(\n    objects: FabricObject[],\n    options: {\n      layoutManager?: LayoutManager;\n      top?: number;\n      left?: number;\n    },\n  ) {\n    this._objects = [...objects]; // Avoid unwanted mutations of Collection to affect the caller\n\n    this.__objectSelectionTracker = this.__objectSelectionMonitor.bind(\n      this,\n      true,\n    );\n    this.__objectSelectionDisposer = this.__objectSelectionMonitor.bind(\n      this,\n      false,\n    );\n\n    this.forEachObject((object) => {\n      this.enterGroup(object, false);\n    });\n\n    // perform initial layout\n    this.layoutManager = options.layoutManager ?? new LayoutManager();\n    this.layoutManager.performLayout({\n      type: LAYOUT_TYPE_INITIALIZATION,\n      target: this,\n      targets: [...objects],\n      // @TODO remove this concept from the layout manager.\n      // Layout manager will calculate the correct position,\n      // group options can override it later.\n      x: options.left,\n      y: options.top,\n    });\n  }\n\n  /**\n   * Checks if object can enter group and logs relevant warnings\n   * @private\n   * @param {FabricObject} object\n   * @returns\n   */\n  canEnterGroup(object: FabricObject) {\n    if (object === this || this.isDescendantOf(object)) {\n      //  prevent circular object tree\n      log(\n        'error',\n        'Group: circular object trees are not supported, this call has no effect',\n      );\n      return false;\n    } else if (this._objects.indexOf(object) !== -1) {\n      // is already in the objects array\n      log(\n        'error',\n        'Group: duplicate objects are not supported inside group, this call has no effect',\n      );\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Override this method to enhance performance (for groups with a lot of objects).\n   * If Overriding, be sure not pass illegal objects to group - it will break your app.\n   * @private\n   */\n  protected _filterObjectsBeforeEnteringGroup(objects: FabricObject[]) {\n    return objects.filter((object, index, array) => {\n      // can enter AND is the first occurrence of the object in the passed args (to prevent adding duplicates)\n      return this.canEnterGroup(object) && array.indexOf(object) === index;\n    });\n  }\n\n  /**\n   * Add objects\n   * @param {...FabricObject[]} objects\n   */\n  add(...objects: FabricObject[]) {\n    const allowedObjects = this._filterObjectsBeforeEnteringGroup(objects);\n    const size = super.add(...allowedObjects);\n    this._onAfterObjectsChange(LAYOUT_TYPE_ADDED, allowedObjects);\n    return size;\n  }\n\n  /**\n   * Inserts an object into collection at specified index\n   * @param {FabricObject[]} objects Object to insert\n   * @param {Number} index Index to insert object at\n   */\n  insertAt(index: number, ...objects: FabricObject[]) {\n    const allowedObjects = this._filterObjectsBeforeEnteringGroup(objects);\n    const size = super.insertAt(index, ...allowedObjects);\n    this._onAfterObjectsChange(LAYOUT_TYPE_ADDED, allowedObjects);\n    return size;\n  }\n\n  /**\n   * Remove objects\n   * @param {...FabricObject[]} objects\n   * @returns {FabricObject[]} removed objects\n   */\n  remove(...objects: FabricObject[]) {\n    const removed = super.remove(...objects);\n    this._onAfterObjectsChange(LAYOUT_TYPE_REMOVED, removed);\n    return removed;\n  }\n\n  _onObjectAdded(object: FabricObject) {\n    this.enterGroup(object, true);\n    this.fire('object:added', { target: object });\n    object.fire('added', { target: this });\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} object\n   * @param {boolean} [removeParentTransform] true if object should exit group without applying group's transform to it\n   */\n  _onObjectRemoved(object: FabricObject, removeParentTransform?: boolean) {\n    this.exitGroup(object, removeParentTransform);\n    this.fire('object:removed', { target: object });\n    object.fire('removed', { target: this });\n  }\n\n  /**\n   * @private\n   * @param {'added'|'removed'} type\n   * @param {FabricObject[]} targets\n   */\n  _onAfterObjectsChange(type: 'added' | 'removed', targets: FabricObject[]) {\n    this.layoutManager.performLayout({\n      type,\n      targets,\n      target: this,\n    });\n  }\n\n  _onStackOrderChanged() {\n    this._set('dirty', true);\n  }\n\n  /**\n   * @private\n   * @param {string} key\n   * @param {*} value\n   */\n  _set(key: string, value: any) {\n    const prev = this[key as keyof this];\n    super._set(key, value);\n    if (key === 'canvas' && prev !== value) {\n      (this._objects || []).forEach((object) => {\n        object._set(key, value);\n      });\n    }\n    return this;\n  }\n\n  /**\n   * @private\n   */\n  _shouldSetNestedCoords() {\n    return this.subTargetCheck;\n  }\n\n  /**\n   * Remove all objects\n   * @returns {FabricObject[]} removed objects\n   */\n  removeAll() {\n    this._activeObjects = [];\n    return this.remove(...this._objects);\n  }\n\n  /**\n   * keeps track of the selected objects\n   * @private\n   */\n  __objectSelectionMonitor<T extends boolean>(\n    selected: T,\n    {\n      target: object,\n    }: ObjectEvents[T extends true ? 'selected' : 'deselected'],\n  ) {\n    const activeObjects = this._activeObjects;\n    if (selected) {\n      activeObjects.push(object);\n      this._set('dirty', true);\n    } else if (activeObjects.length > 0) {\n      const index = activeObjects.indexOf(object);\n      if (index > -1) {\n        activeObjects.splice(index, 1);\n        this._set('dirty', true);\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {boolean} watch\n   * @param {FabricObject} object\n   */\n  _watchObject(watch: boolean, object: FabricObject) {\n    //  make sure we listen only once\n    watch && this._watchObject(false, object);\n    if (watch) {\n      object.on('selected', this.__objectSelectionTracker);\n      object.on('deselected', this.__objectSelectionDisposer);\n    } else {\n      object.off('selected', this.__objectSelectionTracker);\n      object.off('deselected', this.__objectSelectionDisposer);\n    }\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} object\n   * @param {boolean} [removeParentTransform] true if object is in canvas coordinate plane\n   */\n  enterGroup(object: FabricObject, removeParentTransform?: boolean) {\n    object.group && object.group.remove(object);\n    object._set('parent', this);\n    this._enterGroup(object, removeParentTransform);\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} object\n   * @param {boolean} [removeParentTransform] true if object is in canvas coordinate plane\n   */\n  _enterGroup(object: FabricObject, removeParentTransform?: boolean) {\n    if (removeParentTransform) {\n      // can this be converted to utils (sendObjectToPlane)?\n      applyTransformToObject(\n        object,\n        multiplyTransformMatrices(\n          invertTransform(this.calcTransformMatrix()),\n          object.calcTransformMatrix(),\n        ),\n      );\n    }\n    this._shouldSetNestedCoords() && object.setCoords();\n    object._set('group', this);\n    object._set('canvas', this.canvas);\n    this._watchObject(true, object);\n    const activeObject =\n      this.canvas &&\n      this.canvas.getActiveObject &&\n      this.canvas.getActiveObject();\n    // if we are adding the activeObject in a group\n    if (\n      activeObject &&\n      (activeObject === object || object.isDescendantOf(activeObject))\n    ) {\n      this._activeObjects.push(object);\n    }\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} object\n   * @param {boolean} [removeParentTransform] true if object should exit group without applying group's transform to it\n   */\n  exitGroup(object: FabricObject, removeParentTransform?: boolean) {\n    this._exitGroup(object, removeParentTransform);\n    object._set('parent', undefined);\n    object._set('canvas', undefined);\n  }\n\n  /**\n   * Executes the inner fabric logic of exiting a group.\n   * - Stop watching the object\n   * - Remove the object from the optimization map this._activeObjects\n   * - unset the group property of the object\n   * @protected\n   * @param {FabricObject} object\n   * @param {boolean} [removeParentTransform] true if object should exit group without applying group's transform to it\n   */\n  _exitGroup(object: FabricObject, removeParentTransform?: boolean) {\n    object._set('group', undefined);\n    if (!removeParentTransform) {\n      applyTransformToObject(\n        object,\n        multiplyTransformMatrices(\n          this.calcTransformMatrix(),\n          object.calcTransformMatrix(),\n        ),\n      );\n      object.setCoords();\n    }\n    this._watchObject(false, object);\n    const index =\n      this._activeObjects.length > 0 ? this._activeObjects.indexOf(object) : -1;\n    if (index > -1) {\n      this._activeObjects.splice(index, 1);\n    }\n  }\n\n  /**\n   * Decide if the object should cache or not. Create its own cache level\n   * needsItsOwnCache should be used when the object drawing method requires\n   * a cache step. None of the fabric classes requires it.\n   * Generally you do not cache objects in groups because the group is already cached.\n   * @return {Boolean}\n   */\n  shouldCache() {\n    const ownCache = FabricObject.prototype.shouldCache.call(this);\n    if (ownCache) {\n      for (let i = 0; i < this._objects.length; i++) {\n        if (this._objects[i].willDrawShadow()) {\n          this.ownCaching = false;\n          return false;\n        }\n      }\n    }\n    return ownCache;\n  }\n\n  /**\n   * Check if this object or a child object will cast a shadow\n   * @return {Boolean}\n   */\n  willDrawShadow() {\n    if (super.willDrawShadow()) {\n      return true;\n    }\n    for (let i = 0; i < this._objects.length; i++) {\n      if (this._objects[i].willDrawShadow()) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Check if instance or its group are caching, recursively up\n   * @return {Boolean}\n   */\n  isOnACache(): boolean {\n    return this.ownCaching || (!!this.parent && this.parent.isOnACache());\n  }\n\n  /**\n   * Execute the drawing operation for an object on a specified context\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  drawObject(\n    ctx: CanvasRenderingContext2D,\n    forClipping: boolean | undefined,\n    context: DrawContext,\n  ) {\n    this._renderBackground(ctx);\n    for (let i = 0; i < this._objects.length; i++) {\n      const obj = this._objects[i];\n      // TODO: handle rendering edge case somehow\n      if (this.canvas?.preserveObjectStacking && obj.group !== this) {\n        ctx.save();\n        ctx.transform(...invertTransform(this.calcTransformMatrix()));\n        obj.render(ctx);\n        ctx.restore();\n      } else if (obj.group === this) {\n        obj.render(ctx);\n      }\n    }\n    this._drawClipPath(ctx, this.clipPath, context);\n  }\n\n  /**\n   * @override\n   * @return {Boolean}\n   */\n  setCoords() {\n    super.setCoords();\n    this._shouldSetNestedCoords() &&\n      this.forEachObject((object) => object.setCoords());\n  }\n\n  triggerLayout(options: ImperativeLayoutOptions = {}) {\n    this.layoutManager.performLayout({\n      target: this,\n      type: LAYOUT_TYPE_IMPERATIVE,\n      ...options,\n    });\n  }\n\n  /**\n   * Renders instance on a given context\n   * @param {CanvasRenderingContext2D} ctx context to render instance on\n   */\n  render(ctx: CanvasRenderingContext2D) {\n    this._transformDone = true;\n    super.render(ctx);\n    this._transformDone = false;\n  }\n\n  /**\n   *\n   * @private\n   * @param {'toObject'|'toDatalessObject'} [method]\n   * @param {string[]} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @returns {FabricObject[]} serialized objects\n   */\n  __serializeObjects(\n    method: 'toObject' | 'toDatalessObject',\n    propertiesToInclude?: string[],\n  ) {\n    const _includeDefaultValues = this.includeDefaultValues;\n    return this._objects\n      .filter(function (obj) {\n        return !obj.excludeFromExport;\n      })\n      .map(function (obj) {\n        const originalDefaults = obj.includeDefaultValues;\n        obj.includeDefaultValues = _includeDefaultValues;\n        const data = obj[method || 'toObject'](propertiesToInclude);\n        obj.includeDefaultValues = originalDefaults;\n        // delete data.version;\n        return data;\n      });\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {string[]} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject<\n    T extends Omit<\n      GroupProps & TClassProperties<this>,\n      keyof SerializedGroupProps\n    >,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SerializedGroupProps {\n    const layoutManager = this.layoutManager.toObject();\n\n    return {\n      ...super.toObject([\n        'subTargetCheck',\n        'interactive',\n        ...propertiesToInclude,\n      ]),\n      ...(layoutManager.strategy !== 'fit-content' || this.includeDefaultValues\n        ? { layoutManager }\n        : {}),\n      objects: this.__serializeObjects(\n        'toObject',\n        propertiesToInclude as string[],\n      ),\n    };\n  }\n\n  toString() {\n    return `#<Group: (${this.complexity()})>`;\n  }\n\n  dispose() {\n    this.layoutManager.unsubscribeTargets({\n      targets: this.getObjects(),\n      target: this,\n    });\n    this._activeObjects = [];\n    this.forEachObject((object) => {\n      this._watchObject(false, object);\n      object.dispose();\n    });\n    super.dispose();\n  }\n\n  /**\n   * @private\n   */\n  _createSVGBgRect(reviver?: TSVGReviver) {\n    if (!this.backgroundColor) {\n      return '';\n    }\n    const fillStroke = Rect.prototype._toSVG.call(this);\n    const commons = fillStroke.indexOf('COMMON_PARTS');\n    fillStroke[commons] = 'for=\"group\" ';\n    const markup = fillStroke.join('');\n    return reviver ? reviver(markup) : markup;\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @param {TSVGReviver} [reviver] Method for further parsing of svg representation.\n   * @return {String} svg representation of an instance\n   */\n  _toSVG(reviver?: TSVGReviver) {\n    const svgString = ['<g ', 'COMMON_PARTS', ' >\\n'];\n    const bg = this._createSVGBgRect(reviver);\n    bg && svgString.push('\\t\\t', bg);\n    for (let i = 0; i < this._objects.length; i++) {\n      svgString.push('\\t\\t', this._objects[i].toSVG(reviver));\n    }\n    svgString.push('</g>\\n');\n    return svgString;\n  }\n\n  /**\n   * Returns styles-string for svg-export, specific version for group\n   * @return {String}\n   */\n  getSvgStyles(): string {\n    const opacity =\n        typeof this.opacity !== 'undefined' && this.opacity !== 1\n          ? `opacity: ${this.opacity};`\n          : '',\n      visibility = this.visible ? '' : ' visibility: hidden;';\n    return [opacity, this.getSvgFilter(), visibility].join('');\n  }\n\n  /**\n   * Returns svg clipPath representation of an instance\n   * @param {Function} [reviver] Method for further parsing of svg representation.\n   * @return {String} svg representation of an instance\n   */\n  toClipPathSVG(reviver?: TSVGReviver): string {\n    const svgString = [];\n    const bg = this._createSVGBgRect(reviver);\n    bg && svgString.push('\\t', bg);\n    for (let i = 0; i < this._objects.length; i++) {\n      svgString.push('\\t', this._objects[i].toClipPathSVG(reviver));\n    }\n    return this._createBaseClipPathSVGMarkup(svgString, {\n      reviver,\n    });\n  }\n\n  /**\n   * @todo support loading from svg\n   * @private\n   * @static\n   * @memberOf Group\n   * @param {Object} object Object to create a group from\n   * @returns {Promise<Group>}\n   */\n  static fromObject<T extends TOptions<SerializedGroupProps>>(\n    { type, objects = [], layoutManager, ...options }: T,\n    abortable?: Abortable,\n  ) {\n    return Promise.all([\n      enlivenObjects<FabricObject>(objects, abortable),\n      enlivenObjectEnlivables(options, abortable),\n    ]).then(([objects, hydratedOptions]) => {\n      const group = new this(objects, {\n        ...options,\n        ...hydratedOptions,\n        layoutManager: new NoopLayoutManager(),\n      });\n      if (layoutManager) {\n        const layoutClass = classRegistry.getClass<typeof LayoutManager>(\n          layoutManager.type,\n        );\n        const strategyClass = classRegistry.getClass<typeof FitContentLayout>(\n          layoutManager.strategy,\n        );\n        group.layoutManager = new layoutClass(new strategyClass());\n      } else {\n        group.layoutManager = new LayoutManager();\n      }\n      group.layoutManager.subscribeTargets({\n        type: LAYOUT_TYPE_INITIALIZATION,\n        target: group,\n        targets: group.getObjects(),\n      });\n      group.setCoords();\n      return group;\n    });\n  }\n}\n\nclassRegistry.setClass(Group);\n","import type { GroupProps } from '../../shapes/Group';\nimport { Group } from '../../shapes/Group';\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\n\n/**\n * TODO experiment with different layout manager and svg results ( fixed fit content )\n * Groups SVG elements (usually those retrieved from SVG document)\n * @static\n * @param {FabricObject[]} elements FabricObject(s) parsed from svg, to group\n * @return {FabricObject | Group}\n */\nexport const groupSVGElements = (\n  elements: FabricObject[],\n  options?: Partial<GroupProps>,\n) => {\n  if (elements && elements.length === 1) {\n    return elements[0];\n  }\n  return new Group(elements, options);\n};\n","import type { TSize } from '../../typedefs';\n\n/**\n * Finds the scale for the object source to fit inside the object destination,\n * keeping aspect ratio intact.\n * respect the total allowed area for the cache.\n * @param {TSize} source natural unscaled size of the object\n * @param {TSize} destination natural unscaled size of the object\n * @return {Number} scale factor to apply to source to fit into destination\n */\nexport const findScaleToFit = (source: TSize, destination: TSize) =>\n  Math.min(\n    destination.width / source.width,\n    destination.height / source.height,\n  );\n\n/**\n * Finds the scale for the object source to cover entirely the object destination,\n * keeping aspect ratio intact.\n * respect the total allowed area for the cache.\n * @param {TSize} source natural unscaled size of the object\n * @param {TSize} destination natural unscaled size of the object\n * @return {Number} scale factor to apply to source to cover destination\n */\nexport const findScaleToCover = (source: TSize, destination: TSize) =>\n  Math.max(\n    destination.width / source.width,\n    destination.height / source.height,\n  );\n","import { reNum } from '../../parser/constants';\n\nconst commaWsp = `\\\\s*,?\\\\s*`;\n\n/**\n * p for param\n * using \"bad naming\" here because it makes the regex much easier to read\n * p is a number that is preceded by an arbitary number of spaces, maybe 0,\n * a comma or not, and then possibly more spaces or not.\n */\nconst p = `${commaWsp}(${reNum})`;\n\n// const reMoveToCommand = `(M) ?(?:${p}${p} ?)+`;\n\n// const reLineCommand = `(L) ?(?:${p}${p} ?)+`;\n\n// const reHorizontalLineCommand = `(H) ?(?:${p} ?)+`;\n\n// const reVerticalLineCommand = `(V) ?(?:${p} ?)+`;\n\n// const reClosePathCommand = String.raw`(Z)\\s*`;\n\n// const reCubicCurveCommand = `(C) ?(?:${p}${p}${p}${p}${p}${p} ?)+`;\n\n// const reCubicCurveShortcutCommand = `(S) ?(?:${p}${p}${p}${p} ?)+`;\n\n// const reQuadraticCurveCommand = `(Q) ?(?:${p}${p}${p}${p} ?)+`;\n\n// const reQuadraticCurveShortcutCommand = `(T) ?(?:${p}${p} ?)+`;\n\nexport const reArcCommandPoints = `${p}${p}${p}${commaWsp}([01])${commaWsp}([01])${p}${p}`;\n// const reArcCommand = `(A) ?(?:${reArcCommandPoints} ?)+`;\n\n// export const rePathCommandGroups =\n//   `(?:(?:${reMoveToCommand})` +\n//   `|(?:${reLineCommand})` +\n//   `|(?:${reHorizontalLineCommand})` +\n//   `|(?:${reVerticalLineCommand})` +\n//   `|(?:${reClosePathCommand})` +\n//   `|(?:${reCubicCurveCommand})` +\n//   `|(?:${reCubicCurveShortcutCommand})` +\n//   `|(?:${reQuadraticCurveCommand})` +\n//   `|(?:${reQuadraticCurveShortcutCommand})` +\n//   `|(?:${reArcCommand}))`;\n\nexport const rePathCommand = '[mzlhvcsqta][^mzlhvcsqta]*';\n","import { cache } from '../../cache';\nimport { config } from '../../config';\nimport { halfPI, PiBy180 } from '../../constants';\nimport type { TMat2D, TRadian, TRectBounds } from '../../typedefs';\nimport { cos } from '../misc/cos';\nimport { multiplyTransformMatrices, transformPoint } from '../misc/matrix';\nimport { sin } from '../misc/sin';\nimport { toFixed } from '../misc/toFixed';\nimport type {\n  TCurveInfo,\n  TComplexPathData,\n  TParsedAbsoluteCubicCurveCommand,\n  TPathSegmentInfo,\n  TPointAngle,\n  TSimpleParsedCommand,\n  TSimplePathData,\n  TPathSegmentCommandInfo,\n  TComplexParsedCommand,\n  TPathSegmentInfoCommon,\n  TEndPathInfo,\n  TParsedArcCommand,\n  TComplexParsedCommandType,\n} from './typedefs';\nimport type { XY } from '../../Point';\nimport { Point } from '../../Point';\nimport { reArcCommandPoints, rePathCommand } from './regex';\nimport { reNum } from '../../parser/constants';\n\n/**\n * Commands that may be repeated\n */\nconst repeatedCommands: Record<string, 'l' | 'L'> = {\n  m: 'l',\n  M: 'L',\n};\n\n/**\n * Convert an arc of a rotated ellipse to a Bezier Curve\n * @param {TRadian} theta1 start of the arc\n * @param {TRadian} theta2 end of the arc\n * @param cosTh cosine of the angle of rotation\n * @param sinTh sine of the angle of rotation\n * @param rx x-axis radius (before rotation)\n * @param ry y-axis radius (before rotation)\n * @param cx1 center x of the ellipse\n * @param cy1 center y of the ellipse\n * @param mT\n * @param fromX starting point of arc x\n * @param fromY starting point of arc y\n */\nconst segmentToBezier = (\n  theta1: TRadian,\n  theta2: TRadian,\n  cosTh: number,\n  sinTh: number,\n  rx: number,\n  ry: number,\n  cx1: number,\n  cy1: number,\n  mT: number,\n  fromX: number,\n  fromY: number,\n): TParsedAbsoluteCubicCurveCommand => {\n  const costh1 = cos(theta1),\n    sinth1 = sin(theta1),\n    costh2 = cos(theta2),\n    sinth2 = sin(theta2),\n    toX = cosTh * rx * costh2 - sinTh * ry * sinth2 + cx1,\n    toY = sinTh * rx * costh2 + cosTh * ry * sinth2 + cy1,\n    cp1X = fromX + mT * (-cosTh * rx * sinth1 - sinTh * ry * costh1),\n    cp1Y = fromY + mT * (-sinTh * rx * sinth1 + cosTh * ry * costh1),\n    cp2X = toX + mT * (cosTh * rx * sinth2 + sinTh * ry * costh2),\n    cp2Y = toY + mT * (sinTh * rx * sinth2 - cosTh * ry * costh2);\n\n  return ['C', cp1X, cp1Y, cp2X, cp2Y, toX, toY];\n};\n\n/**\n * Adapted from {@link http://dxr.mozilla.org/mozilla-central/source/dom/svg/SVGPathDataParser.cpp}\n * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\n * http://mozilla.org/MPL/2.0/\n * @param toX\n * @param toY\n * @param rx\n * @param ry\n * @param {number} large 0 or 1 flag\n * @param {number} sweep 0 or 1 flag\n * @param rotateX\n */\nconst arcToSegments = (\n  toX: number,\n  toY: number,\n  rx: number,\n  ry: number,\n  large: number,\n  sweep: number,\n  rotateX: TRadian,\n): TParsedAbsoluteCubicCurveCommand[] => {\n  if (rx === 0 || ry === 0) {\n    return [];\n  }\n  let fromX = 0,\n    fromY = 0,\n    root = 0;\n  const PI = Math.PI,\n    theta = rotateX * PiBy180,\n    sinTheta = sin(theta),\n    cosTh = cos(theta),\n    px = 0.5 * (-cosTh * toX - sinTheta * toY),\n    py = 0.5 * (-cosTh * toY + sinTheta * toX),\n    rx2 = rx ** 2,\n    ry2 = ry ** 2,\n    py2 = py ** 2,\n    px2 = px ** 2,\n    pl = rx2 * ry2 - rx2 * py2 - ry2 * px2;\n  let _rx = Math.abs(rx);\n  let _ry = Math.abs(ry);\n\n  if (pl < 0) {\n    const s = Math.sqrt(1 - pl / (rx2 * ry2));\n    _rx *= s;\n    _ry *= s;\n  } else {\n    root =\n      (large === sweep ? -1.0 : 1.0) * Math.sqrt(pl / (rx2 * py2 + ry2 * px2));\n  }\n\n  const cx = (root * _rx * py) / _ry,\n    cy = (-root * _ry * px) / _rx,\n    cx1 = cosTh * cx - sinTheta * cy + toX * 0.5,\n    cy1 = sinTheta * cx + cosTh * cy + toY * 0.5;\n  let mTheta = calcVectorAngle(1, 0, (px - cx) / _rx, (py - cy) / _ry);\n  let dtheta = calcVectorAngle(\n    (px - cx) / _rx,\n    (py - cy) / _ry,\n    (-px - cx) / _rx,\n    (-py - cy) / _ry,\n  );\n\n  if (sweep === 0 && dtheta > 0) {\n    dtheta -= 2 * PI;\n  } else if (sweep === 1 && dtheta < 0) {\n    dtheta += 2 * PI;\n  }\n\n  // Convert into cubic bezier segments <= 90deg\n  const segments = Math.ceil(Math.abs((dtheta / PI) * 2)),\n    result = [],\n    mDelta = dtheta / segments,\n    mT =\n      ((8 / 3) * Math.sin(mDelta / 4) * Math.sin(mDelta / 4)) /\n      Math.sin(mDelta / 2);\n  let th3 = mTheta + mDelta;\n\n  for (let i = 0; i < segments; i++) {\n    result[i] = segmentToBezier(\n      mTheta,\n      th3,\n      cosTh,\n      sinTheta,\n      _rx,\n      _ry,\n      cx1,\n      cy1,\n      mT,\n      fromX,\n      fromY,\n    );\n    fromX = result[i][5];\n    fromY = result[i][6];\n    mTheta = th3;\n    th3 += mDelta;\n  }\n  return result;\n};\n\n/**\n * @private\n * Calculate the angle between two vectors\n * @param ux u endpoint x\n * @param uy u endpoint y\n * @param vx v endpoint x\n * @param vy v endpoint y\n */\nconst calcVectorAngle = (\n  ux: number,\n  uy: number,\n  vx: number,\n  vy: number,\n): TRadian => {\n  const ta = Math.atan2(uy, ux),\n    tb = Math.atan2(vy, vx);\n  if (tb >= ta) {\n    return tb - ta;\n  } else {\n    return 2 * Math.PI - (ta - tb);\n  }\n};\n\n// functions for the Cubic beizer\n// taken from: https://github.com/konvajs/konva/blob/7.0.5/src/shapes/Path.ts#L350\nconst CB1 = (t: number) => t ** 3;\nconst CB2 = (t: number) => 3 * t ** 2 * (1 - t);\nconst CB3 = (t: number) => 3 * t * (1 - t) ** 2;\nconst CB4 = (t: number) => (1 - t) ** 3;\n\n/**\n * Calculate bounding box of a cubic Bezier curve\n * Taken from http://jsbin.com/ivomiq/56/edit (no credits available)\n * TODO: can we normalize this with the starting points set at 0 and then translated the bbox?\n * @param {number} begx starting point\n * @param {number} begy\n * @param {number} cp1x first control point\n * @param {number} cp1y\n * @param {number} cp2x second control point\n * @param {number} cp2y\n * @param {number} endx end of bezier\n * @param {number} endy\n * @return {TRectBounds} the rectangular bounds\n */\nexport function getBoundsOfCurve(\n  begx: number,\n  begy: number,\n  cp1x: number,\n  cp1y: number,\n  cp2x: number,\n  cp2y: number,\n  endx: number,\n  endy: number,\n): TRectBounds {\n  let argsString: string;\n  if (config.cachesBoundsOfCurve) {\n    // eslint-disable-next-line\n    argsString = [...arguments].join();\n    if (cache.boundsOfCurveCache[argsString]) {\n      return cache.boundsOfCurveCache[argsString];\n    }\n  }\n\n  const sqrt = Math.sqrt,\n    abs = Math.abs,\n    tvalues = [],\n    bounds: [[x: number, y: number], [x: number, y: number]] = [\n      [0, 0],\n      [0, 0],\n    ];\n\n  let b = 6 * begx - 12 * cp1x + 6 * cp2x;\n  let a = -3 * begx + 9 * cp1x - 9 * cp2x + 3 * endx;\n  let c = 3 * cp1x - 3 * begx;\n\n  for (let i = 0; i < 2; ++i) {\n    if (i > 0) {\n      b = 6 * begy - 12 * cp1y + 6 * cp2y;\n      a = -3 * begy + 9 * cp1y - 9 * cp2y + 3 * endy;\n      c = 3 * cp1y - 3 * begy;\n    }\n\n    if (abs(a) < 1e-12) {\n      if (abs(b) < 1e-12) {\n        continue;\n      }\n      const t = -c / b;\n      if (0 < t && t < 1) {\n        tvalues.push(t);\n      }\n      continue;\n    }\n    const b2ac = b * b - 4 * c * a;\n    if (b2ac < 0) {\n      continue;\n    }\n    const sqrtb2ac = sqrt(b2ac);\n    const t1 = (-b + sqrtb2ac) / (2 * a);\n    if (0 < t1 && t1 < 1) {\n      tvalues.push(t1);\n    }\n    const t2 = (-b - sqrtb2ac) / (2 * a);\n    if (0 < t2 && t2 < 1) {\n      tvalues.push(t2);\n    }\n  }\n\n  let j = tvalues.length;\n  const jlen = j;\n  const iterator = getPointOnCubicBezierIterator(\n    begx,\n    begy,\n    cp1x,\n    cp1y,\n    cp2x,\n    cp2y,\n    endx,\n    endy,\n  );\n  while (j--) {\n    const { x, y } = iterator(tvalues[j]);\n    bounds[0][j] = x;\n    bounds[1][j] = y;\n  }\n\n  bounds[0][jlen] = begx;\n  bounds[1][jlen] = begy;\n  bounds[0][jlen + 1] = endx;\n  bounds[1][jlen + 1] = endy;\n  const result: TRectBounds = [\n    new Point(Math.min(...bounds[0]), Math.min(...bounds[1])),\n    new Point(Math.max(...bounds[0]), Math.max(...bounds[1])),\n  ];\n  if (config.cachesBoundsOfCurve) {\n    cache.boundsOfCurveCache[argsString!] = result;\n  }\n  return result;\n}\n\n/**\n * Converts arc to a bunch of cubic Bezier curves\n * @param {number} fx starting point x\n * @param {number} fy starting point y\n * @param {TParsedArcCommand} coords Arc command\n */\nexport const fromArcToBeziers = (\n  fx: number,\n  fy: number,\n  [_, rx, ry, rot, large, sweep, tx, ty]: TParsedArcCommand,\n): TParsedAbsoluteCubicCurveCommand[] => {\n  const segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n  for (let i = 0, len = segsNorm.length; i < len; i++) {\n    segsNorm[i][1] += fx;\n    segsNorm[i][2] += fy;\n    segsNorm[i][3] += fx;\n    segsNorm[i][4] += fy;\n    segsNorm[i][5] += fx;\n    segsNorm[i][6] += fy;\n  }\n  return segsNorm;\n};\n\n/**\n * This function takes a parsed SVG path and makes it simpler for fabricJS logic.\n * Simplification consist of:\n * - All commands converted to absolute (lowercase to uppercase)\n * - S converted to C\n * - T converted to Q\n * - A converted to C\n * @param {TComplexPathData} path the array of commands of a parsed SVG path for `Path`\n * @return {TSimplePathData} the simplified array of commands of a parsed SVG path for `Path`\n * TODO: figure out how to remove the type assertions in a nice way\n */\nexport const makePathSimpler = (path: TComplexPathData): TSimplePathData => {\n  // x and y represent the last point of the path, AKA the previous command point.\n  // we add them to each relative command to make it an absolute comment.\n  // we also swap the v V h H with L, because are easier to transform.\n  let x = 0,\n    y = 0;\n  // x1 and y1 represent the last point of the subpath. the subpath is started with\n  // m or M command. When a z or Z command is drawn, x and y need to be resetted to\n  // the last x1 and y1.\n  let x1 = 0,\n    y1 = 0;\n  // previous will host the letter of the previous command, to handle S and T.\n  // controlX and controlY will host the previous reflected control point\n  const destinationPath: TSimplePathData = [];\n  let previous,\n    // placeholders\n    controlX = 0,\n    controlY = 0;\n  for (const parsedCommand of path) {\n    const current: TComplexParsedCommand = [...parsedCommand];\n    let converted: TSimpleParsedCommand | undefined;\n    switch (\n      current[0] // first letter\n    ) {\n      case 'l': // lineto, relative\n        current[1] += x;\n        current[2] += y;\n      // falls through\n      case 'L':\n        x = current[1];\n        y = current[2];\n        converted = ['L', x, y];\n        break;\n      case 'h': // horizontal lineto, relative\n        current[1] += x;\n      // falls through\n      case 'H':\n        x = current[1];\n        converted = ['L', x, y];\n        break;\n      case 'v': // vertical lineto, relative\n        current[1] += y;\n      // falls through\n      case 'V':\n        y = current[1];\n        converted = ['L', x, y];\n        break;\n      case 'm': // moveTo, relative\n        current[1] += x;\n        current[2] += y;\n      // falls through\n      case 'M':\n        x = current[1];\n        y = current[2];\n        x1 = current[1];\n        y1 = current[2];\n        converted = ['M', x, y];\n        break;\n      case 'c': // bezierCurveTo, relative\n        current[1] += x;\n        current[2] += y;\n        current[3] += x;\n        current[4] += y;\n        current[5] += x;\n        current[6] += y;\n      // falls through\n      case 'C':\n        controlX = current[3];\n        controlY = current[4];\n        x = current[5];\n        y = current[6];\n        converted = ['C', current[1], current[2], controlX, controlY, x, y];\n        break;\n      case 's': // shorthand cubic bezierCurveTo, relative\n        current[1] += x;\n        current[2] += y;\n        current[3] += x;\n        current[4] += y;\n      // falls through\n      case 'S':\n        // would be sScC but since we are swapping sSc for C, we check just that.\n        if (previous === 'C') {\n          // calculate reflection of previous control points\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        } else {\n          // If there is no previous command or if the previous command was not a C, c, S, or s,\n          // the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        x = current[3];\n        y = current[4];\n        converted = ['C', controlX, controlY, current[1], current[2], x, y];\n        // converted[3] and converted[4] are NOW the second control point.\n        // we keep it for the next reflection.\n        controlX = converted[3];\n        controlY = converted[4];\n        break;\n      case 'q': // quadraticCurveTo, relative\n        current[1] += x;\n        current[2] += y;\n        current[3] += x;\n        current[4] += y;\n      // falls through\n      case 'Q':\n        controlX = current[1];\n        controlY = current[2];\n        x = current[3];\n        y = current[4];\n        converted = ['Q', controlX, controlY, x, y];\n        break;\n      case 't': // shorthand quadraticCurveTo, relative\n        current[1] += x;\n        current[2] += y;\n      // falls through\n      case 'T':\n        if (previous === 'Q') {\n          // calculate reflection of previous control point\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        } else {\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\n          // assume the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        x = current[1];\n        y = current[2];\n        converted = ['Q', controlX, controlY, x, y];\n        break;\n      case 'a':\n        current[6] += x;\n        current[7] += y;\n      // falls through\n      case 'A':\n        fromArcToBeziers(x, y, current).forEach((b) => destinationPath.push(b));\n        x = current[6];\n        y = current[7];\n        break;\n      case 'z':\n      case 'Z':\n        x = x1;\n        y = y1;\n        converted = ['Z'];\n        break;\n      default:\n    }\n    if (converted) {\n      destinationPath.push(converted);\n      previous = converted[0];\n    } else {\n      previous = '';\n    }\n  }\n  return destinationPath;\n};\n\n// todo verify if we can just use the point class here\n/**\n * Calc length from point x1,y1 to x2,y2\n * @param {number} x1 starting point x\n * @param {number} y1 starting point y\n * @param {number} x2 starting point x\n * @param {number} y2 starting point y\n * @return {number} length of segment\n */\nconst calcLineLength = (\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n): number => Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n\n/**\n * Get an iterator that takes a percentage and returns a point\n * @param {number} begx\n * @param {number} begy\n * @param {number} cp1x\n * @param {number} cp1y\n * @param {number} cp2x\n * @param {number} cp2y\n * @param {number} endx\n * @param {number} endy\n */\nconst getPointOnCubicBezierIterator =\n  (\n    begx: number,\n    begy: number,\n    cp1x: number,\n    cp1y: number,\n    cp2x: number,\n    cp2y: number,\n    endx: number,\n    endy: number,\n  ) =>\n  (pct: number) => {\n    const c1 = CB1(pct),\n      c2 = CB2(pct),\n      c3 = CB3(pct),\n      c4 = CB4(pct);\n    return new Point(\n      endx * c1 + cp2x * c2 + cp1x * c3 + begx * c4,\n      endy * c1 + cp2y * c2 + cp1y * c3 + begy * c4,\n    );\n  };\n\nconst QB1 = (t: number) => t ** 2;\nconst QB2 = (t: number) => 2 * t * (1 - t);\nconst QB3 = (t: number) => (1 - t) ** 2;\n\nconst getTangentCubicIterator =\n  (\n    p1x: number,\n    p1y: number,\n    p2x: number,\n    p2y: number,\n    p3x: number,\n    p3y: number,\n    p4x: number,\n    p4y: number,\n  ) =>\n  (pct: number) => {\n    const qb1 = QB1(pct),\n      qb2 = QB2(pct),\n      qb3 = QB3(pct),\n      tangentX =\n        3 * (qb3 * (p2x - p1x) + qb2 * (p3x - p2x) + qb1 * (p4x - p3x)),\n      tangentY =\n        3 * (qb3 * (p2y - p1y) + qb2 * (p3y - p2y) + qb1 * (p4y - p3y));\n    return Math.atan2(tangentY, tangentX);\n  };\n\nconst getPointOnQuadraticBezierIterator =\n  (\n    p1x: number,\n    p1y: number,\n    p2x: number,\n    p2y: number,\n    p3x: number,\n    p3y: number,\n  ) =>\n  (pct: number) => {\n    const c1 = QB1(pct),\n      c2 = QB2(pct),\n      c3 = QB3(pct);\n    return new Point(\n      p3x * c1 + p2x * c2 + p1x * c3,\n      p3y * c1 + p2y * c2 + p1y * c3,\n    );\n  };\n\nconst getTangentQuadraticIterator =\n  (\n    p1x: number,\n    p1y: number,\n    p2x: number,\n    p2y: number,\n    p3x: number,\n    p3y: number,\n  ) =>\n  (pct: number) => {\n    const invT = 1 - pct,\n      tangentX = 2 * (invT * (p2x - p1x) + pct * (p3x - p2x)),\n      tangentY = 2 * (invT * (p2y - p1y) + pct * (p3y - p2y));\n    return Math.atan2(tangentY, tangentX);\n  };\n\n// this will run over a path segment (a cubic or quadratic segment) and approximate it\n// with 100 segments. This will good enough to calculate the length of the curve\nconst pathIterator = (\n  iterator: (pct: number) => Point,\n  x1: number,\n  y1: number,\n) => {\n  let tempP = new Point(x1, y1),\n    tmpLen = 0;\n  for (let perc = 1; perc <= 100; perc += 1) {\n    const p = iterator(perc / 100);\n    tmpLen += calcLineLength(tempP.x, tempP.y, p.x, p.y);\n    tempP = p;\n  }\n  return tmpLen;\n};\n\n/**\n * Given a pathInfo, and a distance in pixels, find the percentage from 0 to 1\n * that correspond to that pixels run over the path.\n * The percentage will be then used to find the correct point on the canvas for the path.\n * @param {Array} segInfo fabricJS collection of information on a parsed path\n * @param {number} distance from starting point, in pixels.\n * @return {TPointAngle} info object with x and y ( the point on canvas ) and angle, the tangent on that point;\n */\nconst findPercentageForDistance = (\n  segInfo: TCurveInfo<'Q' | 'C'>,\n  distance: number,\n): TPointAngle => {\n  let perc = 0,\n    tmpLen = 0,\n    tempP: XY = { x: segInfo.x, y: segInfo.y },\n    p: XY = { ...tempP },\n    nextLen: number,\n    nextStep = 0.01,\n    lastPerc = 0;\n  // nextStep > 0.0001 covers 0.00015625 that 1/64th of 1/100\n  // the path\n  const iterator = segInfo.iterator,\n    angleFinder = segInfo.angleFinder;\n  while (tmpLen < distance && nextStep > 0.0001) {\n    p = iterator(perc);\n    lastPerc = perc;\n    nextLen = calcLineLength(tempP.x, tempP.y, p.x, p.y);\n    // compare tmpLen each cycle with distance, decide next perc to test.\n    if (nextLen + tmpLen > distance) {\n      // we discard this step and we make smaller steps.\n      perc -= nextStep;\n      nextStep /= 2;\n    } else {\n      tempP = p;\n      perc += nextStep;\n      tmpLen += nextLen;\n    }\n  }\n  return { ...p, angle: angleFinder(lastPerc) };\n};\n\n/**\n * Run over a parsed and simplified path and extract some information (length of each command and starting point)\n * @param {TSimplePathData} path parsed path commands\n * @return {TPathSegmentInfo[]} path commands information\n */\nexport const getPathSegmentsInfo = (\n  path: TSimplePathData,\n): TPathSegmentInfo[] => {\n  let totalLength = 0,\n    //x2 and y2 are the coords of segment start\n    //x1 and y1 are the coords of the current point\n    x1 = 0,\n    y1 = 0,\n    x2 = 0,\n    y2 = 0,\n    iterator,\n    tempInfo: TPathSegmentInfo;\n  const info: TPathSegmentInfo[] = [];\n  for (const current of path) {\n    const basicInfo: TPathSegmentInfoCommon<keyof TPathSegmentCommandInfo> = {\n      x: x1,\n      y: y1,\n      command: current[0],\n      length: 0,\n    };\n    switch (\n      current[0] //first letter\n    ) {\n      case 'M':\n        tempInfo = <TPathSegmentInfoCommon<'M'>>basicInfo;\n        tempInfo.x = x2 = x1 = current[1];\n        tempInfo.y = y2 = y1 = current[2];\n        break;\n      case 'L':\n        tempInfo = <TPathSegmentInfoCommon<'L'>>basicInfo;\n        tempInfo.length = calcLineLength(x1, y1, current[1], current[2]);\n        x1 = current[1];\n        y1 = current[2];\n        break;\n      case 'C':\n        iterator = getPointOnCubicBezierIterator(\n          x1,\n          y1,\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6],\n        );\n        tempInfo = <TCurveInfo<'C'>>basicInfo;\n        tempInfo.iterator = iterator;\n        tempInfo.angleFinder = getTangentCubicIterator(\n          x1,\n          y1,\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6],\n        );\n        tempInfo.length = pathIterator(iterator, x1, y1);\n\n        x1 = current[5];\n        y1 = current[6];\n        break;\n      case 'Q':\n        iterator = getPointOnQuadraticBezierIterator(\n          x1,\n          y1,\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n        );\n        tempInfo = <TCurveInfo<'Q'>>basicInfo;\n        tempInfo.iterator = iterator;\n        tempInfo.angleFinder = getTangentQuadraticIterator(\n          x1,\n          y1,\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n        );\n        tempInfo.length = pathIterator(iterator, x1, y1);\n        x1 = current[3];\n        y1 = current[4];\n        break;\n      case 'Z':\n        // we add those in order to ease calculations later\n        tempInfo = <TEndPathInfo>basicInfo;\n        tempInfo.destX = x2;\n        tempInfo.destY = y2;\n        tempInfo.length = calcLineLength(x1, y1, x2, y2);\n        x1 = x2;\n        y1 = y2;\n        break;\n    }\n    totalLength += tempInfo.length;\n    info.push(tempInfo);\n  }\n  info.push({ length: totalLength, x: x1, y: y1 });\n  return info;\n};\n\n/**\n * Get the point on the path that is distance along the path\n * @param path\n * @param distance\n * @param infos\n */\nexport const getPointOnPath = (\n  path: TSimplePathData,\n  distance: number,\n  infos: TPathSegmentInfo[] = getPathSegmentsInfo(path),\n): TPointAngle | undefined => {\n  let i = 0;\n  while (distance - infos[i].length > 0 && i < infos.length - 2) {\n    distance -= infos[i].length;\n    i++;\n  }\n  const segInfo = infos[i],\n    segPercent = distance / segInfo.length,\n    segment = path[i];\n\n  switch (segInfo.command) {\n    case 'M':\n      return { x: segInfo.x, y: segInfo.y, angle: 0 };\n    case 'Z':\n      return {\n        ...new Point(segInfo.x, segInfo.y).lerp(\n          new Point(segInfo.destX, segInfo.destY),\n          segPercent,\n        ),\n        angle: Math.atan2(segInfo.destY - segInfo.y, segInfo.destX - segInfo.x),\n      };\n    case 'L':\n      return {\n        ...new Point(segInfo.x, segInfo.y).lerp(\n          new Point(segment[1]!, segment[2]!),\n          segPercent,\n        ),\n        angle: Math.atan2(segment[2]! - segInfo.y, segment[1]! - segInfo.x),\n      };\n    case 'C':\n      return findPercentageForDistance(segInfo, distance);\n    case 'Q':\n      return findPercentageForDistance(segInfo, distance);\n    default:\n    // throw Error('Invalid command');\n  }\n};\n\nconst rePathCmdAll = new RegExp(rePathCommand, 'gi');\nconst regExpArcCommandPoints = new RegExp(reArcCommandPoints, 'g');\nconst reMyNum = new RegExp(reNum, 'gi');\nconst commandLengths = {\n  m: 2,\n  l: 2,\n  h: 1,\n  v: 1,\n  c: 6,\n  s: 4,\n  q: 4,\n  t: 2,\n  a: 7,\n} as const;\n/**\n *\n * @param {string} pathString\n * @return {TComplexPathData} An array of SVG path commands\n * @example <caption>Usage</caption>\n * parsePath('M 3 4 Q 3 5 2 1 4 0 Q 9 12 2 1 4 0') === [\n *   ['M', 3, 4],\n *   ['Q', 3, 5, 2, 1, 4, 0],\n *   ['Q', 9, 12, 2, 1, 4, 0],\n * ];\n */\nexport const parsePath = (pathString: string): TComplexPathData => {\n  const chain: TComplexPathData = [];\n  const all = pathString.match(rePathCmdAll) ?? [];\n  for (const matchStr of all) {\n    // take match string and save the first letter as the command\n    const commandLetter = matchStr[0] as TComplexParsedCommandType;\n    // in case of Z we have very little to do\n    if (commandLetter === 'z' || commandLetter === 'Z') {\n      chain.push([commandLetter]);\n      continue;\n    }\n    const commandLength =\n      commandLengths[\n        commandLetter.toLowerCase() as keyof typeof commandLengths\n      ];\n\n    let paramArr = [];\n    if (commandLetter === 'a' || commandLetter === 'A') {\n      // the arc command ha some peculariaties that requires a special regex other than numbers\n      // it is possible to avoid using a space between the sweep and large arc flags, making them either\n      // 00, 01, 10 or 11, making them identical to a plain number for the regex reMyNum\n      // reset the regexp\n      regExpArcCommandPoints.lastIndex = 0;\n      for (let out = null; (out = regExpArcCommandPoints.exec(matchStr)); ) {\n        paramArr.push(...out.slice(1));\n      }\n    } else {\n      paramArr = matchStr.match(reMyNum) || [];\n    }\n\n    // inspect the length of paramArr, if is longer than commandLength\n    // we are dealing with repeated commands\n    for (let i = 0; i < paramArr.length; i += commandLength) {\n      const newCommand = new Array(commandLength) as TComplexParsedCommand;\n      const transformedCommand = repeatedCommands[commandLetter];\n      newCommand[0] =\n        i > 0 && transformedCommand ? transformedCommand : commandLetter;\n      for (let j = 0; j < commandLength; j++) {\n        newCommand[j + 1] = parseFloat(paramArr[i + j]);\n      }\n      chain.push(newCommand);\n    }\n  }\n  return chain;\n};\n\n/**\n *\n * Converts points to a smooth SVG path\n * @param {XY[]} points Array of points\n * @param {number} [correction] Apply a correction to the path (usually we use `width / 1000`). If value is undefined 0 is used as the correction value.\n * @return {(string|number)[][]} An array of SVG path commands\n */\nexport const getSmoothPathFromPoints = (\n  points: Point[],\n  correction = 0,\n): TSimplePathData => {\n  let p1 = new Point(points[0]),\n    p2 = new Point(points[1]),\n    multSignX = 1,\n    multSignY = 0;\n  const path: TSimplePathData = [],\n    len = points.length,\n    manyPoints = len > 2;\n\n  if (manyPoints) {\n    multSignX = points[2].x < p2.x ? -1 : points[2].x === p2.x ? 0 : 1;\n    multSignY = points[2].y < p2.y ? -1 : points[2].y === p2.y ? 0 : 1;\n  }\n  path.push([\n    'M',\n    p1.x - multSignX * correction,\n    p1.y - multSignY * correction,\n  ]);\n  let i;\n  for (i = 1; i < len; i++) {\n    if (!p1.eq(p2)) {\n      const midPoint = p1.midPointFrom(p2);\n      // p1 is our bezier control point\n      // midpoint is our endpoint\n      // start point is p(i-1) value.\n      path.push(['Q', p1.x, p1.y, midPoint.x, midPoint.y]);\n    }\n    p1 = points[i];\n    if (i + 1 < points.length) {\n      p2 = points[i + 1];\n    }\n  }\n  if (manyPoints) {\n    multSignX = p1.x > points[i - 2].x ? 1 : p1.x === points[i - 2].x ? 0 : -1;\n    multSignY = p1.y > points[i - 2].y ? 1 : p1.y === points[i - 2].y ? 0 : -1;\n  }\n  path.push([\n    'L',\n    p1.x + multSignX * correction,\n    p1.y + multSignY * correction,\n  ]);\n  return path;\n};\n\n/**\n * Transform a path by transforming each segment.\n * it has to be a simplified path or it won't work.\n * WARNING: this depends from pathOffset for correct operation\n * @param {TSimplePathData} path fabricJS parsed and simplified path commands\n * @param {TMat2D} transform matrix that represent the transformation\n * @param {Point} [pathOffset] `Path.pathOffset`\n * @returns {TSimplePathData} the transformed path\n */\nexport const transformPath = (\n  path: TSimplePathData,\n  transform: TMat2D,\n  pathOffset: Point,\n): TSimplePathData => {\n  if (pathOffset) {\n    transform = multiplyTransformMatrices(transform, [\n      1,\n      0,\n      0,\n      1,\n      -pathOffset.x,\n      -pathOffset.y,\n    ]);\n  }\n  return path.map((pathSegment) => {\n    const newSegment: TSimpleParsedCommand = [...pathSegment];\n    for (let i = 1; i < pathSegment.length - 1; i += 2) {\n      // TODO: is there a way to get around casting to any?\n      const { x, y } = transformPoint(\n        {\n          x: pathSegment[i] as number,\n          y: pathSegment[i + 1] as number,\n        },\n        transform,\n      );\n      newSegment[i] = x;\n      newSegment[i + 1] = y;\n    }\n    return newSegment;\n  });\n};\n\n/**\n * Returns an array of path commands to create a regular polygon\n * @param {number} numVertexes\n * @param {number} radius\n * @returns {TSimplePathData} An array of SVG path commands\n */\nexport const getRegularPolygonPath = (\n  numVertexes: number,\n  radius: number,\n): TSimplePathData => {\n  const interiorAngle = (Math.PI * 2) / numVertexes;\n  // rotationAdjustment rotates the path by 1/2 the interior angle so that the polygon always has a flat side on the bottom\n  // This isn't strictly necessary, but it's how we tend to think of and expect polygons to be drawn\n  let rotationAdjustment = -halfPI;\n  if (numVertexes % 2 === 0) {\n    rotationAdjustment += interiorAngle / 2;\n  }\n  const d = new Array(numVertexes + 1);\n  for (let i = 0; i < numVertexes; i++) {\n    const rad = i * interiorAngle + rotationAdjustment;\n    const { x, y } = new Point(cos(rad), sin(rad)).scalarMultiply(radius);\n    d[i] = [i === 0 ? 'M' : 'L', x, y];\n  }\n  d[numVertexes] = ['Z'];\n  return d;\n};\n\n/**\n * Join path commands to go back to svg format\n * @param {TSimplePathData} pathData fabricJS parsed path commands\n * @param {number} fractionDigits number of fraction digits to \"leave\"\n * @return {String} joined path 'M 0 0 L 20 30'\n */\nexport const joinPath = (pathData: TSimplePathData, fractionDigits?: number) =>\n  pathData\n    .map((segment) => {\n      return segment\n        .map((arg, i) => {\n          if (i === 0) return arg;\n          return fractionDigits === undefined\n            ? arg\n            : toFixed(arg, fractionDigits);\n        })\n        .join(' ');\n    })\n    .join(' ');\n","// TODO this file needs to go away, cross browser style support is not fabricjs domain.\n\n/**\n * wrapper for setting element's style\n * @param {HTMLElement} element\n * @param {Object | string} styles\n */\nexport function setStyle(\n  element: HTMLElement,\n  styles: string | Record<string, string>,\n) {\n  const elementStyle = element.style;\n  if (!elementStyle || !styles) {\n    return;\n  } else if (typeof styles === 'string') {\n    elementStyle.cssText += ';' + styles;\n  } else {\n    Object.entries(styles).forEach(([property, value]) =>\n      elementStyle.setProperty(property, value),\n    );\n  }\n}\n","import type { FabricObject } from '../../shapes/Object/FabricObject';\nimport { sendObjectToPlane } from './planeChange';\nimport { Group } from '../../shapes/Group';\n/**\n * Merges 2 clip paths into one visually equal clip path\n *\n * **IMPORTANT**:\\\n * Does **NOT** clone the arguments, clone them proir if necessary.\n *\n * Creates a wrapper (group) that contains one clip path and is clipped by the other so content is kept where both overlap.\n * Use this method if both the clip paths may have nested clip paths of their own, so assigning one to the other's clip path property is not possible.\n *\n * In order to handle the `inverted` property we follow logic described in the following cases:\\\n * **(1)** both clip paths are inverted - the clip paths pass the inverted prop to the wrapper and loose it themselves.\\\n * **(2)** one is inverted and the other isn't - the wrapper shouldn't become inverted and the inverted clip path must clip the non inverted one to produce an identical visual effect.\\\n * **(3)** both clip paths are not inverted - wrapper and clip paths remain unchanged.\n *\n * @memberOf fabric.util\n * @param {fabric.Object} c1\n * @param {fabric.Object} c2\n * @returns {fabric.Object} merged clip path\n */\nexport const mergeClipPaths = (c1: FabricObject, c2: FabricObject) => {\n  let a = c1,\n    b = c2;\n  if (a.inverted && !b.inverted) {\n    //  case (2)\n    a = c2;\n    b = c1;\n  }\n  //  `b` becomes `a`'s clip path so we transform `b` to `a` coordinate plane\n  sendObjectToPlane(b, b.group?.calcTransformMatrix(), a.calcTransformMatrix());\n  //  assign the `inverted` prop to the wrapping group\n  const inverted = a.inverted && b.inverted;\n  if (inverted) {\n    //  case (1)\n    a.inverted = b.inverted = false;\n  }\n  return new Group([a], { clipPath: b, inverted });\n};\n","/**\n * Returns random number between 2 specified ones.\n * @param {Number} min lower limit\n * @param {Number} max upper limit\n * @return {Number} random value (between min and max)\n */\nexport const getRandomInt = (min: number, max: number): number =>\n  Math.floor(Math.random() * (max - min + 1)) + min;\n","import { getFabricWindow } from '../../env';\nimport { noop } from '../../constants';\nimport type { Abortable } from '../../typedefs';\nimport { SignalAbortedError } from './console';\n\ntype requestOptions = Abortable & {\n  onComplete?: (xhr: XMLHttpRequest) => void;\n};\n\n/**\n * Cross-browser abstraction for sending XMLHttpRequest\n * @deprecated this has to go away, we can use a modern browser method to do the same.\n * @param {String} url URL to send XMLHttpRequest to\n * @param {Object} [options] Options object\n * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n * @param {Function} options.onComplete Callback to invoke when request is completed\n * @return {XMLHttpRequest} request\n */\n\nexport function request(url: string, options: requestOptions = {}) {\n  const onComplete = options.onComplete || noop,\n    xhr = new (getFabricWindow().XMLHttpRequest)(),\n    signal = options.signal,\n    abort = function () {\n      xhr.abort();\n    },\n    removeListener = function () {\n      signal && signal.removeEventListener('abort', abort);\n      xhr.onerror = xhr.ontimeout = noop;\n    };\n\n  if (signal && signal.aborted) {\n    throw new SignalAbortedError('request');\n  } else if (signal) {\n    signal.addEventListener('abort', abort, { once: true });\n  }\n\n  /** @ignore */\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState === 4) {\n      removeListener();\n      onComplete(xhr);\n      xhr.onreadystatechange = noop;\n    }\n  };\n\n  xhr.onerror = xhr.ontimeout = removeListener;\n\n  xhr.open('get', url, true);\n\n  xhr.send();\n  return xhr;\n}\n","import { CENTER, SCALE_X, SCALE_Y } from '../constants';\nimport type { FabricImage } from '../shapes/Image';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { TMat2D } from '../typedefs';\nimport { qrDecompose } from './misc/matrix';\n\ntype FabricObjectWithTransformMatrix = FabricObject & {\n  transformMatrix?: TMat2D;\n};\n\n/**\n * This function is an helper for svg import. it decompose the transformMatrix\n * and assign properties to object.\n * untransformed coordinates\n * @private\n */\nconst _assignTransformMatrixProps = (\n  object: FabricObjectWithTransformMatrix,\n) => {\n  if (object.transformMatrix) {\n    const { scaleX, scaleY, angle, skewX } = qrDecompose(\n      object.transformMatrix,\n    );\n    object.flipX = false;\n    object.flipY = false;\n    object.set(SCALE_X, scaleX);\n    object.set(SCALE_Y, scaleY);\n    object.angle = angle;\n    object.skewX = skewX;\n    object.skewY = 0;\n  }\n};\n\n/**\n * This function is an helper for svg import. it removes the transform matrix\n * and set to object properties that fabricjs can handle\n * @private\n * @param {Object} preserveAspectRatioOptions\n */\nexport const removeTransformMatrixForSvgParsing = (\n  object: FabricObjectWithTransformMatrix,\n  preserveAspectRatioOptions?: any,\n) => {\n  let center = object._findCenterFromElement();\n  if (object.transformMatrix) {\n    _assignTransformMatrixProps(object);\n    center = center.transform(object.transformMatrix);\n  }\n  delete object.transformMatrix;\n  if (preserveAspectRatioOptions) {\n    object.scaleX *= preserveAspectRatioOptions.scaleX;\n    object.scaleY *= preserveAspectRatioOptions.scaleY;\n    (object as FabricImage).cropX = preserveAspectRatioOptions.cropX;\n    (object as FabricImage).cropY = preserveAspectRatioOptions.cropY;\n    center.x += preserveAspectRatioOptions.offsetLeft;\n    center.y += preserveAspectRatioOptions.offsetTop;\n    object.width = preserveAspectRatioOptions.width;\n    object.height = preserveAspectRatioOptions.height;\n  }\n  object.setPositionByOrigin(center, CENTER, CENTER);\n};\n","import type { Point } from '../../Point';\nimport type { TRadian } from '../../typedefs';\n/**\n * Rotates `point` around `origin` with `radians`\n * @deprecated use the Point.rotate\n * @param {Point} origin The origin of the rotation\n * @param {Point} origin The origin of the rotation\n * @param {TRadian} radians The radians of the angle for the rotation\n * @return {Point} The new rotated point\n */\nexport const rotatePoint = (\n  point: Point,\n  origin: Point,\n  radians: TRadian,\n): Point => point.rotate(radians, origin);\n","import { getEnv, getFabricDocument } from '../../env';\nimport type { TSize } from '../../typedefs';\nimport { createCanvasElement, setStyle } from '../../util';\nimport type { CSSDimensions } from './util';\nimport { makeElementUnselectable, setCSSDimensions } from './util';\nimport type { CanvasItem } from './StaticCanvasDOMManager';\nimport { StaticCanvasDOMManager } from './StaticCanvasDOMManager';\nimport { setCanvasDimensions } from './util';\nimport { NONE } from '../../constants';\n\nexport class CanvasDOMManager extends StaticCanvasDOMManager {\n  upper: CanvasItem;\n  container: HTMLDivElement;\n\n  constructor(\n    arg0?: string | HTMLCanvasElement,\n    {\n      allowTouchScrolling = false,\n      containerClass = '',\n    }: {\n      allowTouchScrolling?: boolean;\n      /**\n       * @deprecated here only for backward compatibility\n       */\n      containerClass?: string;\n    } = {},\n  ) {\n    super(arg0);\n    const { el: lowerCanvasEl } = this.lower;\n    const upperCanvasEl = this.createUpperCanvas();\n    this.upper = { el: upperCanvasEl, ctx: upperCanvasEl.getContext('2d')! };\n    this.applyCanvasStyle(lowerCanvasEl, {\n      allowTouchScrolling,\n    });\n    this.applyCanvasStyle(upperCanvasEl, {\n      allowTouchScrolling,\n      styles: {\n        position: 'absolute',\n        left: '0',\n        top: '0',\n      },\n    });\n    const container = this.createContainerElement();\n    container.classList.add(containerClass);\n    if (lowerCanvasEl.parentNode) {\n      lowerCanvasEl.parentNode.replaceChild(container, lowerCanvasEl);\n    }\n    container.append(lowerCanvasEl, upperCanvasEl);\n    this.container = container;\n  }\n\n  protected createUpperCanvas() {\n    const { el: lowerCanvasEl } = this.lower;\n    const el = createCanvasElement();\n    // we assign the same classname of the lowerCanvas\n    el.className = lowerCanvasEl.className;\n    // but then we remove the lower-canvas specific className\n    el.classList.remove('lower-canvas');\n    // we add the specific upper-canvas class\n    el.classList.add('upper-canvas');\n    el.setAttribute('data-fabric', 'top');\n    el.style.cssText = lowerCanvasEl.style.cssText;\n    el.setAttribute('draggable', 'true');\n    return el;\n  }\n\n  protected createContainerElement() {\n    const container = getFabricDocument().createElement('div');\n    container.setAttribute('data-fabric', 'wrapper');\n    setStyle(container, {\n      position: 'relative',\n    });\n    makeElementUnselectable(container);\n    return container;\n  }\n\n  /**\n   * @private\n   * @param {HTMLCanvasElement} element canvas element to apply styles on\n   */\n  protected applyCanvasStyle(\n    element: HTMLCanvasElement,\n    options: {\n      allowTouchScrolling?: boolean;\n      styles?: Record<string, string>;\n    },\n  ) {\n    const { styles, allowTouchScrolling } = options;\n    setStyle(element, {\n      ...styles,\n      'touch-action': allowTouchScrolling ? 'manipulation' : NONE,\n    });\n    makeElementUnselectable(element);\n  }\n\n  setDimensions(size: TSize, retinaScaling: number) {\n    super.setDimensions(size, retinaScaling);\n    const { el, ctx } = this.upper;\n    setCanvasDimensions(el, ctx, size, retinaScaling);\n  }\n\n  setCSSDimensions(size: Partial<CSSDimensions>): void {\n    super.setCSSDimensions(size);\n    setCSSDimensions(this.upper.el, size);\n    setCSSDimensions(this.container, size);\n  }\n\n  cleanupDOM(size: TSize) {\n    const container = this.container,\n      { el: lowerCanvasEl } = this.lower,\n      { el: upperCanvasEl } = this.upper;\n    super.cleanupDOM(size);\n    container.removeChild(upperCanvasEl);\n    container.removeChild(lowerCanvasEl);\n    if (container.parentNode) {\n      container.parentNode.replaceChild(lowerCanvasEl, container);\n    }\n  }\n\n  dispose() {\n    super.dispose();\n    getEnv().dispose(this.upper.el);\n    // @ts-expect-error disposing\n    delete this.upper;\n    // @ts-expect-error disposing\n    delete this.container;\n  }\n}\n","import { dragHandler } from '../controls/drag';\nimport { getActionFromCorner } from '../controls/util';\nimport { Point } from '../Point';\nimport { FabricObject } from '../shapes/Object/FabricObject';\nimport type {\n  CanvasEvents,\n  ModifierKey,\n  TOptionalModifierKey,\n  TPointerEvent,\n  Transform,\n} from '../EventTypeDefs';\nimport {\n  addTransformToObject,\n  saveObjectTransform,\n} from '../util/misc/objectTransforms';\nimport type { TCanvasSizeOptions } from './StaticCanvas';\nimport { StaticCanvas } from './StaticCanvas';\nimport { isCollection } from '../Collection';\nimport { isTransparent } from '../util/misc/isTransparent';\nimport type {\n  TMat2D,\n  TOriginX,\n  TOriginY,\n  TSize,\n  TSVGReviver,\n} from '../typedefs';\nimport { degreesToRadians } from '../util/misc/radiansDegreesConversion';\nimport { getPointer, isTouchEvent } from '../util/dom_event';\nimport type { IText } from '../shapes/IText/IText';\nimport type { BaseBrush } from '../brushes/BaseBrush';\nimport { pick } from '../util/misc/pick';\nimport { sendPointToPlane } from '../util/misc/planeChange';\nimport { cos, createCanvasElement, sin } from '../util';\nimport { CanvasDOMManager } from './DOMManagers/CanvasDOMManager';\nimport {\n  BOTTOM,\n  CENTER,\n  LEFT,\n  MODIFIED,\n  RESIZING,\n  RIGHT,\n  ROTATE,\n  SCALE,\n  SCALE_X,\n  SCALE_Y,\n  SKEW_X,\n  SKEW_Y,\n  TOP,\n} from '../constants';\nimport type { CanvasOptions } from './CanvasOptions';\nimport { canvasDefaults } from './CanvasOptions';\nimport { Intersection } from '../Intersection';\nimport { isActiveSelection } from '../util/typeAssertions';\n\n/**\n * Canvas class\n * @class Canvas\n * @extends StaticCanvas\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\n *\n * @fires object:modified at the end of a transform\n * @fires object:rotating while an object is being rotated from the control\n * @fires object:scaling while an object is being scaled by controls\n * @fires object:moving while an object is being dragged\n * @fires object:skewing while an object is being skewed from the controls\n *\n * @fires before:transform before a transform is is started\n * @fires before:selection:cleared\n * @fires selection:cleared\n * @fires selection:updated\n * @fires selection:created\n *\n * @fires path:created after a drawing operation ends and the path is added\n * @fires mouse:down\n * @fires mouse:move\n * @fires mouse:up\n * @fires mouse:down:before  on mouse down, before the inner fabric logic runs\n * @fires mouse:move:before on mouse move, before the inner fabric logic runs\n * @fires mouse:up:before on mouse up, before the inner fabric logic runs\n * @fires mouse:over\n * @fires mouse:out\n * @fires mouse:dblclick whenever a native dbl click event fires on the canvas.\n *\n * @fires dragover\n * @fires dragenter\n * @fires dragleave\n * @fires drag:enter object drag enter\n * @fires drag:leave object drag leave\n * @fires drop:before before drop event. Prepare for the drop event (same native event).\n * @fires drop\n * @fires drop:after after drop event. Run logic on canvas after event has been accepted/declined (same native event).\n * @example\n * let a: fabric.Object, b: fabric.Object;\n * let flag = false;\n * canvas.add(a, b);\n * a.on('drop:before', opt => {\n *  //  we want a to accept the drop even though it's below b in the stack\n *  flag = this.canDrop(opt.e);\n * });\n * b.canDrop = function(e) {\n *  !flag && this.draggableTextDelegate.canDrop(e);\n * }\n * b.on('dragover', opt => b.set('fill', opt.dropTarget === b ? 'pink' : 'black'));\n * a.on('drop', opt => {\n *  opt.e.defaultPrevented  //  drop occurred\n *  opt.didDrop             //  drop occurred on canvas\n *  opt.target              //  drop target\n *  opt.target !== a && a.set('text', 'I lost');\n * });\n * canvas.on('drop:after', opt => {\n *  //  inform user who won\n *  if(!opt.e.defaultPrevented) {\n *    // no winners\n *  }\n *  else if(!opt.didDrop) {\n *    //  my objects didn't win, some other lucky object\n *  }\n *  else {\n *    //  we have a winner it's opt.target!!\n *  }\n * })\n *\n * @fires after:render at the end of the render process, receives the context in the callback\n * @fires before:render at start the render process, receives the context in the callback\n *\n * @fires contextmenu:before\n * @fires contextmenu\n * @example\n * let handler;\n * targets.forEach(target => {\n *   target.on('contextmenu:before', opt => {\n *     //  decide which target should handle the event before canvas hijacks it\n *     if (someCaseHappens && opt.targets.includes(target)) {\n *       handler = target;\n *     }\n *   });\n *   target.on('contextmenu', opt => {\n *     //  do something fantastic\n *   });\n * });\n * canvas.on('contextmenu', opt => {\n *   if (!handler) {\n *     //  no one takes responsibility, it's always left to me\n *     //  let's show them how it's done!\n *   }\n * });\n *\n */\nexport class SelectableCanvas<EventSpec extends CanvasEvents = CanvasEvents>\n  extends StaticCanvas<EventSpec>\n  implements Omit<CanvasOptions, 'enablePointerEvents'> {\n  declare _objects: FabricObject[];\n\n  // transform config\n  declare uniformScaling: boolean;\n  declare uniScaleKey: TOptionalModifierKey;\n  declare centeredScaling: boolean;\n  declare centeredRotation: boolean;\n  declare centeredKey: TOptionalModifierKey;\n  declare altActionKey: TOptionalModifierKey;\n  declare snapAngleKey: TOptionalModifierKey;\n\n  // selection config\n  declare selection: boolean;\n  declare selectionKey: TOptionalModifierKey | ModifierKey[];\n  declare altSelectionKey: TOptionalModifierKey;\n  declare selectionColor: string;\n  declare selectionDashArray: number[];\n  declare selectionBorderColor: string;\n  declare selectionLineWidth: number;\n  declare selectionFullyContained: boolean;\n\n  // cursors\n  declare hoverCursor: CSSStyleDeclaration['cursor'];\n  declare moveCursor: CSSStyleDeclaration['cursor'];\n  declare defaultCursor: CSSStyleDeclaration['cursor'];\n  declare freeDrawingCursor: CSSStyleDeclaration['cursor'];\n  declare notAllowedCursor: CSSStyleDeclaration['cursor'];\n\n  declare containerClass: string;\n\n  // target find config\n  declare perPixelTargetFind: boolean;\n  declare targetFindTolerance: number;\n  declare skipTargetFind: boolean;\n\n  // snapping\n  declare snapPointFn?: (point: [number, number]) => [number, number];\n  declare snapObjectFn?: (object: FabricObject, diff: [number, number]) => [number, number];\n\n  /**\n   * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\n   * After mousedown, mousemove creates a shape,\n   * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\n   * @type Boolean\n   * @default\n   */\n  declare isDrawingMode: boolean;\n\n  declare preserveObjectStacking: boolean;\n\n  // event config\n  declare stopContextMenu: boolean;\n  declare fireRightClick: boolean;\n  declare fireMiddleClick: boolean;\n\n  /**\n   * Keep track of the subTargets for Mouse Events, ordered bottom up from innermost nested subTarget\n   * @type FabricObject[]\n   */\n  targets: FabricObject[] = [];\n\n  /**\n   * Keep track of the hovered target\n   * @type FabricObject | null\n   * @private\n   */\n  declare _hoveredTarget?: FabricObject;\n\n  /**\n   * hold the list of nested targets hovered\n   * @type FabricObject[]\n   * @private\n   */\n  _hoveredTargets: FabricObject[] = [];\n\n  /**\n   * hold the list of objects to render\n   * @type FabricObject[]\n   * @private\n   */\n  _objectsToRender?: FabricObject[];\n\n  /**\n   * hold a reference to a data structure that contains information\n   * on the current on going transform\n   * @type\n   * @private\n   */\n  _currentTransform: Transform | null = null;\n\n  /**\n   * hold a reference to a data structure used to track the selection\n   * box on canvas drag\n   * on the current on going transform\n   * x, y, deltaX and deltaY are in scene plane\n   * @type\n   * @private\n   */\n  protected _groupSelector: {\n    x: number;\n    y: number;\n    deltaX: number;\n    deltaY: number;\n  } | null = null;\n\n  /**\n   * internal flag used to understand if the context top requires a cleanup\n   * in case this is true, the contextTop will be cleared at the next render\n   * @type boolean\n   * @private\n   */\n  contextTopDirty = false;\n\n  /**\n   * During a mouse event we may need the pointer multiple times in multiple functions.\n   * _absolutePointer holds a reference to the pointer in fabricCanvas/design coordinates that is valid for the event\n   * lifespan. Every fabricJS mouse event create and delete the cache every time\n   * We do this because there are some HTML DOM inspection functions to get the actual pointer coordinates\n   * @type {Point}\n   */\n  protected declare _absolutePointer?: Point;\n\n  /**\n   * During a mouse event we may need the pointer multiple times in multiple functions.\n   * _pointer holds a reference to the pointer in html coordinates that is valid for the event\n   * lifespan. Every fabricJS mouse event create and delete the cache every time\n   * We do this because there are some HTML DOM inspection functions to get the actual pointer coordinates\n   * @type {Point}\n   */\n  protected declare _pointer?: Point;\n\n  /**\n   * During a mouse event we may need the target multiple times in multiple functions.\n   * _target holds a reference to the target that is valid for the event\n   * lifespan. Every fabricJS mouse event create and delete the cache every time\n   * @type {FabricObject}\n   */\n  protected declare _target?: FabricObject;\n\n  static ownDefaults = canvasDefaults;\n\n  static getDefaults(): Record<string, any> {\n    return { ...super.getDefaults(), ...SelectableCanvas.ownDefaults };\n  }\n\n  declare elements: CanvasDOMManager;\n  get upperCanvasEl() {\n    return this.elements.upper?.el;\n  }\n  get contextTop() {\n    return this.elements.upper?.ctx;\n  }\n  get wrapperEl() {\n    return this.elements.container;\n  }\n  private declare pixelFindCanvasEl: HTMLCanvasElement;\n  private declare pixelFindContext: CanvasRenderingContext2D;\n\n  protected declare _isCurrentlyDrawing: boolean;\n  declare freeDrawingBrush?: BaseBrush;\n  declare _activeObject?: FabricObject;\n\n  protected initElements(el?: string | HTMLCanvasElement) {\n    this.elements = new CanvasDOMManager(el, {\n      allowTouchScrolling: this.allowTouchScrolling,\n      containerClass: this.containerClass,\n    });\n    this._createCacheCanvas();\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} obj Object that was added\n   */\n  _onObjectAdded(obj: FabricObject) {\n    this._objectsToRender = undefined;\n    super._onObjectAdded(obj);\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} obj Object that was removed\n   */\n  _onObjectRemoved(obj: FabricObject) {\n    this._objectsToRender = undefined;\n    // removing active object should fire \"selection:cleared\" events\n    if (obj === this._activeObject) {\n      this.fire('before:selection:cleared', { deselected: [obj] });\n      this._discardActiveObject();\n      this.fire('selection:cleared', { deselected: [obj] });\n      obj.fire('deselected', {\n        target: obj,\n      });\n    }\n    if (obj === this._hoveredTarget) {\n      this._hoveredTarget = undefined;\n      this._hoveredTargets = [];\n    }\n    super._onObjectRemoved(obj);\n  }\n\n  _onStackOrderChanged() {\n    this._objectsToRender = undefined;\n    super._onStackOrderChanged();\n  }\n\n  /**\n   * Divides objects in two groups, one to render immediately\n   * and one to render as activeGroup.\n   * @return {Array} objects to render immediately and pushes the other in the activeGroup.\n   */\n  _chooseObjectsToRender(): FabricObject[] {\n    const activeObject = this._activeObject;\n    return !this.preserveObjectStacking && activeObject\n      ? this._objects\n        .filter((object) => !object.group && object !== activeObject)\n        .concat(activeObject)\n      : this._objects;\n  }\n\n  /**\n   * Renders both the top canvas and the secondary container canvas.\n   */\n  renderAll() {\n    this.cancelRequestedRender();\n    if (this.destroyed) {\n      return;\n    }\n    if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\n      this.clearContext(this.contextTop);\n      this.contextTopDirty = false;\n    }\n    if (this.hasLostContext) {\n      this.renderTopLayer(this.contextTop);\n      this.hasLostContext = false;\n    }\n    !this._objectsToRender &&\n      (this._objectsToRender = this._chooseObjectsToRender());\n    this.renderCanvas(this.getContext(), this._objectsToRender);\n  }\n\n  /**\n   * text selection is rendered by the active text instance during the rendering cycle\n   */\n  renderTopLayer(ctx: CanvasRenderingContext2D): void {\n    ctx.save();\n    if (this.isDrawingMode && this._isCurrentlyDrawing) {\n      this.freeDrawingBrush && this.freeDrawingBrush._render();\n      this.contextTopDirty = true;\n    }\n    // we render the top context - last object\n    if (this.selection && this._groupSelector) {\n      this._drawSelection(ctx);\n      this.contextTopDirty = true;\n    }\n    ctx.restore();\n  }\n\n  /**\n   * Method to render only the top canvas.\n   * Also used to render the group selection box.\n   * Does not render text selection.\n   */\n  renderTop() {\n    const ctx = this.contextTop;\n    this.clearContext(ctx);\n    this.renderTopLayer(ctx);\n    // todo: how do i know if the after:render is for the top or normal contex?\n    this.fire('after:render', { ctx });\n  }\n\n  /**\n   * Set the canvas tolerance value for pixel taret find.\n   * Use only integer numbers.\n   * @private\n   */\n  setTargetFindTolerance(value: number) {\n    value = Math.round(value);\n    this.targetFindTolerance = value;\n    const retina = this.getRetinaScaling();\n    const size = Math.ceil((value * 2 + 1) * retina);\n    this.pixelFindCanvasEl.width = this.pixelFindCanvasEl.height = size;\n    this.pixelFindContext.scale(retina, retina);\n  }\n\n  /**\n   * Returns true if object is transparent at a certain location\n   * Clarification: this is `is target transparent at location X or are controls there`\n   * @TODO this seems dumb that we treat controls with transparency. we can find controls\n   * programmatically without painting them, the cache canvas optimization is always valid\n   * @param {FabricObject} target Object to check\n   * @param {Number} x Left coordinate in viewport space\n   * @param {Number} y Top coordinate in viewport space\n   * @return {Boolean}\n   */\n  isTargetTransparent(target: FabricObject, x: number, y: number): boolean {\n    const tolerance = this.targetFindTolerance;\n    const ctx = this.pixelFindContext;\n    this.clearContext(ctx);\n    ctx.save();\n    ctx.translate(-x + tolerance, -y + tolerance);\n    ctx.transform(...this.viewportTransform);\n    const selectionBgc = target.selectionBackgroundColor;\n    target.selectionBackgroundColor = '';\n    target.render(ctx);\n    target.selectionBackgroundColor = selectionBgc;\n    ctx.restore();\n    // our canvas is square, and made around tolerance.\n    // so tolerance in this case also represent the center of the canvas.\n    const enhancedTolerance = Math.round(tolerance * this.getRetinaScaling());\n    return isTransparent(\n      ctx,\n      enhancedTolerance,\n      enhancedTolerance,\n      enhancedTolerance,\n    );\n  }\n\n  /**\n   * takes an event and determines if selection key has been pressed\n   * @private\n   * @param {TPointerEvent} e Event object\n   */\n  _isSelectionKeyPressed(e: TPointerEvent): boolean {\n    const sKey = this.selectionKey;\n    if (!sKey) {\n      return false;\n    }\n    if (Array.isArray(sKey)) {\n      return !!sKey.find((key) => !!key && e[key] === true);\n    } else {\n      return e[sKey];\n    }\n  }\n\n  /**\n   * @private\n   * @param {TPointerEvent} e Event object\n   * @param {FabricObject} target\n   */\n  _shouldClearSelection(\n    e: TPointerEvent,\n    target?: FabricObject,\n  ): target is undefined {\n    const activeObjects = this.getActiveObjects(),\n      activeObject = this._activeObject;\n\n    return !!(\n      !target ||\n      (target &&\n        activeObject &&\n        activeObjects.length > 1 &&\n        activeObjects.indexOf(target) === -1 &&\n        activeObject !== target &&\n        !this._isSelectionKeyPressed(e)) ||\n      (target && !target.evented) ||\n      (target && !target.selectable && activeObject && activeObject !== target)\n    );\n  }\n\n  /**\n   * This method will take in consideration a modifier key pressed and the control we are\n   * about to drag, and try to guess the anchor point ( origin ) of the transormation.\n   * This should be really in the realm of controls, and we should remove specific code for legacy\n   * embedded actions.\n   * @TODO this probably deserve discussion/rediscovery and change/refactor\n   * @private\n   * @deprecated\n   * @param {FabricObject} target\n   * @param {string} action\n   * @param {boolean} altKey\n   * @returns {boolean} true if the transformation should be centered\n   */\n  private _shouldCenterTransform(\n    target: FabricObject,\n    action: string,\n    modifierKeyPressed: boolean,\n  ) {\n    if (!target) {\n      return;\n    }\n\n    let centerTransform;\n\n    if (\n      action === SCALE ||\n      action === SCALE_X ||\n      action === SCALE_Y ||\n      action === RESIZING\n    ) {\n      centerTransform = this.centeredScaling || target.centeredScaling;\n    } else if (action === ROTATE) {\n      centerTransform = this.centeredRotation || target.centeredRotation;\n    }\n\n    return centerTransform ? !modifierKeyPressed : modifierKeyPressed;\n  }\n\n  /**\n   * Given the control clicked, determine the origin of the transform.\n   * This is bad because controls can totally have custom names\n   * should disappear before release 4.0\n   * @private\n   * @deprecated\n   */\n  _getOriginFromCorner(\n    target: FabricObject,\n    controlName: string,\n  ): { x: TOriginX; y: TOriginY } {\n    const origin = {\n      x: target.originX,\n      y: target.originY,\n    };\n\n    if (!controlName) {\n      return origin;\n    }\n\n    // is a left control ?\n    if (['ml', 'tl', 'bl'].includes(controlName)) {\n      origin.x = RIGHT;\n      // is a right control ?\n    } else if (['mr', 'tr', 'br'].includes(controlName)) {\n      origin.x = LEFT;\n    }\n    // is a top control ?\n    if (['tl', 'mt', 'tr'].includes(controlName)) {\n      origin.y = BOTTOM;\n      // is a bottom control ?\n    } else if (['bl', 'mb', 'br'].includes(controlName)) {\n      origin.y = TOP;\n    }\n    return origin;\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   * @param {FabricObject} target\n   * @param {boolean} [alreadySelected] pass true to setup the active control\n   */\n  _setupCurrentTransform(\n    e: TPointerEvent,\n    target: FabricObject,\n    alreadySelected: boolean,\n  ): void {\n    const pointer = target.group\n      ? // transform pointer to target's containing coordinate plane\n      sendPointToPlane(\n        this.getScenePoint(e),\n        undefined,\n        target.group.calcTransformMatrix(),\n      )\n      : this.getScenePoint(e);\n    const { key: corner = '', control } = target.getActiveControl() || {},\n      actionHandler =\n        alreadySelected && control\n          ? control.getActionHandler(e, target, control)?.bind(control)\n          : dragHandler,\n      action = getActionFromCorner(alreadySelected, corner, e, target),\n      altKey = e[this.centeredKey as ModifierKey],\n      origin = this._shouldCenterTransform(target, action, altKey)\n        ? ({ x: CENTER, y: CENTER } as const)\n        : this._getOriginFromCorner(target, corner),\n      /**\n       * relative to target's containing coordinate plane\n       * both agree on every point\n       **/\n      transform: Transform = {\n        target: target,\n        action,\n        actionHandler,\n        actionPerformed: false,\n        corner,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        offsetX: pointer.x - target.left,\n        offsetY: pointer.y - target.top,\n        originX: origin.x,\n        originY: origin.y,\n        ex: pointer.x,\n        ey: pointer.y,\n        lastX: pointer.x,\n        lastY: pointer.y,\n        theta: degreesToRadians(target.angle),\n        width: target.width,\n        height: target.height,\n        shiftKey: e.shiftKey,\n        altKey,\n        original: {\n          ...saveObjectTransform(target),\n          originX: origin.x,\n          originY: origin.y,\n        },\n      };\n\n    this._currentTransform = transform;\n\n    this.fire('before:transform', {\n      e,\n      transform,\n    });\n  }\n\n  /**\n   * Set the cursor type of the canvas element\n   * @param {String} value Cursor type of the canvas element.\n   * @see http://www.w3.org/TR/css3-ui/#cursor\n   */\n  setCursor(value: CSSStyleDeclaration['cursor']): void {\n    this.upperCanvasEl.style.cursor = value;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx to draw the selection on\n   */\n  _drawSelection(ctx: CanvasRenderingContext2D): void {\n    const { x, y, deltaX, deltaY } = this._groupSelector!,\n      start = new Point(x, y).transform(this.viewportTransform),\n      extent = new Point(x + deltaX, y + deltaY).transform(\n        this.viewportTransform,\n      ),\n      strokeOffset = this.selectionLineWidth / 2;\n    let minX = Math.min(start.x, extent.x),\n      minY = Math.min(start.y, extent.y),\n      maxX = Math.max(start.x, extent.x),\n      maxY = Math.max(start.y, extent.y);\n\n    if (this.selectionColor) {\n      ctx.fillStyle = this.selectionColor;\n      ctx.fillRect(minX, minY, maxX - minX, maxY - minY);\n    }\n\n    if (!this.selectionLineWidth || !this.selectionBorderColor) {\n      return;\n    }\n    ctx.lineWidth = this.selectionLineWidth;\n    ctx.strokeStyle = this.selectionBorderColor;\n\n    minX += strokeOffset;\n    minY += strokeOffset;\n    maxX -= strokeOffset;\n    maxY -= strokeOffset;\n    // selection border\n    // @TODO: is _setLineDash still necessary on modern canvas?\n    FabricObject.prototype._setLineDash.call(\n      this,\n      ctx,\n      this.selectionDashArray,\n    );\n    ctx.strokeRect(minX, minY, maxX - minX, maxY - minY);\n  }\n\n  /**\n   * Method that determines what object we are clicking on\n   * 11/09/2018 TODO: would be cool if findTarget could discern between being a full target\n   * or the outside part of the corner.\n   * @param {Event} e mouse event\n   * @return {FabricObject | null} the target found\n   */\n  findTarget(e: TPointerEvent): FabricObject | undefined {\n    if (this.skipTargetFind) {\n      return undefined;\n    }\n\n    const pointer = this.getViewportPoint(e),\n      activeObject = this._activeObject,\n      aObjects = this.getActiveObjects();\n\n    this.targets = [];\n\n    if (activeObject && aObjects.length >= 1) {\n      if (activeObject.findControl(pointer, isTouchEvent(e))) {\n        // if we hit the corner of the active object, let's return that.\n        return activeObject;\n      } else if (\n        aObjects.length > 1 &&\n        // check pointer is over active selection and possibly perform `subTargetCheck`\n        this.searchPossibleTargets([activeObject], pointer)\n      ) {\n        // active selection does not select sub targets like normal groups\n        return activeObject;\n      } else if (\n        activeObject === this.searchPossibleTargets([activeObject], pointer)\n      ) {\n        // active object is not an active selection\n        if (!this.preserveObjectStacking) {\n          return activeObject;\n        } else {\n          const subTargets = this.targets;\n          this.targets = [];\n          const target = this.searchPossibleTargets(this._objects, pointer);\n          if (\n            e[this.altSelectionKey as ModifierKey] &&\n            target &&\n            target !== activeObject\n          ) {\n            // alt selection: select active object even though it is not the top most target\n            // restore targets\n            this.targets = subTargets;\n            return activeObject;\n          }\n          return target;\n        }\n      }\n    }\n\n    return this.searchPossibleTargets(this._objects, pointer);\n  }\n\n  /**\n   * Checks if the point is inside the object selection area including padding\n   * @param {FabricObject} obj Object to test against\n   * @param {Object} [pointer] point in scene coordinates\n   * @return {Boolean} true if point is contained within an area of given object\n   * @private\n   */\n  private _pointIsInObjectSelectionArea(obj: FabricObject, point: Point) {\n    // getCoords will already take care of group de-nesting\n    let coords = obj.getCoords();\n    const viewportZoom = this.getZoom();\n    const padding = obj.padding / viewportZoom;\n    if (padding) {\n      const [tl, tr, br, bl] = coords;\n      // what is the angle of the object?\n      // we could use getTotalAngle, but is way easier to look at it\n      // from how coords are oriented, since if something went wrong\n      // at least we are consistent.\n      const angleRadians = Math.atan2(tr.y - tl.y, tr.x - tl.x),\n        cosP = cos(angleRadians) * padding,\n        sinP = sin(angleRadians) * padding,\n        cosPSinP = cosP + sinP,\n        cosPMinusSinP = cosP - sinP;\n\n      coords = [\n        new Point(tl.x - cosPMinusSinP, tl.y - cosPSinP),\n        new Point(tr.x + cosPSinP, tr.y - cosPMinusSinP),\n        new Point(br.x + cosPMinusSinP, br.y + cosPSinP),\n        new Point(bl.x - cosPSinP, bl.y + cosPMinusSinP),\n      ];\n      // in case of padding we calculate the new coords on the fly.\n      // otherwise we have to maintain 2 sets of coordinates for everything.\n      // we can reiterate on storing them.\n      // if this is slow, for now the semplification is large and doesn't impact\n      // rendering.\n      // the idea behind this is that outside target check we don't need ot know\n      // where those coords are\n    }\n    return Intersection.isPointInPolygon(point, coords);\n  }\n\n  /**\n   * Checks point is inside the object selection condition. Either area with padding\n   * or over pixels if perPixelTargetFind is enabled\n   * @param {FabricObject} obj Object to test against\n   * @param {Object} [pointer] point from viewport.\n   * @return {Boolean} true if point is contained within an area of given object\n   * @private\n   */\n  _checkTarget(obj: FabricObject, pointer: Point): boolean {\n    if (\n      obj &&\n      obj.visible &&\n      obj.evented &&\n      this._pointIsInObjectSelectionArea(\n        obj,\n        sendPointToPlane(pointer, undefined, this.viewportTransform),\n      )\n    ) {\n      if (\n        (this.perPixelTargetFind || obj.perPixelTargetFind) &&\n        !(obj as unknown as IText).isEditing\n      ) {\n        if (!this.isTargetTransparent(obj, pointer.x, pointer.y)) {\n          return true;\n        }\n      } else {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Internal Function used to search inside objects an object that contains pointer in bounding box or that contains pointerOnCanvas when painted\n   * @param {Array} [objects] objects array to look into\n   * @param {Object} [pointer] x,y object of point coordinates we want to check.\n   * @return {FabricObject} **top most object from given `objects`** that contains pointer\n   * @private\n   */\n  _searchPossibleTargets(\n    objects: FabricObject[],\n    pointer: Point,\n  ): FabricObject | undefined {\n    // Cache all targets where their bounding box contains point.\n    let i = objects.length;\n    // Do not check for currently grouped objects, since we check the parent group itself.\n    // until we call this function specifically to search inside the activeGroup\n    while (i--) {\n      const target = objects[i];\n      if (this._checkTarget(target, pointer)) {\n        if (isCollection(target) && target.subTargetCheck) {\n          const subTarget = this._searchPossibleTargets(\n            target._objects as FabricObject[],\n            pointer,\n          );\n          subTarget && this.targets.push(subTarget);\n        }\n        return target;\n      }\n    }\n  }\n\n  /**\n   * Function used to search inside objects an object that contains pointer in bounding box or that contains pointerOnCanvas when painted\n   * @see {@link _searchPossibleTargets}\n   * @param {FabricObject[]} [objects] objects array to look into\n   * @param {Point} [pointer] coordinates from viewport to check.\n   * @return {FabricObject} **top most object on screen** that contains pointer\n   */\n  searchPossibleTargets(\n    objects: FabricObject[],\n    pointer: Point,\n  ): FabricObject | undefined {\n    const target = this._searchPossibleTargets(objects, pointer);\n\n    // if we found something in this.targets, and the group is interactive, return the innermost subTarget\n    // that is still interactive\n    // TODO: reverify why interactive. the target should be returned always, but selected only\n    // if interactive.\n    if (\n      target &&\n      isCollection(target) &&\n      target.interactive &&\n      this.targets[0]\n    ) {\n      /** targets[0] is the innermost nested target, but it could be inside non interactive groups and so not a selection target */\n      const targets = this.targets;\n      for (let i = targets.length - 1; i > 0; i--) {\n        const t = targets[i];\n        if (!(isCollection(t) && t.interactive)) {\n          // one of the subtargets was not interactive. that is the last subtarget we can return.\n          // we can't dig more deep;\n          return t;\n        }\n      }\n      return targets[0];\n    }\n\n    return target;\n  }\n\n  /**\n   * @returns point existing in the same plane as the {@link HTMLCanvasElement},\n   * `(0, 0)` being the top left corner of the {@link HTMLCanvasElement}.\n   * This means that changes to the {@link viewportTransform} do not change the values of the point\n   * and it remains unchanged from the viewer's perspective.\n   *\n   * @example\n   * const scenePoint = sendPointToPlane(\n   *  this.getViewportPoint(e),\n   *  undefined,\n   *  canvas.viewportTransform\n   * );\n   *\n   */\n  getViewportPoint(e: TPointerEvent) {\n    if (this._pointer) {\n      return this._pointer;\n    }\n    return this.getPointer(e, true);\n  }\n\n  /**\n   * @returns point existing in the scene (the same plane as the plane {@link FabricObject#getCenterPoint} exists in).\n   * This means that changes to the {@link viewportTransform} do not change the values of the point,\n   * however, from the viewer's perspective, the point is changed.\n   *\n   * @example\n   * const viewportPoint = sendPointToPlane(\n   *  this.getScenePoint(e),\n   *  canvas.viewportTransform\n   * );\n   *\n   */\n  getScenePoint(e: TPointerEvent) {\n    if (this._absolutePointer) {\n      return this._absolutePointer;\n    }\n    return this.getPointer(e);\n  }\n\n  /**\n   * Returns pointer relative to canvas.\n   *\n   * @deprecated This method is deprecated since v6 to protect you from misuse.\n   * Use {@link getViewportPoint} or {@link getScenePoint} instead.\n   *\n   * @param {Event} e\n   * @param {Boolean} [fromViewport] whether to return the point from the viewport or in the scene\n   * @return {Point}\n   */\n  getPointer(e: TPointerEvent, fromViewport = false): Point {\n    const upperCanvasEl = this.upperCanvasEl,\n      bounds = upperCanvasEl.getBoundingClientRect();\n    let pointer = getPointer(e),\n      boundsWidth = bounds.width || 0,\n      boundsHeight = bounds.height || 0;\n\n    if (!boundsWidth || !boundsHeight) {\n      if (TOP in bounds && BOTTOM in bounds) {\n        boundsHeight = Math.abs(bounds.top - bounds.bottom);\n      }\n      if (RIGHT in bounds && LEFT in bounds) {\n        boundsWidth = Math.abs(bounds.right - bounds.left);\n      }\n    }\n\n    this.calcOffset();\n    pointer.x = pointer.x - this._offset.left;\n    pointer.y = pointer.y - this._offset.top;\n    if (!fromViewport) {\n      pointer = sendPointToPlane(pointer, undefined, this.viewportTransform);\n    }\n\n    const retinaScaling = this.getRetinaScaling();\n    if (retinaScaling !== 1) {\n      pointer.x /= retinaScaling;\n      pointer.y /= retinaScaling;\n    }\n\n    // If bounds are not available (i.e. not visible), do not apply scale.\n    const cssScale =\n      boundsWidth === 0 || boundsHeight === 0\n        ? new Point(1, 1)\n        : new Point(\n          upperCanvasEl.width / boundsWidth,\n          upperCanvasEl.height / boundsHeight,\n        );\n\n    return pointer.multiply(cssScale);\n  }\n\n  /**\n   * Internal use only\n   * @protected\n   */\n  protected _setDimensionsImpl(\n    dimensions: TSize,\n    options?: TCanvasSizeOptions,\n  ) {\n    // @ts-expect-error this method exists in the subclass - should be moved or declared as abstract\n    this._resetTransformEventData();\n    super._setDimensionsImpl(dimensions, options);\n    if (this._isCurrentlyDrawing) {\n      this.freeDrawingBrush &&\n        this.freeDrawingBrush._setBrushStyles(this.contextTop);\n    }\n  }\n\n  protected _createCacheCanvas() {\n    this.pixelFindCanvasEl = createCanvasElement();\n    this.pixelFindContext = this.pixelFindCanvasEl.getContext('2d', {\n      willReadFrequently: true,\n    })!;\n    this.setTargetFindTolerance(this.targetFindTolerance);\n  }\n\n  /**\n   * Returns context of top canvas where interactions are drawn\n   * @returns {CanvasRenderingContext2D}\n   */\n  getTopContext(): CanvasRenderingContext2D {\n    return this.elements.upper.ctx;\n  }\n\n  /**\n   * Returns context of canvas where object selection is drawn\n   * @alias\n   * @return {CanvasRenderingContext2D}\n   */\n  getSelectionContext(): CanvasRenderingContext2D {\n    return this.elements.upper.ctx;\n  }\n\n  /**\n   * Returns &lt;canvas> element on which object selection is drawn\n   * @return {HTMLCanvasElement}\n   */\n  getSelectionElement(): HTMLCanvasElement {\n    return this.elements.upper.el;\n  }\n\n  /**\n   * Returns currently active object\n   * @return {FabricObject | null} active object\n   */\n  getActiveObject(): FabricObject | undefined {\n    return this._activeObject;\n  }\n\n  /**\n   * Returns an array with the current selected objects\n   * @return {FabricObject[]} active objects array\n   */\n  getActiveObjects(): FabricObject[] {\n    const active = this._activeObject;\n    return isActiveSelection(active)\n      ? active.getObjects()\n      : active\n        ? [active]\n        : [];\n  }\n\n  /**\n   * @private\n   * Compares the old activeObject with the current one and fires correct events\n   * @param {FabricObject[]} oldObjects old activeObject\n   * @param {TPointerEvent} e mouse event triggering the selection events\n   */\n  _fireSelectionEvents(oldObjects: FabricObject[], e?: TPointerEvent) {\n    let somethingChanged = false,\n      invalidate = false;\n    const objects = this.getActiveObjects(),\n      added: FabricObject[] = [],\n      removed: FabricObject[] = [];\n\n    oldObjects.forEach((target) => {\n      if (!objects.includes(target)) {\n        somethingChanged = true;\n        target.fire('deselected', {\n          e,\n          target,\n        });\n        removed.push(target);\n      }\n    });\n\n    objects.forEach((target) => {\n      if (!oldObjects.includes(target)) {\n        somethingChanged = true;\n        target.fire('selected', {\n          e,\n          target,\n        });\n        added.push(target);\n      }\n    });\n\n    if (oldObjects.length > 0 && objects.length > 0) {\n      invalidate = true;\n      somethingChanged &&\n        this.fire('selection:updated', {\n          e,\n          selected: added,\n          deselected: removed,\n        });\n    } else if (objects.length > 0) {\n      invalidate = true;\n      this.fire('selection:created', {\n        e,\n        selected: added,\n      });\n    } else if (oldObjects.length > 0) {\n      invalidate = true;\n      this.fire('selection:cleared', {\n        e,\n        deselected: removed,\n      });\n    }\n    invalidate && (this._objectsToRender = undefined);\n  }\n\n  /**\n   * Sets given object as the only active object on canvas\n   * @param {FabricObject} object Object to set as an active one\n   * @param {TPointerEvent} [e] Event (passed along when firing \"object:selected\")\n   * @return {Boolean} true if the object has been selected\n   */\n  setActiveObject(object: FabricObject, e?: TPointerEvent) {\n    // we can't inline this, since _setActiveObject will change what getActiveObjects returns\n    const currentActives = this.getActiveObjects();\n    const selected = this._setActiveObject(object, e);\n    this._fireSelectionEvents(currentActives, e);\n    return selected;\n  }\n\n  /**\n   * This is supposed to be equivalent to setActiveObject but without firing\n   * any event. There is commitment to have this stay this way.\n   * This is the functional part of setActiveObject.\n   * @param {Object} object to set as active\n   * @param {Event} [e] Event (passed along when firing \"object:selected\")\n   * @return {Boolean} true if the object has been selected\n   */\n  _setActiveObject(object: FabricObject, e?: TPointerEvent) {\n    const prevActiveObject = this._activeObject;\n    if (prevActiveObject === object) {\n      return false;\n    }\n    // after calling this._discardActiveObject, this,_activeObject could be undefined\n    if (!this._discardActiveObject(e, object) && this._activeObject) {\n      // refused to deselect\n      return false;\n    }\n    if (object.onSelect({ e })) {\n      return false;\n    }\n\n    this._activeObject = object;\n\n    if (isActiveSelection(object) && prevActiveObject !== object) {\n      object.set('canvas', this);\n    }\n    object.setCoords();\n\n    return true;\n  }\n\n  /**\n   * This is supposed to be equivalent to discardActiveObject but without firing\n   * any selection events ( can still fire object transformation events ). There is commitment to have this stay this way.\n   * This is the functional part of discardActiveObject.\n   * @param {Event} [e] Event (passed along when firing \"object:deselected\")\n   * @param {Object} object the next object to set as active, reason why we are discarding this\n   * @return {Boolean} true if the active object has been discarded\n   */\n  _discardActiveObject(\n    e?: TPointerEvent,\n    object?: FabricObject,\n  ): this is { _activeObject: undefined } {\n    const obj = this._activeObject;\n    if (obj) {\n      // onDeselect return TRUE to cancel selection;\n      if (obj.onDeselect({ e, object })) {\n        return false;\n      }\n      if (this._currentTransform && this._currentTransform.target === obj) {\n        this.endCurrentTransform(e);\n      }\n      if (isActiveSelection(obj) && obj === this._hoveredTarget) {\n        this._hoveredTarget = undefined;\n      }\n      this._activeObject = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Discards currently active object and fire events. If the function is called by fabric\n   * as a consequence of a mouse event, the event is passed as a parameter and\n   * sent to the fire function for the custom events. When used as a method the\n   * e param does not have any application.\n   * @param {event} e\n   * @return {Boolean} true if the active object has been discarded\n   */\n  discardActiveObject(e?: TPointerEvent): this is { _activeObject: undefined } {\n    const currentActives = this.getActiveObjects(),\n      activeObject = this.getActiveObject();\n    if (currentActives.length) {\n      this.fire('before:selection:cleared', {\n        e,\n        deselected: [activeObject!],\n      });\n    }\n    const discarded = this._discardActiveObject(e);\n    this._fireSelectionEvents(currentActives, e);\n    return discarded;\n  }\n\n  /**\n   * End the current transform.\n   * You don't usually need to call this method unless you are interrupting a user initiated transform\n   * because of some other event ( a press of key combination, or something that block the user UX )\n   * @param {Event} [e] send the mouse event that generate the finalize down, so it can be used in the event\n   */\n  endCurrentTransform(e?: TPointerEvent) {\n    const transform = this._currentTransform;\n    this._finalizeCurrentTransform(e);\n    if (transform && transform.target) {\n      // this could probably go inside _finalizeCurrentTransform\n      transform.target.isMoving = false;\n    }\n    this._currentTransform = null;\n  }\n\n  /**\n   * @private\n   * @param {Event} e send the mouse event that generate the finalize down, so it can be used in the event\n   */\n  _finalizeCurrentTransform(e?: TPointerEvent) {\n    const transform = this._currentTransform!,\n      target = transform.target,\n      options = {\n        e,\n        target,\n        transform,\n        action: transform.action,\n      };\n\n    if (target._scaling) {\n      target._scaling = false;\n    }\n\n    target.setCoords();\n\n    if (transform.actionPerformed) {\n      this.fire('object:modified', options);\n      target.fire(MODIFIED, options);\n    }\n  }\n\n  /**\n   * Sets viewport transformation of this canvas instance\n   * @param {Array} vpt a Canvas 2D API transform matrix\n   */\n  setViewportTransform(vpt: TMat2D) {\n    super.setViewportTransform(vpt);\n    const activeObject = this._activeObject;\n    if (activeObject) {\n      activeObject.setCoords();\n    }\n  }\n\n  /**\n   * @override clears active selection ref and interactive canvas elements and contexts\n   */\n  destroy() {\n    // dispose of active selection\n    const activeObject = this._activeObject;\n    if (isActiveSelection(activeObject)) {\n      activeObject.removeAll();\n      activeObject.dispose();\n    }\n\n    delete this._activeObject;\n\n    super.destroy();\n\n    // free resources\n\n    // pixel find canvas\n    // @ts-expect-error disposing\n    this.pixelFindContext = null;\n    // @ts-expect-error disposing\n    this.pixelFindCanvasEl = undefined;\n  }\n\n  /**\n   * Clears all contexts (background, main, top) of an instance\n   */\n  clear() {\n    // discard active object and fire events\n    this.discardActiveObject();\n    // make sure we clear the active object in case it refused to be discarded\n    this._activeObject = undefined;\n    this.clearContext(this.contextTop);\n    super.clear();\n  }\n\n  /**\n   * Draws objects' controls (borders/controls)\n   * @param {CanvasRenderingContext2D} ctx Context to render controls on\n   */\n  drawControls(ctx: CanvasRenderingContext2D) {\n    const activeObject = this._activeObject;\n\n    if (activeObject) {\n      activeObject._renderControls(ctx);\n    }\n  }\n\n  /**\n   * @private\n   */\n  protected _toObject(\n    instance: FabricObject,\n    methodName: 'toObject' | 'toDatalessObject',\n    propertiesToInclude: string[],\n  ): Record<string, any> {\n    // If the object is part of the current selection group, it should\n    // be transformed appropriately\n    // i.e. it should be serialised as it would appear if the selection group\n    // were to be destroyed.\n    const originalProperties = this._realizeGroupTransformOnObject(instance),\n      object = super._toObject(instance, methodName, propertiesToInclude);\n    //Undo the damage we did by changing all of its properties\n    instance.set(originalProperties);\n    return object;\n  }\n\n  /**\n   * Realizes an object's group transformation on it\n   * @private\n   * @param {FabricObject} [instance] the object to transform (gets mutated)\n   * @returns the original values of instance which were changed\n   */\n  private _realizeGroupTransformOnObject(\n    instance: FabricObject,\n  ): Partial<typeof instance> {\n    const { group } = instance;\n    if (group && isActiveSelection(group) && this._activeObject === group) {\n      const layoutProps = [\n        'angle',\n        'flipX',\n        'flipY',\n        LEFT,\n        SCALE_X,\n        SCALE_Y,\n        SKEW_X,\n        SKEW_Y,\n        TOP,\n      ] as (keyof typeof instance)[];\n      const originalValues = pick<typeof instance>(instance, layoutProps);\n      addTransformToObject(instance, group.calcOwnMatrix());\n      return originalValues;\n    } else {\n      return {};\n    }\n  }\n\n  /**\n   * @private\n   */\n  _setSVGObject(\n    markup: string[],\n    instance: FabricObject,\n    reviver?: TSVGReviver,\n  ) {\n    // If the object is in a selection group, simulate what would happen to that\n    // object when the group is deselected\n    const originalProperties = this._realizeGroupTransformOnObject(instance);\n    super._setSVGObject(markup, instance, reviver);\n    instance.set(originalProperties);\n  }\n}\n","import type { ModifierKey, TOptionalModifierKey } from '../EventTypeDefs';\nimport type { TOptions } from '../typedefs';\nimport type { StaticCanvasOptions } from './StaticCanvasOptions';\n\nexport interface CanvasTransformOptions {\n  /**\n   * When true, objects can be transformed by one side (unproportionately)\n   * when dragged on the corners that normally would not do that.\n   * @type Boolean\n   * @default\n   * @since fabric 4.0 // changed name and default value\n   */\n  uniformScaling: boolean;\n\n  /**\n   * Indicates which key switches uniform scaling.\n   * values: 'altKey', 'shiftKey', 'ctrlKey'.\n   * If `null` or 'none' or any other string that is not a modifier key\n   * feature is disabled.\n   * totally wrong named. this sounds like `uniform scaling`\n   * if Canvas.uniformScaling is true, pressing this will set it to false\n   * and viceversa.\n   * @since 1.6.2\n   * @type ModifierKey\n   * @default\n   */\n  uniScaleKey: TOptionalModifierKey;\n\n  snapAngleKey: TOptionalModifierKey;\n\n  /**\n   * When true, objects use center point as the origin of scale transformation.\n   * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n   * @since 1.3.4\n   * @type Boolean\n   * @default\n   */\n  centeredScaling: boolean;\n\n  /**\n   * When true, objects use center point as the origin of rotate transformation.\n   * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n   * @since 1.3.4\n   * @type Boolean\n   * @default\n   */\n  centeredRotation: boolean;\n\n  /**\n   * Indicates which key enable centered Transform\n   * values: 'altKey', 'shiftKey', 'ctrlKey'.\n   * If `null` or 'none' or any other string that is not a modifier key\n   * feature is disabled feature disabled.\n   * @since 1.6.2\n   * @type ModifierKey\n   * @default\n   */\n  centeredKey: TOptionalModifierKey;\n\n  /**\n   * Indicates which key enable alternate action on corner\n   * values: 'altKey', 'shiftKey', 'ctrlKey'.\n   * If `null` or 'none' or any other string that is not a modifier key\n   * feature is disabled feature disabled.\n   * @since 1.6.2\n   * @type ModifierKey\n   * @default\n   */\n  altActionKey: TOptionalModifierKey;\n\n  // snapPointFn?: (point: [number, number]) => [number, number];\n  // snapObjectFn?: (obj: FabricObject, change: [number, number]) => [number, number];\n}\n\nexport interface CanvasSelectionOptions {\n  /**\n   * Indicates whether group selection should be enabled\n   * @type Boolean\n   * @default\n   */\n  selection: boolean;\n\n  /**\n   * Indicates which key or keys enable multiple click selection\n   * Pass value as a string or array of strings\n   * values: 'altKey', 'shiftKey', 'ctrlKey'.\n   * If `null` or empty or containing any other string that is not a modifier key\n   * feature is disabled.\n   * @since 1.6.2\n   * @type ModifierKey|ModifierKey[]\n   * @default\n   */\n  selectionKey: TOptionalModifierKey | ModifierKey[];\n\n  /**\n   * Indicates which key enable alternative selection\n   * in case of target overlapping with active object\n   * values: 'altKey', 'shiftKey', 'ctrlKey'.\n   * For a series of reason that come from the general expectations on how\n   * things should work, this feature works only for preserveObjectStacking true.\n   * If `null` or 'none' or any other string that is not a modifier key\n   * feature is disabled.\n   * @since 1.6.5\n   * @type null|ModifierKey\n   * @default\n   */\n  altSelectionKey: TOptionalModifierKey;\n\n  /**\n   * Color of selection\n   * @type String\n   * @default\n   */\n  selectionColor: string;\n\n  /**\n   * Default dash array pattern\n   * If not empty the selection border is dashed\n   * @type Array\n   */\n  selectionDashArray: number[];\n\n  /**\n   * Color of the border of selection (usually slightly darker than color of selection itself)\n   * @type String\n   * @default\n   */\n  selectionBorderColor: string;\n\n  /**\n   * Width of a line used in object/group selection\n   * @type Number\n   * @default\n   */\n  selectionLineWidth: number;\n\n  /**\n   * Select only shapes that are fully contained in the dragged selection rectangle.\n   * @type Boolean\n   * @default\n   */\n  selectionFullyContained: boolean;\n}\n\nexport interface CanvasCursorOptions {\n  /**\n   * Default cursor value used when hovering over an object on canvas\n   * @type CSSStyleDeclaration['cursor']\n   * @default move\n   */\n  hoverCursor: CSSStyleDeclaration['cursor'];\n\n  /**\n   * Default cursor value used when moving an object on canvas\n   * @type CSSStyleDeclaration['cursor']\n   * @default move\n   */\n  moveCursor: CSSStyleDeclaration['cursor'];\n\n  /**\n   * Default cursor value used for the entire canvas\n   * @type String\n   * @default default\n   */\n  defaultCursor: CSSStyleDeclaration['cursor'];\n\n  /**\n   * Cursor value used during free drawing\n   * @type String\n   * @default crosshair\n   */\n  freeDrawingCursor: CSSStyleDeclaration['cursor'];\n\n  /**\n   * Cursor value used for disabled elements ( corners with disabled action )\n   * @type String\n   * @since 2.0.0\n   * @default not-allowed\n   */\n  notAllowedCursor: CSSStyleDeclaration['cursor'];\n}\n\nexport interface TargetFindOptions {\n  /**\n   * When true, object detection happens on per-pixel basis rather than on per-bounding-box\n   * @type Boolean\n   * @default\n   */\n  perPixelTargetFind: boolean;\n\n  /**\n   * Number of pixels around target pixel to tolerate (consider active) during object detection\n   * @type Number\n   * @default\n   */\n  targetFindTolerance: number;\n\n  /**\n   * When true, target detection is skipped. Target detection will return always undefined.\n   * click selection won't work anymore, events will fire with no targets.\n   * if something is selected before setting it to true, it will be deselected at the first click.\n   * area selection will still work. check the `selection` property too.\n   * if you deactivate both, you should look into staticCanvas.\n   * @type Boolean\n   * @default\n   */\n  skipTargetFind: boolean;\n}\n\nexport interface CanvasEventsOptions {\n  /**\n   * Indicates if the right click on canvas can output the context menu or not\n   * @type Boolean\n   * @since 1.6.5\n   * @default\n   */\n  stopContextMenu: boolean;\n\n  /**\n   * Indicates if the canvas can fire right click events\n   * @type Boolean\n   * @since 1.6.5\n   * @default\n   */\n  fireRightClick: boolean;\n\n  /**\n   * Indicates if the canvas can fire middle click events\n   * @type Boolean\n   * @since 1.7.8\n   * @default\n   */\n  fireMiddleClick: boolean;\n\n  /**\n   * When the option is enabled, PointerEvent is used instead of TPointerEvent.\n   * @type Boolean\n   * @default\n   */\n  enablePointerEvents: boolean;\n}\n\nexport interface CanvasOptions\n  extends StaticCanvasOptions,\n  CanvasTransformOptions,\n  CanvasSelectionOptions,\n  CanvasCursorOptions,\n  TargetFindOptions,\n  CanvasEventsOptions {\n  /**\n   * Default element class that's given to wrapper (div) element of canvas\n   * @type String\n   * @default\n   * @deprecated customize {@link CanvasDOMManager} instead or access {@link elements} directly\n   */\n  containerClass: string;\n\n  /**\n   * Indicates whether objects should remain in current stack position when selected.\n   * When false objects are brought to top and rendered as part of the selection group\n   * @type Boolean\n   * @default\n   */\n  preserveObjectStacking: boolean;\n}\n\nexport type TCanvasOptions = TOptions<CanvasOptions>;\n\nexport const canvasDefaults: TOptions<CanvasOptions> = {\n  uniformScaling: true,\n  uniScaleKey: 'shiftKey',\n  centeredScaling: false,\n  centeredRotation: false,\n  centeredKey: 'altKey',\n  altActionKey: 'shiftKey',\n  snapAngleKey: 'shiftKey',\n\n  selection: true,\n  selectionKey: 'shiftKey',\n  selectionColor: 'rgba(100, 100, 255, 0.3)',\n  selectionDashArray: [],\n  selectionBorderColor: 'rgba(255, 255, 255, 0.3)',\n  selectionLineWidth: 1,\n  selectionFullyContained: false,\n\n  hoverCursor: 'move',\n  moveCursor: 'move',\n  defaultCursor: 'default',\n  freeDrawingCursor: 'crosshair',\n  notAllowedCursor: 'not-allowed',\n\n  perPixelTargetFind: false,\n  targetFindTolerance: 0,\n  skipTargetFind: false,\n\n  stopContextMenu: false,\n  fireRightClick: false,\n  fireMiddleClick: false,\n  enablePointerEvents: false,\n\n  containerClass: 'canvas-container',\n\n  preserveObjectStacking: false,\n};\n","import type { TPointerEvent } from '../EventTypeDefs';\nimport type { ITextBehavior } from '../shapes/IText/ITextBehavior';\nimport { removeFromArray } from '../util/internals/removeFromArray';\nimport type { Canvas } from './Canvas';\n\n/**\n * In charge of synchronizing all interactive text instances of a canvas\n */\nexport class TextEditingManager {\n  private targets: ITextBehavior[] = [];\n  private declare target?: ITextBehavior;\n  private __disposer: VoidFunction;\n\n  constructor(canvas: Canvas) {\n    const cb = () => {\n      const { hiddenTextarea } =\n        (canvas.getActiveObject() as ITextBehavior) || {};\n      hiddenTextarea && hiddenTextarea.focus();\n    };\n    const el = canvas.upperCanvasEl;\n    el.addEventListener('click', cb);\n    this.__disposer = () => el.removeEventListener('click', cb);\n  }\n\n  exitTextEditing() {\n    this.target = undefined;\n    this.targets.forEach((target) => {\n      if (target.isEditing) {\n        target.exitEditing();\n      }\n    });\n  }\n\n  add(target: ITextBehavior) {\n    this.targets.push(target);\n  }\n\n  remove(target: ITextBehavior) {\n    this.unregister(target);\n    removeFromArray(this.targets, target);\n  }\n\n  register(target: ITextBehavior) {\n    this.target = target;\n  }\n\n  unregister(target: ITextBehavior) {\n    if (target === this.target) {\n      this.target = undefined;\n    }\n  }\n\n  onMouseMove(e: TPointerEvent) {\n    this.target?.isEditing && this.target.updateSelectionOnMouseMove(e);\n  }\n\n  clear() {\n    this.targets = [];\n    this.target = undefined;\n  }\n\n  dispose() {\n    this.clear();\n    this.__disposer();\n    // @ts-expect-error disposing\n    delete this.__disposer;\n  }\n}\n","import { classRegistry } from '../ClassRegistry';\nimport { NONE } from '../constants';\nimport type {\n  CanvasEvents,\n  DragEventData,\n  ObjectEvents,\n  TPointerEvent,\n  TPointerEventNames,\n  Transform,\n} from '../EventTypeDefs';\nimport { Point } from '../Point';\nimport type { ActiveSelection } from '../shapes/ActiveSelection';\nimport type { Group } from '../shapes/Group';\nimport type { IText } from '../shapes/IText/IText';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport { isTouchEvent, stopEvent } from '../util/dom_event';\nimport { getDocumentFromElement, getWindowFromElement } from '../util/dom_misc';\nimport { sendPointToPlane } from '../util/misc/planeChange';\nimport { isActiveSelection } from '../util/typeAssertions';\nimport type { CanvasOptions, TCanvasOptions } from './CanvasOptions';\nimport { SelectableCanvas } from './SelectableCanvas';\nimport { TextEditingManager } from './TextEditingManager';\n\nconst addEventOptions = { passive: false } as EventListenerOptions;\n\nconst getEventPoints = (canvas: Canvas, e: TPointerEvent) => {\n  const viewportPoint = canvas.getViewportPoint(e);\n  const scenePoint = canvas.getScenePoint(e);\n  return {\n    viewportPoint,\n    scenePoint,\n    pointer: viewportPoint,\n    absolutePointer: scenePoint,\n  };\n};\n\n// just to be clear, the utils are now deprecated and those are here exactly as minifier helpers\n// because el.addEventListener can't me be minified while a const yes and we use it 47 times in this file.\n// few bytes but why give it away.\nconst addListener = (\n  el: HTMLElement | Document,\n  ...args: Parameters<HTMLElement['addEventListener']>\n) => el.addEventListener(...args);\nconst removeListener = (\n  el: HTMLElement | Document,\n  ...args: Parameters<HTMLElement['removeEventListener']>\n) => el.removeEventListener(...args);\n\nconst syntheticEventConfig = {\n  mouse: {\n    in: 'over',\n    out: 'out',\n    targetIn: 'mouseover',\n    targetOut: 'mouseout',\n    canvasIn: 'mouse:over',\n    canvasOut: 'mouse:out',\n  },\n  drag: {\n    in: 'enter',\n    out: 'leave',\n    targetIn: 'dragenter',\n    targetOut: 'dragleave',\n    canvasIn: 'drag:enter',\n    canvasOut: 'drag:leave',\n  },\n} as const;\n\ntype TSyntheticEventContext = {\n  mouse: { e: TPointerEvent };\n  drag: DragEventData;\n};\n\nexport class Canvas extends SelectableCanvas implements CanvasOptions {\n  /**\n   * Contains the id of the touch event that owns the fabric transform\n   * @type Number\n   * @private\n   */\n  declare mainTouchId?: number;\n\n  declare enablePointerEvents: boolean;\n\n  /**\n   * Holds a reference to a setTimeout timer for event synchronization\n   * @type number\n   * @private\n   */\n  private declare _willAddMouseDown: number;\n\n  /**\n   * Holds a reference to an object on the canvas that is receiving the drag over event.\n   * @type FabricObject\n   * @private\n   */\n  private declare _draggedoverTarget?: FabricObject;\n\n  /**\n   * Holds a reference to an object on the canvas from where the drag operation started\n   * @type FabricObject\n   * @private\n   */\n  private declare _dragSource?: FabricObject;\n\n  /**\n   * Holds a reference to an object on the canvas that is the current drop target\n   * May differ from {@link _draggedoverTarget}\n   * @todo inspect whether {@link _draggedoverTarget} and {@link _dropTarget} should be merged somehow\n   * @type FabricObject\n   * @private\n   */\n  private declare _dropTarget: FabricObject<ObjectEvents> | undefined;\n\n  private _isClick: boolean;\n\n  textEditingManager = new TextEditingManager(this);\n\n  constructor(el?: string | HTMLCanvasElement, options: TCanvasOptions = {}) {\n    super(el, options);\n    // bind event handlers\n    (\n      [\n        '_onMouseDown',\n        '_onTouchStart',\n        '_onMouseMove',\n        '_onMouseUp',\n        '_onTouchEnd',\n        '_onResize',\n        // '_onGesture',\n        // '_onDrag',\n        // '_onShake',\n        // '_onLongPress',\n        // '_onOrientationChange',\n        '_onMouseWheel',\n        '_onMouseOut',\n        '_onMouseEnter',\n        '_onContextMenu',\n        '_onDoubleClick',\n        '_onDragStart',\n        '_onDragEnd',\n        '_onDragProgress',\n        '_onDragOver',\n        '_onDragEnter',\n        '_onDragLeave',\n        '_onDrop',\n      ] as (keyof this)[]\n    ).forEach((eventHandler) => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\n      this[eventHandler] = (this[eventHandler] as Function).bind(this);\n    });\n    // register event handlers\n    this.addOrRemove(addListener, 'add');\n  }\n\n  /**\n   * return an event prefix pointer or mouse.\n   * @private\n   */\n  private _getEventPrefix() {\n    return this.enablePointerEvents ? 'pointer' : 'mouse';\n  }\n\n  addOrRemove(functor: any, _eventjsFunctor: 'add' | 'remove') {\n    const canvasElement = this.upperCanvasEl,\n      eventTypePrefix = this._getEventPrefix();\n    functor(getWindowFromElement(canvasElement), 'resize', this._onResize);\n    functor(canvasElement, eventTypePrefix + 'down', this._onMouseDown);\n    functor(\n      canvasElement,\n      `${eventTypePrefix}move`,\n      this._onMouseMove,\n      addEventOptions,\n    );\n    functor(canvasElement, `${eventTypePrefix}out`, this._onMouseOut);\n    functor(canvasElement, `${eventTypePrefix}enter`, this._onMouseEnter);\n    functor(canvasElement, 'wheel', this._onMouseWheel);\n    functor(canvasElement, 'contextmenu', this._onContextMenu);\n    functor(canvasElement, 'dblclick', this._onDoubleClick);\n    functor(canvasElement, 'dragstart', this._onDragStart);\n    functor(canvasElement, 'dragend', this._onDragEnd);\n    functor(canvasElement, 'dragover', this._onDragOver);\n    functor(canvasElement, 'dragenter', this._onDragEnter);\n    functor(canvasElement, 'dragleave', this._onDragLeave);\n    functor(canvasElement, 'drop', this._onDrop);\n    if (!this.enablePointerEvents) {\n      functor(canvasElement, 'touchstart', this._onTouchStart, addEventOptions);\n    }\n    // if (typeof eventjs !== 'undefined' && eventjsFunctor in eventjs) {\n    //   eventjs[eventjsFunctor](canvasElement, 'gesture', this._onGesture);\n    //   eventjs[eventjsFunctor](canvasElement, 'drag', this._onDrag);\n    //   eventjs[eventjsFunctor](\n    //     canvasElement,\n    //     'orientation',\n    //     this._onOrientationChange\n    //   );\n    //   eventjs[eventjsFunctor](canvasElement, 'shake', this._onShake);\n    //   eventjs[eventjsFunctor](canvasElement, 'longpress', this._onLongPress);\n    // }\n  }\n\n  /**\n   * Removes all event listeners\n   */\n  removeListeners() {\n    this.addOrRemove(removeListener, 'remove');\n    // if you dispose on a mouseDown, before mouse up, you need to clean document to...\n    const eventTypePrefix = this._getEventPrefix();\n    const doc = getDocumentFromElement(this.upperCanvasEl);\n    removeListener(\n      doc,\n      `${eventTypePrefix}up`,\n      this._onMouseUp as EventListener,\n    );\n    removeListener(\n      doc,\n      'touchend',\n      this._onTouchEnd as EventListener,\n      addEventOptions,\n    );\n    removeListener(\n      doc,\n      `${eventTypePrefix}move`,\n      this._onMouseMove as EventListener,\n      addEventOptions,\n    );\n    removeListener(\n      doc,\n      'touchmove',\n      this._onMouseMove as EventListener,\n      addEventOptions,\n    );\n  }\n\n  /**\n   * @private\n   * @param {Event} [e] Event object fired on wheel event\n   */\n  private _onMouseWheel(e: MouseEvent) {\n    this.__onMouseWheel(e);\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  private _onMouseOut(e: TPointerEvent) {\n    const target = this._hoveredTarget;\n    const shared = {\n      e,\n      ...getEventPoints(this, e),\n    };\n    this.fire('mouse:out', { ...shared, target });\n    this._hoveredTarget = undefined;\n    target && target.fire('mouseout', { ...shared });\n    this._hoveredTargets.forEach((nestedTarget) => {\n      this.fire('mouse:out', { ...shared, target: nestedTarget });\n      nestedTarget && nestedTarget.fire('mouseout', { ...shared });\n    });\n    this._hoveredTargets = [];\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mouseenter\n   */\n  private _onMouseEnter(e: TPointerEvent) {\n    // This find target and consequent 'mouse:over' is used to\n    // clear old instances on hovered target.\n    // calling findTarget has the side effect of killing target.__corner.\n    // as a short term fix we are not firing this if we are currently transforming.\n    // as a long term fix we need to separate the action of finding a target with the\n    // side effects we added to it.\n    if (!this._currentTransform && !this.findTarget(e)) {\n      this.fire('mouse:over', {\n        e,\n        ...getEventPoints(this, e),\n      });\n      this._hoveredTarget = undefined;\n      this._hoveredTargets = [];\n    }\n  }\n\n  /**\n   * supports native like text dragging\n   * @private\n   * @param {DragEvent} e\n   */\n  private _onDragStart(e: DragEvent) {\n    this._isClick = false;\n    const activeObject = this.getActiveObject();\n    if (activeObject && activeObject.onDragStart(e)) {\n      this._dragSource = activeObject;\n      const options = { e, target: activeObject };\n      this.fire('dragstart', options);\n      activeObject.fire('dragstart', options);\n      addListener(\n        this.upperCanvasEl,\n        'drag',\n        this._onDragProgress as EventListener,\n      );\n      return;\n    }\n    stopEvent(e);\n  }\n\n  /**\n   * First we clear top context where the effects are being rendered.\n   * Then we render the effects.\n   * Doing so will render the correct effect for all cases including an overlap between `source` and `target`.\n   * @private\n   */\n  private _renderDragEffects(\n    e: DragEvent,\n    source?: FabricObject,\n    target?: FabricObject,\n  ) {\n    let dirty = false;\n    // clear top context\n    const dropTarget = this._dropTarget;\n    if (dropTarget && dropTarget !== source && dropTarget !== target) {\n      dropTarget.clearContextTop();\n      dirty = true;\n    }\n    source?.clearContextTop();\n    target !== source && target?.clearContextTop();\n    // render effects\n    const ctx = this.contextTop;\n    ctx.save();\n    ctx.transform(...this.viewportTransform);\n    if (source) {\n      ctx.save();\n      source.transform(ctx);\n      source.renderDragSourceEffect(e);\n      ctx.restore();\n      dirty = true;\n    }\n    if (target) {\n      ctx.save();\n      target.transform(ctx);\n      target.renderDropTargetEffect(e);\n      ctx.restore();\n      dirty = true;\n    }\n    ctx.restore();\n    dirty && (this.contextTopDirty = true);\n  }\n\n  /**\n   * supports native like text dragging\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#finishing_a_drag\n   * @private\n   * @param {DragEvent} e\n   */\n  private _onDragEnd(e: DragEvent) {\n    const didDrop = !!e.dataTransfer && e.dataTransfer.dropEffect !== NONE,\n      dropTarget = didDrop ? this._activeObject : undefined,\n      options = {\n        e,\n        target: this._dragSource as FabricObject,\n        subTargets: this.targets,\n        dragSource: this._dragSource as FabricObject,\n        didDrop,\n        dropTarget: dropTarget as FabricObject,\n      };\n    removeListener(\n      this.upperCanvasEl,\n      'drag',\n      this._onDragProgress as EventListener,\n    );\n    this.fire('dragend', options);\n    this._dragSource && this._dragSource.fire('dragend', options);\n    delete this._dragSource;\n    // we need to call mouse up synthetically because the browser won't\n    this._onMouseUp(e);\n  }\n\n  /**\n   * fire `drag` event on canvas and drag source\n   * @private\n   * @param {DragEvent} e\n   */\n  private _onDragProgress(e: DragEvent) {\n    const options = {\n      e,\n      target: this._dragSource as FabricObject | undefined,\n      dragSource: this._dragSource as FabricObject | undefined,\n      dropTarget: this._draggedoverTarget as FabricObject,\n    };\n    this.fire('drag', options);\n    this._dragSource && this._dragSource.fire('drag', options);\n  }\n\n  /**\n   * As opposed to {@link findTarget} we want the top most object to be returned w/o the active object cutting in line.\n   * Override at will\n   */\n  protected findDragTargets(e: DragEvent) {\n    this.targets = [];\n    const target = this._searchPossibleTargets(\n      this._objects,\n      this.getViewportPoint(e),\n    );\n    return {\n      target,\n      targets: [...this.targets],\n    };\n  }\n\n  /**\n   * prevent default to allow drop event to be fired\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#specifying_drop_targets\n   * @private\n   * @param {DragEvent} [e] Event object fired on Event.js shake\n   */\n  private _onDragOver(e: DragEvent) {\n    const eventType = 'dragover';\n    const { target, targets } = this.findDragTargets(e);\n    const dragSource = this._dragSource as FabricObject;\n    const options = {\n      e,\n      target,\n      subTargets: targets,\n      dragSource,\n      canDrop: false,\n      dropTarget: undefined,\n    };\n    let dropTarget;\n    //  fire on canvas\n    this.fire(eventType, options);\n    //  make sure we fire dragenter events before dragover\n    //  if dragleave is needed, object will not fire dragover so we don't need to trouble ourselves with it\n    this._fireEnterLeaveEvents(target, options);\n    if (target) {\n      if (target.canDrop(e)) {\n        dropTarget = target;\n      }\n      target.fire(eventType, options);\n    }\n    //  propagate the event to subtargets\n    for (let i = 0; i < targets.length; i++) {\n      const subTarget = targets[i];\n      // accept event only if previous targets didn't (the accepting target calls `preventDefault` to inform that the event is taken)\n      // TODO: verify if those should loop in inverse order then?\n      // what is the order of subtargets?\n      if (subTarget.canDrop(e)) {\n        dropTarget = subTarget;\n      }\n      subTarget.fire(eventType, options);\n    }\n    //  render drag effects now that relations between source and target is clear\n    this._renderDragEffects(e, dragSource, dropTarget);\n    this._dropTarget = dropTarget;\n  }\n\n  /**\n   * fire `dragleave` on `dragover` targets\n   * @private\n   * @param {Event} [e] Event object fired on Event.js shake\n   */\n  private _onDragEnter(e: DragEvent) {\n    const { target, targets } = this.findDragTargets(e);\n    const options = {\n      e,\n      target,\n      subTargets: targets,\n      dragSource: this._dragSource,\n    };\n    this.fire('dragenter', options);\n    //  fire dragenter on targets\n    this._fireEnterLeaveEvents(target, options);\n  }\n\n  /**\n   * fire `dragleave` on `dragover` targets\n   * @private\n   * @param {Event} [e] Event object fired on Event.js shake\n   */\n  private _onDragLeave(e: DragEvent) {\n    const options = {\n      e,\n      target: this._draggedoverTarget,\n      subTargets: this.targets,\n      dragSource: this._dragSource,\n    };\n    this.fire('dragleave', options);\n\n    //  fire dragleave on targets\n    this._fireEnterLeaveEvents(undefined, options);\n    this._renderDragEffects(e, this._dragSource);\n    this._dropTarget = undefined;\n    //  clear targets\n    this.targets = [];\n    this._hoveredTargets = [];\n  }\n\n  /**\n   * `drop:before` is a an event that allows you to schedule logic\n   * before the `drop` event. Prefer `drop` event always, but if you need\n   * to run some drop-disabling logic on an event, since there is no way\n   * to handle event handlers ordering, use `drop:before`\n   * @private\n   * @param {Event} e\n   */\n  private _onDrop(e: DragEvent) {\n    const { target, targets } = this.findDragTargets(e);\n    const options = this._basicEventHandler('drop:before', {\n      e,\n      target,\n      subTargets: targets,\n      dragSource: this._dragSource,\n      ...getEventPoints(this, e),\n    });\n    //  will be set by the drop target\n    options.didDrop = false;\n    //  will be set by the drop target, used in case options.target refuses the drop\n    options.dropTarget = undefined;\n    //  fire `drop`\n    this._basicEventHandler('drop', options);\n    //  inform canvas of the drop\n    //  we do this because canvas was unaware of what happened at the time the `drop` event was fired on it\n    //  use for side effects\n    this.fire('drop:after', options);\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  private _onContextMenu(e: TPointerEvent): false {\n    const target = this.findTarget(e),\n      subTargets = this.targets || [];\n    const options = this._basicEventHandler('contextmenu:before', {\n      e,\n      target,\n      subTargets,\n    });\n    // TODO: this line is silly because the dev can subscribe to the event and prevent it themselves\n    this.stopContextMenu && stopEvent(e);\n    this._basicEventHandler('contextmenu', options);\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  private _onDoubleClick(e: TPointerEvent) {\n    this._cacheTransformEventData(e);\n    this._handleEvent(e, 'dblclick');\n    this._resetTransformEventData();\n  }\n\n  /**\n   * Return a the id of an event.\n   * returns either the pointerId or the identifier or 0 for the mouse event\n   * @private\n   * @param {Event} evt Event object\n   */\n  getPointerId(evt: TouchEvent | PointerEvent): number {\n    const changedTouches = (evt as TouchEvent).changedTouches;\n\n    if (changedTouches) {\n      return changedTouches[0] && changedTouches[0].identifier;\n    }\n\n    if (this.enablePointerEvents) {\n      return (evt as PointerEvent).pointerId;\n    }\n\n    return -1;\n  }\n\n  /**\n   * Determines if an event has the id of the event that is considered main\n   * @private\n   * @param {evt} event Event object\n   */\n  _isMainEvent(evt: TPointerEvent): boolean {\n    if ((evt as PointerEvent).isPrimary === true) {\n      return true;\n    }\n    if ((evt as PointerEvent).isPrimary === false) {\n      return false;\n    }\n    if (evt.type === 'touchend' && (evt as TouchEvent).touches.length === 0) {\n      return true;\n    }\n    if ((evt as TouchEvent).changedTouches) {\n      return (\n        (evt as TouchEvent).changedTouches[0].identifier === this.mainTouchId\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  _onTouchStart(e: TouchEvent) {\n    // we will prevent scrolling if allowTouchScrolling is not enabled and\n    let shouldPreventScrolling = !this.allowTouchScrolling;\n    const currentActiveObject = this._activeObject;\n    if (this.mainTouchId === undefined) {\n      this.mainTouchId = this.getPointerId(e);\n    }\n    this.__onMouseDown(e);\n    // after executing fabric logic for mouse down let's see\n    // if we didn't change target or if we are drawing\n    // we want to prevent scrolling anyway\n    if (\n      this.isDrawingMode ||\n      (currentActiveObject && this._target === currentActiveObject)\n    ) {\n      shouldPreventScrolling = true;\n    }\n    // prevent default, will block scrolling from start\n    shouldPreventScrolling && e.preventDefault();\n    this._resetTransformEventData();\n    const canvasElement = this.upperCanvasEl,\n      eventTypePrefix = this._getEventPrefix();\n    const doc = getDocumentFromElement(canvasElement);\n    addListener(\n      doc,\n      'touchend',\n      this._onTouchEnd as EventListener,\n      addEventOptions,\n    );\n    // if we scroll don't register the touch move event\n    shouldPreventScrolling &&\n      addListener(\n        doc,\n        'touchmove',\n        this._onMouseMove as EventListener,\n        addEventOptions,\n      );\n    // Unbind mousedown to prevent double triggers from touch devices\n    removeListener(\n      canvasElement,\n      `${eventTypePrefix}down`,\n      this._onMouseDown as EventListener,\n    );\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  _onMouseDown(e: TPointerEvent) {\n    this.__onMouseDown(e);\n    this._resetTransformEventData();\n    const canvasElement = this.upperCanvasEl,\n      eventTypePrefix = this._getEventPrefix();\n    removeListener(\n      canvasElement,\n      `${eventTypePrefix}move`,\n      this._onMouseMove as EventListener,\n      addEventOptions,\n    );\n    const doc = getDocumentFromElement(canvasElement);\n    addListener(doc, `${eventTypePrefix}up`, this._onMouseUp as EventListener);\n    addListener(\n      doc,\n      `${eventTypePrefix}move`,\n      this._onMouseMove as EventListener,\n      addEventOptions,\n    );\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  _onTouchEnd(e: TouchEvent) {\n    if (e.touches.length > 0) {\n      // if there are still touches stop here\n      return;\n    }\n    this.__onMouseUp(e);\n    this._resetTransformEventData();\n    delete this.mainTouchId;\n    const eventTypePrefix = this._getEventPrefix();\n    const doc = getDocumentFromElement(this.upperCanvasEl);\n    removeListener(\n      doc,\n      'touchend',\n      this._onTouchEnd as EventListener,\n      addEventOptions,\n    );\n    removeListener(\n      doc,\n      'touchmove',\n      this._onMouseMove as EventListener,\n      addEventOptions,\n    );\n    if (this._willAddMouseDown) {\n      clearTimeout(this._willAddMouseDown);\n    }\n    this._willAddMouseDown = setTimeout(() => {\n      // Wait 400ms before rebinding mousedown to prevent double triggers\n      // from touch devices\n      addListener(\n        this.upperCanvasEl,\n        `${eventTypePrefix}down`,\n        this._onMouseDown as EventListener,\n      );\n      this._willAddMouseDown = 0;\n    }, 400) as unknown as number;\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mouseup\n   */\n  _onMouseUp(e: TPointerEvent) {\n    this.__onMouseUp(e);\n    this._resetTransformEventData();\n    const canvasElement = this.upperCanvasEl,\n      eventTypePrefix = this._getEventPrefix();\n    if (this._isMainEvent(e)) {\n      const doc = getDocumentFromElement(this.upperCanvasEl);\n      removeListener(\n        doc,\n        `${eventTypePrefix}up`,\n        this._onMouseUp as EventListener,\n      );\n      removeListener(\n        doc,\n        `${eventTypePrefix}move`,\n        this._onMouseMove as EventListener,\n        addEventOptions,\n      );\n      addListener(\n        canvasElement,\n        `${eventTypePrefix}move`,\n        this._onMouseMove as EventListener,\n        addEventOptions,\n      );\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousemove\n   */\n  _onMouseMove(e: TPointerEvent) {\n    const activeObject = this.getActiveObject();\n    !this.allowTouchScrolling &&\n      (!activeObject ||\n        // a drag event sequence is started by the active object flagging itself on mousedown / mousedown:before\n        // we must not prevent the event's default behavior in order for the window to start dragging\n        !activeObject.shouldStartDragging(e)) &&\n      e.preventDefault &&\n      e.preventDefault();\n    this.__onMouseMove(e);\n  }\n\n  /**\n   * @private\n   */\n  _onResize() {\n    this.calcOffset();\n    this._resetTransformEventData();\n  }\n\n  /**\n   * Decides whether the canvas should be redrawn in mouseup and mousedown events.\n   * @private\n   * @param {Object} target\n   */\n  _shouldRender(target: FabricObject | undefined) {\n    const activeObject = this.getActiveObject();\n    // if just one of them is available or if they are both but are different objects\n    // this covers: switch of target, from target to no target, selection of target\n    // multiSelection with key and mouse\n    return (\n      !!activeObject !== !!target ||\n      (activeObject && target && activeObject !== target)\n    );\n  }\n\n  /**\n   * Method that defines the actions when mouse is released on canvas.\n   * The method resets the currentTransform parameters, store the image corner\n   * position in the image object and render the canvas on top.\n   * @private\n   * @param {Event} e Event object fired on mouseup\n   */\n  __onMouseUp(e: TPointerEvent) {\n    this._cacheTransformEventData(e);\n    this._handleEvent(e, 'up:before');\n\n    const transform = this._currentTransform;\n    const isClick = this._isClick;\n    const target = this._target;\n\n    // if right/middle click just fire events and return\n    // target undefined will make the _handleEvent search the target\n    const { button } = e as MouseEvent;\n    if (button) {\n      ((this.fireMiddleClick && button === 1) ||\n        (this.fireRightClick && button === 2)) &&\n        this._handleEvent(e, 'up');\n      this._resetTransformEventData();\n      return;\n    }\n\n    if (this.isDrawingMode && this._isCurrentlyDrawing) {\n      this._onMouseUpInDrawingMode(e);\n      return;\n    }\n\n    if (!this._isMainEvent(e)) {\n      return;\n    }\n    let shouldRender = false;\n    if (transform) {\n      this._finalizeCurrentTransform(e);\n      shouldRender = transform.actionPerformed;\n    }\n    if (!isClick) {\n      const targetWasActive = target === this._activeObject;\n      this.handleSelection(e);\n      if (!shouldRender) {\n        shouldRender =\n          this._shouldRender(target) ||\n          (!targetWasActive && target === this._activeObject);\n      }\n    }\n    let pointer, corner;\n    if (target) {\n      const found = target.findControl(\n        this.getViewportPoint(e),\n        isTouchEvent(e),\n      );\n      const { key, control } = found || {};\n      corner = key;\n      if (\n        target.selectable &&\n        target !== this._activeObject &&\n        target.activeOn === 'up'\n      ) {\n        this.setActiveObject(target, e);\n        shouldRender = true;\n      } else if (control) {\n        const mouseUpHandler = control.getMouseUpHandler(e, target, control);\n        if (mouseUpHandler) {\n          pointer = this.getScenePoint(e);\n          mouseUpHandler.call(control, e, transform!, pointer.x, pointer.y);\n        }\n      }\n      target.isMoving = false;\n    }\n    // if we are ending up a transform on a different control or a new object\n    // fire the original mouse up from the corner that started the transform\n    if (\n      transform &&\n      (transform.target !== target || transform.corner !== corner)\n    ) {\n      const originalControl =\n        transform.target && transform.target.controls[transform.corner],\n        originalMouseUpHandler =\n          originalControl &&\n          originalControl.getMouseUpHandler(\n            e,\n            transform.target,\n            originalControl,\n          );\n      pointer = pointer || this.getScenePoint(e);\n      originalMouseUpHandler &&\n        originalMouseUpHandler.call(\n          originalControl,\n          e,\n          transform,\n          pointer.x,\n          pointer.y,\n        );\n    }\n    this._setCursorFromEvent(e, target);\n    this._handleEvent(e, 'up');\n    this._groupSelector = null;\n    this._currentTransform = null;\n    // reset the target information about which corner is selected\n    target && (target.__corner = undefined);\n    if (shouldRender) {\n      this.requestRenderAll();\n    } else if (!isClick && !(this._activeObject as IText)?.isEditing) {\n      this.renderTop();\n    }\n  }\n\n  _basicEventHandler<T extends keyof (CanvasEvents | ObjectEvents)>(\n    eventType: T,\n    options: (CanvasEvents & ObjectEvents)[T],\n  ) {\n    const { target, subTargets = [] } = options as {\n      target?: FabricObject;\n      subTargets: FabricObject[];\n    };\n    this.fire(eventType, options);\n    target && target.fire(eventType, options);\n    for (let i = 0; i < subTargets.length; i++) {\n      subTargets[i] !== target && subTargets[i].fire(eventType, options);\n    }\n    return options;\n  }\n\n  /**\n   * @private\n   * Handle event firing for target and subtargets\n   * @param {TPointerEvent} e event from mouse\n   * @param {TPointerEventNames} eventType\n   */\n  _handleEvent<T extends TPointerEventNames>(e: TPointerEvent, eventType: T) {\n    const target = this._target,\n      targets = this.targets || [],\n      options: CanvasEvents[`mouse:${T}`] = {\n        e,\n        target,\n        subTargets: targets,\n        ...getEventPoints(this, e),\n        transform: this._currentTransform,\n        ...(eventType === 'up:before' || eventType === 'up'\n          ? {\n            isClick: this._isClick,\n            currentTarget: this.findTarget(e),\n            // set by the preceding `findTarget` call\n            currentSubTargets: this.targets,\n          }\n          : {}),\n      } as CanvasEvents[`mouse:${T}`];\n    this.fire(`mouse:${eventType}`, options);\n    // this may be a little be more complicated of what we want to handle\n    target && target.fire(`mouse${eventType}`, options);\n    for (let i = 0; i < targets.length; i++) {\n      targets[i] !== target && targets[i].fire(`mouse${eventType}`, options);\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  _onMouseDownInDrawingMode(e: TPointerEvent) {\n    this._isCurrentlyDrawing = true;\n    if (this.getActiveObject()) {\n      this.discardActiveObject(e);\n      this.requestRenderAll();\n    }\n    // TODO: this is a scene point so it should be renamed\n    const pointer = this.getScenePoint(e);\n    this.freeDrawingBrush &&\n      this.freeDrawingBrush.onMouseDown(pointer, { e, pointer });\n    this._handleEvent(e, 'down');\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousemove\n   */\n  _onMouseMoveInDrawingMode(e: TPointerEvent) {\n    if (this._isCurrentlyDrawing) {\n      const pointer = this.getScenePoint(e);\n      this.freeDrawingBrush &&\n        this.freeDrawingBrush.onMouseMove(pointer, {\n          e,\n          // this is an absolute pointer, the naming is wrong\n          pointer,\n        });\n    }\n    this.setCursor(this.freeDrawingCursor);\n    this._handleEvent(e, 'move');\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mouseup\n   */\n  _onMouseUpInDrawingMode(e: TPointerEvent) {\n    const pointer = this.getScenePoint(e);\n    if (this.freeDrawingBrush) {\n      this._isCurrentlyDrawing = !!this.freeDrawingBrush.onMouseUp({\n        e: e,\n        // this is an absolute pointer, the naming is wrong\n        pointer,\n      });\n    } else {\n      this._isCurrentlyDrawing = false;\n    }\n    this._handleEvent(e, 'up');\n  }\n\n  /**\n   * Method that defines the actions when mouse is clicked on canvas.\n   * The method inits the currentTransform parameters and renders all the\n   * canvas so the current image can be placed on the top canvas and the rest\n   * in on the container one.\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  __onMouseDown(e: TPointerEvent) {\n    this._isClick = true;\n    this._cacheTransformEventData(e);\n    this._handleEvent(e, 'down:before');\n\n    let target: FabricObject | undefined = this._target;\n\n    // if right/middle click just fire events\n    const { button } = e as MouseEvent;\n    if (button) {\n      ((this.fireMiddleClick && button === 1) ||\n        (this.fireRightClick && button === 2)) &&\n        this._handleEvent(e, 'down');\n      this._resetTransformEventData();\n      return;\n    }\n\n    if (this.isDrawingMode) {\n      this._onMouseDownInDrawingMode(e);\n      return;\n    }\n\n    if (!this._isMainEvent(e)) {\n      return;\n    }\n\n    // ignore if some object is being transformed at this moment\n    if (this._currentTransform) {\n      return;\n    }\n\n    let shouldRender = this._shouldRender(target);\n    let grouped = false;\n    if (this.handleMultiSelection(e, target)) {\n      // active object might have changed while grouping\n      target = this._activeObject;\n      grouped = true;\n      shouldRender = true;\n    } else if (this._shouldClearSelection(e, target)) {\n      this.discardActiveObject(e);\n    }\n    // we start a group selector rectangle if\n    // selection is enabled\n    // and there is no target, or the following 3 conditions are satisfied:\n    // target is not selectable ( otherwise we selected it )\n    // target is not editing\n    // target is not already selected ( otherwise we drag )\n    if (\n      this.selection &&\n      (!target ||\n        (!target.selectable &&\n          !(target as IText).isEditing &&\n          target !== this._activeObject))\n    ) {\n      const p = this.getScenePoint(e);\n      this._groupSelector = {\n        x: p.x,\n        y: p.y,\n        deltaY: 0,\n        deltaX: 0,\n      };\n    }\n\n    if (target) {\n      const alreadySelected = target === this._activeObject;\n      if (target.selectable && target.activeOn === 'down') {\n        this.setActiveObject(target, e);\n      }\n      const handle = target.findControl(\n        this.getViewportPoint(e),\n        isTouchEvent(e),\n      );\n      if (target === this._activeObject && (handle || !grouped)) {\n        this._setupCurrentTransform(e, target, alreadySelected);\n        const control = handle ? handle.control : undefined,\n          pointer = this.getScenePoint(e),\n          mouseDownHandler =\n            control && control.getMouseDownHandler(e, target, control);\n        mouseDownHandler &&\n          mouseDownHandler.call(\n            control,\n            e,\n            this._currentTransform!,\n            pointer.x,\n            pointer.y,\n          );\n      }\n    }\n    //  we clear `_objectsToRender` in case of a change in order to repopulate it at rendering\n    //  run before firing the `down` event to give the dev a chance to populate it themselves\n    shouldRender && (this._objectsToRender = undefined);\n    this._handleEvent(e, 'down');\n    // we must renderAll so that we update the visuals\n    shouldRender && this.requestRenderAll();\n  }\n\n  /**\n   * reset cache form common information needed during event processing\n   * @private\n   */\n  _resetTransformEventData() {\n    this._target = undefined;\n    this._pointer = undefined;\n    this._absolutePointer = undefined;\n  }\n\n  /**\n   * Cache common information needed during event processing\n   * @private\n   * @param {Event} e Event object fired on event\n   */\n  _cacheTransformEventData(e: TPointerEvent) {\n    // reset in order to avoid stale caching\n    this._resetTransformEventData();\n    this._pointer = this.getViewportPoint(e);\n    this._absolutePointer = sendPointToPlane(\n      this._pointer,\n      undefined,\n      this.viewportTransform,\n    );\n    this._target = this._currentTransform\n      ? this._currentTransform.target\n      : this.findTarget(e);\n  }\n\n  /**\n   * Method that defines the actions when mouse is hovering the canvas.\n   * The currentTransform parameter will define whether the user is rotating/scaling/translating\n   * an image or neither of them (only hovering). A group selection is also possible and would cancel\n   * all any other type of action.\n   * In case of an image transformation only the top canvas will be rendered.\n   * @private\n   * @param {Event} e Event object fired on mousemove\n   */\n  __onMouseMove(e: TPointerEvent) {\n    this._isClick = false;\n    this._cacheTransformEventData(e);\n    this._handleEvent(e, 'move:before');\n\n    if (this.isDrawingMode) {\n      this._onMouseMoveInDrawingMode(e);\n      return;\n    }\n\n    if (!this._isMainEvent(e)) {\n      return;\n    }\n\n    const groupSelector = this._groupSelector;\n\n    // We initially clicked in an empty area, so we draw a box for multiple selection\n    if (groupSelector) {\n      const pointer = this.getScenePoint(e);\n\n      groupSelector.deltaX = pointer.x - groupSelector.x;\n      groupSelector.deltaY = pointer.y - groupSelector.y;\n\n      this.renderTop();\n    } else if (!this._currentTransform) {\n      const target = this.findTarget(e);\n      this._setCursorFromEvent(e, target);\n      this._fireOverOutEvents(e, target);\n    } else {\n      this._transformObject(e);\n    }\n    this.textEditingManager.onMouseMove(e);\n    this._handleEvent(e, 'move');\n    this._resetTransformEventData();\n  }\n\n  /**\n   * Manage the mouseout, mouseover events for the fabric object on the canvas\n   * @param {Fabric.Object} target the target where the target from the mousemove event\n   * @param {Event} e Event object fired on mousemove\n   * @private\n   */\n  _fireOverOutEvents(e: TPointerEvent, target?: FabricObject) {\n    const _hoveredTarget = this._hoveredTarget,\n      _hoveredTargets = this._hoveredTargets,\n      targets = this.targets,\n      length = Math.max(_hoveredTargets.length, targets.length);\n\n    this.fireSyntheticInOutEvents('mouse', {\n      e,\n      target,\n      oldTarget: _hoveredTarget,\n      fireCanvas: true,\n    });\n    for (let i = 0; i < length; i++) {\n      this.fireSyntheticInOutEvents('mouse', {\n        e,\n        target: targets[i],\n        oldTarget: _hoveredTargets[i],\n      });\n    }\n    this._hoveredTarget = target;\n    this._hoveredTargets = this.targets.concat();\n  }\n\n  /**\n   * Manage the dragEnter, dragLeave events for the fabric objects on the canvas\n   * @param {Fabric.Object} target the target where the target from the onDrag event\n   * @param {Object} data Event object fired on dragover\n   * @private\n   */\n  _fireEnterLeaveEvents(target: FabricObject | undefined, data: DragEventData) {\n    const draggedoverTarget = this._draggedoverTarget,\n      _hoveredTargets = this._hoveredTargets,\n      targets = this.targets,\n      length = Math.max(_hoveredTargets.length, targets.length);\n\n    this.fireSyntheticInOutEvents('drag', {\n      ...data,\n      target,\n      oldTarget: draggedoverTarget,\n      fireCanvas: true,\n    });\n    for (let i = 0; i < length; i++) {\n      this.fireSyntheticInOutEvents('drag', {\n        ...data,\n        target: targets[i],\n        oldTarget: _hoveredTargets[i],\n      });\n    }\n    this._draggedoverTarget = target;\n  }\n\n  /**\n   * Manage the synthetic in/out events for the fabric objects on the canvas\n   * @param {Fabric.Object} target the target where the target from the supported events\n   * @param {Object} data Event object fired\n   * @param {Object} config configuration for the function to work\n   * @param {String} config.targetName property on the canvas where the old target is stored\n   * @param {String} [config.canvasEvtOut] name of the event to fire at canvas level for out\n   * @param {String} config.evtOut name of the event to fire for out\n   * @param {String} [config.canvasEvtIn] name of the event to fire at canvas level for in\n   * @param {String} config.evtIn name of the event to fire for in\n   * @private\n   */\n  fireSyntheticInOutEvents<T extends keyof TSyntheticEventContext>(\n    type: T,\n    {\n      target,\n      oldTarget,\n      fireCanvas,\n      e,\n      ...data\n    }: TSyntheticEventContext[T] & {\n      target?: FabricObject;\n      oldTarget?: FabricObject;\n      fireCanvas?: boolean;\n    },\n  ) {\n    const { targetIn, targetOut, canvasIn, canvasOut } =\n      syntheticEventConfig[type];\n    const targetChanged = oldTarget !== target;\n\n    if (oldTarget && targetChanged) {\n      const outOpt: CanvasEvents[typeof canvasOut] = {\n        ...data,\n        e,\n        target: oldTarget,\n        nextTarget: target,\n        ...getEventPoints(this, e),\n      };\n      fireCanvas && this.fire(canvasOut, outOpt);\n      oldTarget.fire(targetOut, outOpt);\n    }\n    if (target && targetChanged) {\n      const inOpt: CanvasEvents[typeof canvasIn] = {\n        ...data,\n        e,\n        target,\n        previousTarget: oldTarget,\n        ...getEventPoints(this, e),\n      };\n      fireCanvas && this.fire(canvasIn, inOpt);\n      target.fire(targetIn, inOpt);\n    }\n  }\n\n  /**\n   * Method that defines actions when an Event Mouse Wheel\n   * @param {Event} e Event object fired on mouseup\n   */\n  __onMouseWheel(e: TPointerEvent) {\n    this._cacheTransformEventData(e);\n    this._handleEvent(e, 'wheel');\n    this._resetTransformEventData();\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event fired on mousemove\n   */\n  _transformObject(e: TPointerEvent) {\n    const scenePoint = this.getScenePoint(e),\n      transform = this._currentTransform!,\n      target = transform.target,\n      //  transform pointer to target's containing coordinate plane\n      //  both pointer and object should agree on every point\n      localPointer = target.group\n        ? sendPointToPlane(\n          scenePoint,\n          undefined,\n          target.group.calcTransformMatrix(),\n        )\n        : scenePoint;\n    transform.shiftKey = e.shiftKey;\n    transform.altKey = !!this.centeredKey && e[this.centeredKey];\n\n    this._performTransformAction(e, transform, localPointer);\n    transform.actionPerformed && this.requestRenderAll();\n  }\n\n  /**\n   * @private\n   */\n  _performTransformAction(\n    e: TPointerEvent,\n    transform: Transform,\n    pointer: Point,\n  ) {\n    const { action, actionHandler, target } = transform;\n\n    const actionPerformed =\n      !!actionHandler && actionHandler(e, transform, pointer.x, pointer.y);\n    actionPerformed && target.setCoords();\n\n    // this object could be created from the function in the control handlers\n    if (action === 'drag' && actionPerformed) {\n      transform.target.isMoving = true;\n      this.setCursor(transform.target.moveCursor || this.moveCursor);\n    }\n    transform.actionPerformed = transform.actionPerformed || actionPerformed;\n  }\n\n  /**\n   * Sets the cursor depending on where the canvas is being hovered.\n   * Note: very buggy in Opera\n   * @param {Event} e Event object\n   * @param {Object} target Object that the mouse is hovering, if so.\n   */\n  _setCursorFromEvent(e: TPointerEvent, target?: FabricObject) {\n    if (!target) {\n      this.setCursor(this.defaultCursor);\n      return;\n    }\n    let hoverCursor = target.hoverCursor || this.hoverCursor;\n    const activeSelection = isActiveSelection(this._activeObject)\n      ? this._activeObject\n      : null,\n      // only show proper corner when group selection is not active\n      corner =\n        (!activeSelection || target.group !== activeSelection) &&\n        // here we call findTargetCorner always with undefined for the touch parameter.\n        // we assume that if you are using a cursor you do not need to interact with\n        // the bigger touch area.\n        target.findControl(this.getViewportPoint(e));\n\n    if (!corner) {\n      if ((target as Group).subTargetCheck) {\n        // hoverCursor should come from top-most subTarget,\n        // so we walk the array backwards\n        this.targets\n          .concat()\n          .reverse()\n          .map((_target) => {\n            hoverCursor = _target.hoverCursor || hoverCursor;\n          });\n      }\n      this.setCursor(hoverCursor);\n    } else {\n      const control = corner.control;\n      this.setCursor(control.cursorStyleHandler(e, control, target));\n    }\n  }\n\n  /**\n   * ## Handles multiple selection\n   * - toggles `target` selection (selects/deselects `target` if it isn't/is selected respectively)\n   * - sets the active object in case it is not set or in case there is a single active object left under active selection.\n   * ---\n   * - If the active object is the active selection we add/remove `target` from it\n   * - If not, add the active object and `target` to the active selection and make it the active object.\n   * @private\n   * @param {TPointerEvent} e Event object\n   * @param {FabricObject} target target of event to select/deselect\n   * @returns true if grouping occurred\n   */\n  protected handleMultiSelection(e: TPointerEvent, target?: FabricObject) {\n    const activeObject = this._activeObject;\n    const isAS = isActiveSelection(activeObject);\n    if (\n      // check if an active object exists on canvas and if the user is pressing the `selectionKey` while canvas supports multi selection.\n      !!activeObject &&\n      this._isSelectionKeyPressed(e) &&\n      this.selection &&\n      // on top of that the user also has to hit a target that is selectable.\n      !!target &&\n      target.selectable &&\n      // group target and active object only if they are different objects\n      // else we try to find a subtarget of `ActiveSelection`\n      (activeObject !== target || isAS) &&\n      //  make sure `activeObject` and `target` aren't ancestors of each other in case `activeObject` is not `ActiveSelection`\n      // if it is then we want to remove `target` from it\n      (isAS ||\n        (!target.isDescendantOf(activeObject) &&\n          !activeObject.isDescendantOf(target))) &&\n      //  target accepts selection\n      !target.onSelect({ e }) &&\n      // make sure we are not on top of a control\n      !activeObject.getActiveControl()\n    ) {\n      if (isAS) {\n        const prevActiveObjects = activeObject.getObjects();\n        if (target === activeObject) {\n          const pointer = this.getViewportPoint(e);\n          target =\n            // first search active objects for a target to remove\n            this.searchPossibleTargets(prevActiveObjects, pointer) ||\n            //  if not found, search under active selection for a target to add\n            // `prevActiveObjects` will be searched but we already know they will not be found\n            this.searchPossibleTargets(this._objects, pointer);\n          // if nothing is found bail out\n          if (!target || !target.selectable) {\n            return false;\n          }\n        }\n        if (target.group === activeObject) {\n          // `target` is part of active selection => remove it\n          activeObject.remove(target);\n          this._hoveredTarget = target;\n          this._hoveredTargets = [...this.targets];\n          // if after removing an object we are left with one only...\n          if (activeObject.size() === 1) {\n            // activate last remaining object\n            // deselecting the active selection will remove the remaining object from it\n            this._setActiveObject(activeObject.item(0), e);\n          }\n        } else {\n          // `target` isn't part of active selection => add it\n          activeObject.multiSelectAdd(target);\n          this._hoveredTarget = activeObject;\n          this._hoveredTargets = [...this.targets];\n        }\n        this._fireSelectionEvents(prevActiveObjects, e);\n      } else {\n        (activeObject as IText).exitEditing &&\n          (activeObject as IText).exitEditing();\n        // add the active object and the target to the active selection and set it as the active object\n        const klass =\n          classRegistry.getClass<typeof ActiveSelection>('ActiveSelection');\n        const newActiveSelection = new klass([], {\n          /**\n           * it is crucial to pass the canvas ref before calling {@link ActiveSelection#multiSelectAdd}\n           * since it uses {@link FabricObject#isInFrontOf} which relies on the canvas ref\n           */\n          canvas: this,\n        });\n        newActiveSelection.multiSelectAdd(activeObject, target);\n        this._hoveredTarget = newActiveSelection;\n        // ISSUE 4115: should we consider subTargets here?\n        // this._hoveredTargets = [];\n        // this._hoveredTargets = this.targets.concat();\n        this._setActiveObject(newActiveSelection, e);\n        this._fireSelectionEvents([activeObject], e);\n      }\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * ## Handles selection\n   * - selects objects that are contained in (and possibly intersecting) the selection bounding box\n   * - sets the active object\n   * ---\n   * runs on mouse up after a mouse move\n   */\n  protected handleSelection(e: TPointerEvent) {\n    if (!this.selection || !this._groupSelector) {\n      return false;\n    }\n    const { x, y, deltaX, deltaY } = this._groupSelector,\n      point1 = new Point(x, y),\n      point2 = point1.add(new Point(deltaX, deltaY)),\n      tl = point1.min(point2),\n      br = point1.max(point2),\n      size = br.subtract(tl);\n\n    const collectedObjects = this.collectObjects(\n      {\n        left: tl.x,\n        top: tl.y,\n        width: size.x,\n        height: size.y,\n      },\n      { includeIntersecting: !this.selectionFullyContained },\n    ) as FabricObject[];\n\n    const objects =\n      // though this method runs only after mouse move the pointer could do a mouse up on the same position as mouse down\n      // should it be handled as is?\n      point1.eq(point2)\n        ? collectedObjects[0]\n          ? [collectedObjects[0]]\n          : []\n        : collectedObjects.length > 1\n          ? collectedObjects\n            .filter((object) => !object.onSelect({ e }))\n            .reverse()\n          : // `setActiveObject` will call `onSelect(collectedObjects[0])` in this case\n          collectedObjects;\n\n    // set active object\n    if (objects.length === 1) {\n      // set as active object\n      this.setActiveObject(objects[0], e);\n    } else if (objects.length > 1) {\n      // add to active selection and make it the active object\n      const klass =\n        classRegistry.getClass<typeof ActiveSelection>('ActiveSelection');\n      this.setActiveObject(new klass(objects, { canvas: this }), e);\n    }\n\n    // cleanup\n    this._groupSelector = null;\n    return true;\n  }\n\n  /**\n   * @override clear {@link textEditingManager}\n   */\n  clear() {\n    this.textEditingManager.clear();\n    super.clear();\n  }\n\n  /**\n   * @override clear {@link textEditingManager}\n   */\n  destroy() {\n    this.removeListeners();\n    this.textEditingManager.dispose();\n    super.destroy();\n  }\n}\n","export const linearDefaultCoords = {\n  x1: 0,\n  y1: 0,\n  x2: 0,\n  y2: 0,\n};\n\nexport const radialDefaultCoords = {\n  ...linearDefaultCoords,\n  r1: 0,\n  r2: 0,\n};\n","/**\n *\n * @param value value to check if NaN\n * @param [valueIfNaN]\n * @returns `fallback` is `value is NaN\n */\nexport const ifNaN = (value: number, valueIfNaN?: number) => {\n  return isNaN(value) && typeof valueIfNaN === 'number' ? valueIfNaN : value;\n};\n","import { ifNaN } from '../util/internals/ifNaN';\nimport { capValue } from '../util/misc/capValue';\n\nconst RE_PERCENT = /^(\\d+\\.\\d+)%|(\\d+)%$/;\n\nexport function isPercent(value: string | null) {\n  return value && RE_PERCENT.test(value);\n}\n\n/**\n *\n * @param value\n * @param valueIfNaN\n * @returns ∈ [0, 1]\n */\nexport function parsePercent(\n  value: string | number | null | undefined,\n  valueIfNaN?: number,\n) {\n  const parsed =\n    typeof value === 'number'\n      ? value\n      : typeof value === 'string'\n        ? parseFloat(value) / (isPercent(value) ? 100 : 1)\n        : NaN;\n  return capValue(0, ifNaN(parsed, valueIfNaN), 1);\n}\n","import { Color } from '../../color/Color';\nimport { parsePercent } from '../../parser/percent';\nimport { ifNaN } from '../../util/internals/ifNaN';\nimport type { ColorStop } from '../typedefs';\n\nconst RE_KEY_VALUE_PAIRS = /\\s*;\\s*/;\nconst RE_KEY_VALUE = /\\s*:\\s*/;\n\nfunction parseColorStop(el: SVGStopElement, multiplier: number) {\n  let colorValue, opacity;\n  const style = el.getAttribute('style');\n  if (style) {\n    const keyValuePairs = style.split(RE_KEY_VALUE_PAIRS);\n\n    if (keyValuePairs[keyValuePairs.length - 1] === '') {\n      keyValuePairs.pop();\n    }\n\n    for (let i = keyValuePairs.length; i--; ) {\n      const [key, value] = keyValuePairs[i]\n        .split(RE_KEY_VALUE)\n        .map((s) => s.trim());\n      if (key === 'stop-color') {\n        colorValue = value;\n      } else if (key === 'stop-opacity') {\n        opacity = value;\n      }\n    }\n  }\n\n  const color = new Color(\n    colorValue || el.getAttribute('stop-color') || 'rgb(0,0,0)',\n  );\n\n  return {\n    offset: parsePercent(el.getAttribute('offset'), 0),\n    color: color.toRgb(),\n    opacity:\n      ifNaN(parseFloat(opacity || el.getAttribute('stop-opacity') || ''), 1) *\n      color.getAlpha() *\n      multiplier,\n  };\n}\n\nexport function parseColorStops(\n  el: SVGGradientElement,\n  opacityAttr: string | null,\n) {\n  const colorStops: ColorStop[] = [],\n    colorStopEls = el.getElementsByTagName('stop'),\n    multiplier = parsePercent(opacityAttr, 1);\n  for (let i = colorStopEls.length; i--; ) {\n    colorStops.push(parseColorStop(colorStopEls[i], multiplier));\n  }\n  return colorStops;\n}\n","import type { GradientType, GradientUnits } from '../typedefs';\n\nexport function parseType(el: SVGGradientElement): GradientType {\n  return el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT'\n    ? 'linear'\n    : 'radial';\n}\n\nexport function parseGradientUnits(el: SVGGradientElement): GradientUnits {\n  return el.getAttribute('gradientUnits') === 'userSpaceOnUse'\n    ? 'pixels'\n    : 'percentage';\n}\n","import { isPercent } from '../../parser/percent';\nimport type { TSize } from '../../typedefs';\nimport type { GradientCoords, GradientType, GradientUnits } from '../typedefs';\nimport { parseGradientUnits, parseType } from './misc';\n\nfunction convertPercentUnitsToValues<\n  T extends GradientType,\n  K extends keyof GradientCoords<T>,\n>(\n  valuesToConvert: Record<K, string | number>,\n  { width, height, gradientUnits }: TSize & { gradientUnits: GradientUnits },\n) {\n  let finalValue;\n  return (Object.keys(valuesToConvert) as K[]).reduce(\n    (acc, prop) => {\n      const propValue = valuesToConvert[prop];\n      if (propValue === 'Infinity') {\n        finalValue = 1;\n      } else if (propValue === '-Infinity') {\n        finalValue = 0;\n      } else {\n        finalValue =\n          typeof propValue === 'string' ? parseFloat(propValue) : propValue;\n        if (typeof propValue === 'string' && isPercent(propValue)) {\n          finalValue *= 0.01;\n          if (gradientUnits === 'pixels') {\n            // then we need to fix those percentages here in svg parsing\n            if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n              finalValue *= width;\n            }\n            if (prop === 'y1' || prop === 'y2') {\n              finalValue *= height;\n            }\n          }\n        }\n      }\n      acc[prop] = finalValue;\n      return acc;\n    },\n    {} as Record<K, number>,\n  );\n}\n\nfunction getValue(el: SVGGradientElement, key: string) {\n  return el.getAttribute(key);\n}\n\nexport function parseLinearCoords(el: SVGGradientElement) {\n  return {\n    x1: getValue(el, 'x1') || 0,\n    y1: getValue(el, 'y1') || 0,\n    x2: getValue(el, 'x2') || '100%',\n    y2: getValue(el, 'y2') || 0,\n  };\n}\n\nexport function parseRadialCoords(el: SVGGradientElement) {\n  return {\n    x1: getValue(el, 'fx') || getValue(el, 'cx') || '50%',\n    y1: getValue(el, 'fy') || getValue(el, 'cy') || '50%',\n    r1: 0,\n    x2: getValue(el, 'cx') || '50%',\n    y2: getValue(el, 'cy') || '50%',\n    r2: getValue(el, 'r') || '50%',\n  };\n}\n\nexport function parseCoords(el: SVGGradientElement, size: TSize) {\n  return convertPercentUnitsToValues(\n    parseType(el) === 'linear' ? parseLinearCoords(el) : parseRadialCoords(el),\n    {\n      ...size,\n      gradientUnits: parseGradientUnits(el),\n    },\n  );\n}\n","import { Color } from '../color/Color';\nimport { iMatrix } from '../constants';\nimport { parseTransformAttribute } from '../parser/parseTransformAttribute';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { TMat2D } from '../typedefs';\nimport { uid } from '../util/internals/uid';\nimport { pick } from '../util/misc/pick';\nimport { matrixToSVG } from '../util/misc/svgParsing';\nimport { linearDefaultCoords, radialDefaultCoords } from './constants';\nimport { parseColorStops } from './parser/parseColorStops';\nimport { parseCoords } from './parser/parseCoords';\nimport { parseType, parseGradientUnits } from './parser/misc';\nimport type {\n  ColorStop,\n  GradientCoords,\n  GradientOptions,\n  GradientType,\n  GradientUnits,\n  SVGOptions,\n} from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { isPath } from '../util/typeAssertions';\n\n/**\n * Gradient class\n * @class Gradient\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\n */\nexport class Gradient<\n  S,\n  T extends GradientType = S extends GradientType ? S : 'linear',\n> {\n  /**\n   * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n   * @type Number\n   * @default 0\n   */\n  declare offsetX: number;\n\n  /**\n   * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n   * @type Number\n   * @default 0\n   */\n  declare offsetY: number;\n\n  /**\n   * A transform matrix to apply to the gradient before painting.\n   * Imported from svg gradients, is not applied with the current transform in the center.\n   * Before this transform is applied, the origin point is at the top left corner of the object\n   * plus the addition of offsetY and offsetX.\n   * @type Number[]\n   * @default null\n   */\n  declare gradientTransform?: TMat2D;\n\n  /**\n   * coordinates units for coords.\n   * If `pixels`, the number of coords are in the same unit of width / height.\n   * If set as `percentage` the coords are still a number, but 1 means 100% of width\n   * for the X and 100% of the height for the y. It can be bigger than 1 and negative.\n   * allowed values pixels or percentage.\n   * @type GradientUnits\n   * @default 'pixels'\n   */\n  declare gradientUnits: GradientUnits;\n\n  /**\n   * Gradient type linear or radial\n   * @type GradientType\n   * @default 'linear'\n   */\n  declare type: T;\n\n  /**\n   * Defines how the gradient is located in space and spread\n   * @type GradientCoords\n   */\n  declare coords: GradientCoords<T>;\n\n  /**\n   * Defines how many colors a gradient has and how they are located on the axis\n   * defined by coords\n   * @type GradientCoords\n   */\n  declare colorStops: ColorStop[];\n\n  /**\n   * If true, this object will not be exported during the serialization of a canvas\n   * @type boolean\n   */\n  declare excludeFromExport?: boolean;\n\n  /**\n   * ID used for SVG export functionalities\n   * @type number | string\n   */\n  declare readonly id: string | number;\n\n  static type = 'Gradient';\n\n  constructor(options: GradientOptions<T>) {\n    const {\n      type = 'linear' as T,\n      gradientUnits = 'pixels',\n      coords = {},\n      colorStops = [],\n      offsetX = 0,\n      offsetY = 0,\n      gradientTransform,\n      id,\n    } = options || {};\n    Object.assign(this, {\n      type,\n      gradientUnits,\n      coords: {\n        ...(type === 'radial' ? radialDefaultCoords : linearDefaultCoords),\n        ...coords,\n      },\n      colorStops,\n      offsetX,\n      offsetY,\n      gradientTransform,\n      id: id ? `${id}_${uid()}` : uid(),\n    });\n  }\n\n  /**\n   * Adds another colorStop\n   * @param {Record<string, string>} colorStop Object with offset and color\n   * @return {Gradient} thisArg\n   */\n  addColorStop(colorStops: Record<string, string>) {\n    for (const position in colorStops) {\n      const color = new Color(colorStops[position]);\n      this.colorStops.push({\n        offset: parseFloat(position),\n        color: color.toRgb(),\n        opacity: color.getAlpha(),\n      });\n    }\n    return this;\n  }\n\n  /**\n   * Returns object representation of a gradient\n   * @param {string[]} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {object}\n   */\n  toObject(propertiesToInclude?: (keyof this | string)[]) {\n    return {\n      ...pick(this, propertiesToInclude as (keyof this)[]),\n      type: this.type,\n      coords: { ...this.coords },\n      colorStops: this.colorStops.map((colorStop) => ({ ...colorStop })),\n      offsetX: this.offsetX,\n      offsetY: this.offsetY,\n      gradientUnits: this.gradientUnits,\n      gradientTransform: this.gradientTransform\n        ? [...this.gradientTransform]\n        : undefined,\n    };\n  }\n\n  /* _TO_SVG_START_ */\n  /**\n   * Returns SVG representation of an gradient\n   * @param {FabricObject} object Object to create a gradient for\n   * @return {String} SVG representation of an gradient (linear/radial)\n   */\n  toSVG(\n    object: FabricObject,\n    {\n      additionalTransform: preTransform,\n    }: { additionalTransform?: string } = {},\n  ) {\n    const markup = [],\n      transform = (\n        this.gradientTransform\n          ? this.gradientTransform.concat()\n          : iMatrix.concat()\n      ) as TMat2D,\n      gradientUnits =\n        this.gradientUnits === 'pixels'\n          ? 'userSpaceOnUse'\n          : 'objectBoundingBox';\n    // colorStops must be sorted ascending, and guarded against deep mutations\n    const colorStops = this.colorStops\n      .map((colorStop) => ({ ...colorStop }))\n      .sort((a, b) => {\n        return a.offset - b.offset;\n      });\n\n    let offsetX = -this.offsetX,\n      offsetY = -this.offsetY;\n    if (gradientUnits === 'objectBoundingBox') {\n      offsetX /= object.width;\n      offsetY /= object.height;\n    } else {\n      offsetX += object.width / 2;\n      offsetY += object.height / 2;\n    }\n    // todo what about polygon/polyline?\n    if (isPath(object) && this.gradientUnits !== 'percentage') {\n      offsetX -= object.pathOffset.x;\n      offsetY -= object.pathOffset.y;\n    }\n    transform[4] -= offsetX;\n    transform[5] -= offsetY;\n\n    const commonAttributes = [\n      `id=\"SVGID_${this.id}\"`,\n      `gradientUnits=\"${gradientUnits}\"`,\n      `gradientTransform=\"${\n        preTransform ? preTransform + ' ' : ''\n      }${matrixToSVG(transform)}\"`,\n      '',\n    ].join(' ');\n\n    if (this.type === 'linear') {\n      const { x1, y1, x2, y2 } = this.coords;\n      markup.push(\n        '<linearGradient ',\n        commonAttributes,\n        ' x1=\"',\n        x1,\n        '\" y1=\"',\n        y1,\n        '\" x2=\"',\n        x2,\n        '\" y2=\"',\n        y2,\n        '\">\\n',\n      );\n    } else if (this.type === 'radial') {\n      const { x1, y1, x2, y2, r1, r2 } = this\n        .coords as GradientCoords<'radial'>;\n      const needsSwap = r1 > r2;\n      // svg radial gradient has just 1 radius. the biggest.\n      markup.push(\n        '<radialGradient ',\n        commonAttributes,\n        ' cx=\"',\n        needsSwap ? x1 : x2,\n        '\" cy=\"',\n        needsSwap ? y1 : y2,\n        '\" r=\"',\n        needsSwap ? r1 : r2,\n        '\" fx=\"',\n        needsSwap ? x2 : x1,\n        '\" fy=\"',\n        needsSwap ? y2 : y1,\n        '\">\\n',\n      );\n      if (needsSwap) {\n        // svg goes from internal to external radius. if radius are inverted, swap color stops.\n        colorStops.reverse(); //  mutates array\n        colorStops.forEach((colorStop) => {\n          colorStop.offset = 1 - colorStop.offset;\n        });\n      }\n      const minRadius = Math.min(r1, r2);\n      if (minRadius > 0) {\n        // i have to shift all colorStops and add new one in 0.\n        const maxRadius = Math.max(r1, r2),\n          percentageShift = minRadius / maxRadius;\n        colorStops.forEach((colorStop) => {\n          colorStop.offset += percentageShift * (1 - colorStop.offset);\n        });\n      }\n    }\n\n    colorStops.forEach(({ color, offset, opacity }) => {\n      markup.push(\n        '<stop ',\n        'offset=\"',\n        offset * 100 + '%',\n        '\" style=\"stop-color:',\n        color,\n        typeof opacity !== 'undefined' ? ';stop-opacity: ' + opacity : ';',\n        '\"/>\\n',\n      );\n    });\n\n    markup.push(\n      this.type === 'linear' ? '</linearGradient>' : '</radialGradient>',\n      '\\n',\n    );\n\n    return markup.join('');\n  }\n  /* _TO_SVG_END_ */\n\n  /**\n   * Returns an instance of CanvasGradient\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @return {CanvasGradient}\n   */\n  toLive(ctx: CanvasRenderingContext2D): CanvasGradient {\n    const { x1, y1, x2, y2, r1, r2 } = this.coords as GradientCoords<'radial'>;\n    const gradient =\n      this.type === 'linear'\n        ? ctx.createLinearGradient(x1, y1, x2, y2)\n        : ctx.createRadialGradient(x1, y1, r1, x2, y2, r2);\n\n    this.colorStops.forEach(({ color, opacity, offset }) => {\n      gradient.addColorStop(\n        offset,\n        typeof opacity !== 'undefined'\n          ? new Color(color).setAlpha(opacity).toRgba()\n          : color,\n      );\n    });\n\n    return gradient;\n  }\n\n  static async fromObject(\n    options: GradientOptions<'linear'>,\n  ): Promise<Gradient<'radial'>>;\n  static async fromObject(\n    options: GradientOptions<'radial'>,\n  ): Promise<Gradient<'radial'>>;\n  static async fromObject(\n    options: GradientOptions<'linear'> | GradientOptions<'radial'>,\n  ) {\n    const { colorStops, gradientTransform } = options;\n    return new this({\n      ...options,\n      colorStops: colorStops\n        ? colorStops.map((colorStop) => ({ ...colorStop }))\n        : undefined,\n      gradientTransform: gradientTransform ? [...gradientTransform] : undefined,\n    });\n  }\n\n  /* _FROM_SVG_START_ */\n  /**\n   * Returns {@link Gradient} instance from an SVG element\n   * @static\n   * @memberOf Gradient\n   * @param {SVGGradientElement} el SVG gradient element\n   * @param {FabricObject} instance\n   * @param {String} opacity A fill-opacity or stroke-opacity attribute to multiply to each stop's opacity.\n   * @param {SVGOptions} svgOptions an object containing the size of the SVG in order to parse correctly gradients\n   * that uses gradientUnits as 'userSpaceOnUse' and percentages.\n   * @return {Gradient} Gradient instance\n   * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n   * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n   *\n   *  @example\n   *\n   *  <linearGradient id=\"linearGrad1\">\n   *    <stop offset=\"0%\" stop-color=\"white\"/>\n   *    <stop offset=\"100%\" stop-color=\"black\"/>\n   *  </linearGradient>\n   *\n   *  OR\n   *\n   *  <linearGradient id=\"linearGrad2\">\n   *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n   *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n   *  </linearGradient>\n   *\n   *  OR\n   *\n   *  <radialGradient id=\"radialGrad1\">\n   *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n   *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n   *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n   *  </radialGradient>\n   *\n   *  OR\n   *\n   *  <radialGradient id=\"radialGrad2\">\n   *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n   *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n   *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n   *  </radialGradient>\n   *\n   */\n  static fromElement(\n    el: SVGGradientElement,\n    instance: FabricObject,\n    svgOptions: SVGOptions,\n  ): Gradient<GradientType> {\n    const gradientUnits = parseGradientUnits(el);\n    const center = instance._findCenterFromElement();\n    return new this({\n      id: el.getAttribute('id') || undefined,\n      type: parseType(el),\n      coords: parseCoords(el, {\n        width: svgOptions.viewBoxWidth || svgOptions.width,\n        height: svgOptions.viewBoxHeight || svgOptions.height,\n      }),\n      colorStops: parseColorStops(el, svgOptions.opacity),\n      gradientUnits,\n      gradientTransform: parseTransformAttribute(\n        el.getAttribute('gradientTransform') || '',\n      ),\n      ...(gradientUnits === 'pixels'\n        ? {\n            offsetX: instance.width / 2 - center.x,\n            offsetY: instance.height / 2 - center.y,\n          }\n        : {\n            offsetX: 0,\n            offsetY: 0,\n          }),\n    });\n  }\n  /* _FROM_SVG_END_ */\n}\n\nclassRegistry.setClass(Gradient, 'gradient');\nclassRegistry.setClass(Gradient, 'linear');\nclassRegistry.setClass(Gradient, 'radial');\n","import { config } from '../config';\nimport type { Abortable, TCrossOrigin, TMat2D, TSize } from '../typedefs';\nimport { ifNaN } from '../util/internals/ifNaN';\nimport { uid } from '../util/internals/uid';\nimport { loadImage } from '../util/misc/objectEnlive';\nimport { pick } from '../util/misc/pick';\nimport { toFixed } from '../util/misc/toFixed';\nimport { classRegistry } from '../ClassRegistry';\nimport type {\n  PatternRepeat,\n  PatternOptions,\n  SerializedPatternOptions,\n} from './types';\nimport { log } from '../util/internals/console';\n\n/**\n * @see {@link http://fabricjs.com/patterns demo}\n * @see {@link http://fabricjs.com/dynamic-patterns demo}\n */\nexport class Pattern {\n  static type = 'Pattern';\n\n  /**\n   * Legacy identifier of the class. Prefer using this.constructor.type 'Pattern'\n   * or utils like isPattern, or instance of to indentify a pattern in your code.\n   * Will be removed in future versiones\n   * @TODO add sustainable warning message\n   * @type string\n   * @deprecated\n   */\n  get type() {\n    return 'pattern';\n  }\n\n  set type(value) {\n    log('warn', 'Setting type has no effect', value);\n  }\n\n  /**\n   * @type PatternRepeat\n   * @defaults\n   */\n  repeat: PatternRepeat = 'repeat';\n\n  /**\n   * Pattern horizontal offset from object's left/top corner\n   * @type Number\n   * @default\n   */\n  offsetX = 0;\n\n  /**\n   * Pattern vertical offset from object's left/top corner\n   * @type Number\n   * @default\n   */\n  offsetY = 0;\n\n  /**\n   * @type TCrossOrigin\n   * @default\n   */\n  crossOrigin: TCrossOrigin = '';\n\n  /**\n   * transform matrix to change the pattern, imported from svgs.\n   * @todo verify if using the identity matrix as default makes the rest of the code more easy\n   * @type Array\n   * @default\n   */\n  declare patternTransform?: TMat2D;\n\n  /**\n   * The actual pixel source of the pattern\n   */\n  declare source: CanvasImageSource;\n\n  /**\n   * If true, this object will not be exported during the serialization of a canvas\n   * @type boolean\n   */\n  declare excludeFromExport?: boolean;\n\n  /**\n   * ID used for SVG export functionalities\n   * @type number\n   */\n  declare readonly id: number;\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   * @param {option.source} [source] the pattern source, eventually empty or a drawable\n   */\n  constructor(options: PatternOptions) {\n    this.id = uid();\n    Object.assign(this, options);\n  }\n\n  /**\n   * @returns true if {@link source} is an <img> element\n   */\n  isImageSource(): this is { source: HTMLImageElement } {\n    return (\n      !!this.source && typeof (this.source as HTMLImageElement).src === 'string'\n    );\n  }\n\n  /**\n   * @returns true if {@link source} is a <canvas> element\n   */\n  isCanvasSource(): this is { source: HTMLCanvasElement } {\n    return !!this.source && !!(this.source as HTMLCanvasElement).toDataURL;\n  }\n\n  sourceToString(): string {\n    return this.isImageSource()\n      ? this.source.src\n      : this.isCanvasSource()\n        ? this.source.toDataURL()\n        : '';\n  }\n\n  /**\n   * Returns an instance of CanvasPattern\n   * @param {CanvasRenderingContext2D} ctx Context to create pattern\n   * @return {CanvasPattern}\n   */\n  toLive(ctx: CanvasRenderingContext2D): CanvasPattern | null {\n    if (\n      // if the image failed to load, return, and allow rest to continue loading\n      !this.source ||\n      // if an image\n      (this.isImageSource() &&\n        (!this.source.complete ||\n          this.source.naturalWidth === 0 ||\n          this.source.naturalHeight === 0))\n    ) {\n      return null;\n    }\n\n    return ctx.createPattern(this.source, this.repeat)!;\n  }\n\n  /**\n   * Returns object representation of a pattern\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {object} Object representation of a pattern instance\n   */\n  toObject(propertiesToInclude: string[] = []): Record<string, any> {\n    const { repeat, crossOrigin } = this;\n    return {\n      ...pick(this, propertiesToInclude as (keyof this)[]),\n      type: 'pattern',\n      source: this.sourceToString(),\n      repeat,\n      crossOrigin,\n      offsetX: toFixed(this.offsetX, config.NUM_FRACTION_DIGITS),\n      offsetY: toFixed(this.offsetY, config.NUM_FRACTION_DIGITS),\n      patternTransform: this.patternTransform\n        ? [...this.patternTransform]\n        : null,\n    };\n  }\n\n  /* _TO_SVG_START_ */\n  /**\n   * Returns SVG representation of a pattern\n   */\n  toSVG({ width, height }: TSize): string {\n    const { source: patternSource, repeat, id } = this,\n      patternOffsetX = ifNaN(this.offsetX / width, 0),\n      patternOffsetY = ifNaN(this.offsetY / height, 0),\n      patternWidth =\n        repeat === 'repeat-y' || repeat === 'no-repeat'\n          ? 1 + Math.abs(patternOffsetX || 0)\n          : ifNaN(\n              ((patternSource as HTMLImageElement).width as number) / width,\n              0,\n            ),\n      patternHeight =\n        repeat === 'repeat-x' || repeat === 'no-repeat'\n          ? 1 + Math.abs(patternOffsetY || 0)\n          : ifNaN(\n              ((patternSource as HTMLImageElement).height as number) / height,\n              0,\n            );\n\n    return [\n      `<pattern id=\"SVGID_${id}\" x=\"${patternOffsetX}\" y=\"${patternOffsetY}\" width=\"${patternWidth}\" height=\"${patternHeight}\">`,\n      `<image x=\"0\" y=\"0\" width=\"${\n        (patternSource as HTMLImageElement).width\n      }\" height=\"${\n        (patternSource as HTMLImageElement).height\n      }\" xlink:href=\"${this.sourceToString()}\"></image>`,\n      `</pattern>`,\n      '',\n    ].join('\\n');\n  }\n  /* _TO_SVG_END_ */\n\n  static async fromObject(\n    {\n      type,\n      source,\n      patternTransform,\n      ...otherOptions\n    }: SerializedPatternOptions,\n    options?: Abortable,\n  ): Promise<Pattern> {\n    const img = await loadImage(source, {\n      ...options,\n      crossOrigin: otherOptions.crossOrigin,\n    });\n    return new this({\n      ...otherOptions,\n      patternTransform:\n        patternTransform && (patternTransform.slice(0) as TMat2D),\n      source: img,\n    });\n  }\n}\n\nclassRegistry.setClass(Pattern);\n// kept for compatibility reason\nclassRegistry.setClass(Pattern, 'pattern');\n","import { Color } from '../color/Color';\nimport type { Point } from '../Point';\nimport type { Shadow } from '../Shadow';\nimport type { Canvas } from '../canvas/Canvas';\nimport type { TBrushEventData } from './typedefs';\n\n/**\n * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\n */\nexport abstract class BaseBrush {\n  /**\n   * Color of a brush\n   * @type String\n   * @default\n   */\n  color = 'rgb(0, 0, 0)';\n\n  /**\n   * Width of a brush, has to be a Number, no string literals\n   * @type Number\n   * @default\n   */\n  width = 1;\n\n  /**\n   * Shadow object representing shadow of this shape.\n   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\n   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\n   * @type Shadow\n   * @default\n   */\n  shadow: Shadow | null = null;\n\n  /**\n   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\n   * @type String\n   * @default\n   */\n  strokeLineCap: CanvasLineCap = 'round';\n\n  /**\n   * Corner style of a brush (one of \"bevel\", \"round\", \"miter\")\n   * @type String\n   * @default\n   */\n  strokeLineJoin: CanvasLineJoin = 'round';\n\n  /**\n   * Maximum miter length (used for strokeLineJoin = \"miter\") of a brush's\n   * @type Number\n   * @default\n   */\n  strokeMiterLimit = 10;\n\n  /**\n   * Stroke Dash Array.\n   * @type Array\n   * @default\n   */\n  strokeDashArray: number[] | null = null;\n\n  /**\n   * When `true`, the free drawing is limited to the whiteboard size. Default to false.\n   * @type Boolean\n   * @default false\n   */\n\n  limitedToCanvasSize = false;\n\n  /**\n   * @todo add type\n   */\n  declare canvas: Canvas;\n\n  constructor(canvas: Canvas) {\n    this.canvas = canvas;\n  }\n\n  abstract _render(): void;\n  abstract onMouseDown(pointer: Point, ev: TBrushEventData): void;\n  abstract onMouseMove(pointer: Point, ev: TBrushEventData): void;\n  /**\n   * @returns true if brush should continue blocking interaction\n   */\n  abstract onMouseUp(ev: TBrushEventData): boolean | void;\n\n  /**\n   * Sets brush styles\n   * @private\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  _setBrushStyles(ctx: CanvasRenderingContext2D) {\n    ctx.strokeStyle = this.color;\n    ctx.lineWidth = this.width;\n    ctx.lineCap = this.strokeLineCap;\n    ctx.miterLimit = this.strokeMiterLimit;\n    ctx.lineJoin = this.strokeLineJoin;\n    ctx.setLineDash(this.strokeDashArray || []);\n  }\n\n  /**\n   * Sets the transformation on given context\n   * @param {CanvasRenderingContext2D} ctx context to render on\n   * @private\n   */\n  protected _saveAndTransform(ctx: CanvasRenderingContext2D) {\n    const v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n  }\n\n  protected needsFullRender() {\n    const color = new Color(this.color);\n    return color.getAlpha() < 1 || !!this.shadow;\n  }\n\n  /**\n   * Sets brush shadow styles\n   * @private\n   */\n  protected _setShadow() {\n    if (!this.shadow || !this.canvas) {\n      return;\n    }\n\n    const canvas = this.canvas,\n      shadow = this.shadow,\n      ctx = canvas.contextTop,\n      zoom = canvas.getZoom() * canvas.getRetinaScaling();\n\n    ctx.shadowColor = shadow.color;\n    ctx.shadowBlur = shadow.blur * zoom;\n    ctx.shadowOffsetX = shadow.offsetX * zoom;\n    ctx.shadowOffsetY = shadow.offsetY * zoom;\n  }\n\n  /**\n   * Removes brush shadow styles\n   * @private\n   */\n  protected _resetShadow() {\n    const ctx = this.canvas.contextTop;\n\n    ctx.shadowColor = '';\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n  }\n\n  /**\n   * Check is pointer is outside canvas boundaries\n   * @param {Object} pointer\n   * @private\n   */\n  protected _isOutSideCanvas(pointer: Point) {\n    return (\n      pointer.x < 0 ||\n      pointer.x > this.canvas.getWidth() ||\n      pointer.y < 0 ||\n      pointer.y > this.canvas.getHeight()\n    );\n  }\n}\n","import { config } from '../config';\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport type { XY } from '../Point';\nimport { Point } from '../Point';\nimport { makeBoundingBoxFromPoints } from '../util/misc/boundingBoxFromPoints';\nimport { toFixed } from '../util/misc/toFixed';\nimport {\n  getBoundsOfCurve,\n  joinPath,\n  makePathSimpler,\n  parsePath,\n} from '../util/path';\nimport { classRegistry } from '../ClassRegistry';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport type {\n  TComplexPathData,\n  TPathSegmentInfo,\n  TSimplePathData,\n} from '../util/path/typedefs';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { ObjectEvents } from '../EventTypeDefs';\nimport type {\n  TBBox,\n  TClassProperties,\n  TSVGReviver,\n  TOptions,\n} from '../typedefs';\nimport { CENTER, LEFT, TOP } from '../constants';\nimport type { CSSRules } from '../parser/typedefs';\n\ninterface UniquePathProps {\n  sourcePath?: string;\n  path?: TSimplePathData;\n}\n\nexport interface SerializedPathProps\n  extends SerializedObjectProps,\n    UniquePathProps {}\n\nexport interface PathProps extends FabricObjectProps, UniquePathProps {}\n\nexport interface IPathBBox extends TBBox {\n  left: number;\n  top: number;\n  pathOffset: Point;\n}\n\nexport class Path<\n  Props extends TOptions<PathProps> = Partial<PathProps>,\n  SProps extends SerializedPathProps = SerializedPathProps,\n  EventSpec extends ObjectEvents = ObjectEvents,\n> extends FabricObject<Props, SProps, EventSpec> {\n  /**\n   * Array of path points\n   * @type Array\n   * @default\n   */\n  declare path: TSimplePathData;\n\n  declare pathOffset: Point;\n\n  declare sourcePath?: string;\n\n  declare segmentsInfo?: TPathSegmentInfo[];\n\n  static type = 'Path';\n\n  static cacheProperties = [...cacheProperties, 'path', 'fillRule'];\n\n  /**\n   * Constructor\n   * @param {TComplexPathData} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n   * @param {Partial<PathProps>} [options] Options object\n   * @return {Path} thisArg\n   */\n  constructor(\n    path: TComplexPathData | string,\n    // todo: evaluate this spread here\n    { path: _, left, top, ...options }: Partial<Props> = {},\n  ) {\n    super();\n    Object.assign(this, Path.ownDefaults);\n    this.setOptions(options);\n    this._setPath(path || [], true);\n    typeof left === 'number' && this.set(LEFT, left);\n    typeof top === 'number' && this.set(TOP, top);\n  }\n\n  /**\n   * @private\n   * @param {TComplexPathData | string} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n   * @param {boolean} [adjustPosition] pass true to reposition the object according to the bounding box\n   * @returns {Point} top left position of the bounding box, useful for complementary positioning\n   */\n  _setPath(path: TComplexPathData | string, adjustPosition?: boolean) {\n    this.path = makePathSimpler(Array.isArray(path) ? path : parsePath(path));\n    this.setBoundingBox(adjustPosition);\n  }\n\n  /**\n   * This function is an helper for svg import. it returns the center of the object in the svg\n   * untransformed coordinates, by look at the polyline/polygon points.\n   * @private\n   * @return {Point} center point from element coordinates\n   */\n  _findCenterFromElement(): Point {\n    const bbox = this._calcBoundsFromPath();\n    return new Point(bbox.left + bbox.width / 2, bbox.top + bbox.height / 2);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx context to render path on\n   */\n  _renderPathCommands(ctx: CanvasRenderingContext2D) {\n    const l = -this.pathOffset.x,\n      t = -this.pathOffset.y;\n\n    ctx.beginPath();\n\n    for (const command of this.path) {\n      switch (\n        command[0] // first letter\n      ) {\n        case 'L': // lineto, absolute\n          ctx.lineTo(command[1] + l, command[2] + t);\n          break;\n\n        case 'M': // moveTo, absolute\n          ctx.moveTo(command[1] + l, command[2] + t);\n          break;\n\n        case 'C': // bezierCurveTo, absolute\n          ctx.bezierCurveTo(\n            command[1] + l,\n            command[2] + t,\n            command[3] + l,\n            command[4] + t,\n            command[5] + l,\n            command[6] + t,\n          );\n          break;\n\n        case 'Q': // quadraticCurveTo, absolute\n          ctx.quadraticCurveTo(\n            command[1] + l,\n            command[2] + t,\n            command[3] + l,\n            command[4] + t,\n          );\n          break;\n\n        case 'Z':\n          ctx.closePath();\n          break;\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx context to render path on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    this._renderPathCommands(ctx);\n    this._renderPaintInOrder(ctx);\n  }\n\n  /**\n   * Returns string representation of an instance\n   * @return {string} string representation of an instance\n   */\n  toString() {\n    return `#<Path (${this.complexity()}): { \"top\": ${this.top}, \"left\": ${\n      this.left\n    } }>`;\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return {\n      ...super.toObject(propertiesToInclude),\n      path: this.path.map((pathCmd) => pathCmd.slice()),\n    };\n  }\n\n  /**\n   * Returns dataless object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toDatalessObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    const o = this.toObject<T, K>(propertiesToInclude);\n    if (this.sourcePath) {\n      delete o.path;\n      o.sourcePath = this.sourcePath;\n    }\n    return o;\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG() {\n    const path = joinPath(this.path, config.NUM_FRACTION_DIGITS);\n    return [\n      '<path ',\n      'COMMON_PARTS',\n      `d=\"${path}\" stroke-linecap=\"round\" />\\n`,\n    ];\n  }\n\n  /**\n   * @private\n   * @return the path command's translate transform attribute\n   */\n  _getOffsetTransform() {\n    const digits = config.NUM_FRACTION_DIGITS;\n    return ` translate(${toFixed(-this.pathOffset.x, digits)}, ${toFixed(\n      -this.pathOffset.y,\n      digits,\n    )})`;\n  }\n\n  /**\n   * Returns svg clipPath representation of an instance\n   * @param {Function} [reviver] Method for further parsing of svg representation.\n   * @return {string} svg representation of an instance\n   */\n  toClipPathSVG(reviver?: TSVGReviver): string {\n    const additionalTransform = this._getOffsetTransform();\n    return (\n      '\\t' +\n      this._createBaseClipPathSVGMarkup(this._toSVG(), {\n        reviver,\n        additionalTransform: additionalTransform,\n      })\n    );\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @param {Function} [reviver] Method for further parsing of svg representation.\n   * @return {string} svg representation of an instance\n   */\n  toSVG(reviver?: TSVGReviver): string {\n    const additionalTransform = this._getOffsetTransform();\n    return this._createBaseSVGMarkup(this._toSVG(), {\n      reviver,\n      additionalTransform: additionalTransform,\n    });\n  }\n\n  /**\n   * Returns number representation of an instance complexity\n   * @return {number} complexity of this instance\n   */\n  complexity() {\n    return this.path.length;\n  }\n\n  setDimensions() {\n    this.setBoundingBox();\n  }\n\n  setBoundingBox(adjustPosition?: boolean) {\n    const { width, height, pathOffset } = this._calcDimensions();\n    this.set({ width, height, pathOffset });\n    // using pathOffset because it match the use case.\n    // if pathOffset change here we need to use left + width/2 , top + height/2\n    adjustPosition && this.setPositionByOrigin(pathOffset, CENTER, CENTER);\n  }\n\n  _calcBoundsFromPath(): TBBox {\n    const bounds: XY[] = [];\n    let subpathStartX = 0,\n      subpathStartY = 0,\n      x = 0, // current x\n      y = 0; // current y\n\n    for (const command of this.path) {\n      // current instruction\n      switch (\n        command[0] // first letter\n      ) {\n        case 'L': // lineto, absolute\n          x = command[1];\n          y = command[2];\n          bounds.push({ x: subpathStartX, y: subpathStartY }, { x, y });\n          break;\n\n        case 'M': // moveTo, absolute\n          x = command[1];\n          y = command[2];\n          subpathStartX = x;\n          subpathStartY = y;\n          break;\n\n        case 'C': // bezierCurveTo, absolute\n          bounds.push(\n            ...getBoundsOfCurve(\n              x,\n              y,\n              command[1],\n              command[2],\n              command[3],\n              command[4],\n              command[5],\n              command[6],\n            ),\n          );\n          x = command[5];\n          y = command[6];\n          break;\n\n        case 'Q': // quadraticCurveTo, absolute\n          bounds.push(\n            ...getBoundsOfCurve(\n              x,\n              y,\n              command[1],\n              command[2],\n              command[1],\n              command[2],\n              command[3],\n              command[4],\n            ),\n          );\n          x = command[3];\n          y = command[4];\n          break;\n\n        case 'Z':\n          x = subpathStartX;\n          y = subpathStartY;\n          break;\n      }\n    }\n    return makeBoundingBoxFromPoints(bounds);\n  }\n\n  /**\n   * @private\n   */\n  _calcDimensions(): IPathBBox {\n    const bbox = this._calcBoundsFromPath();\n\n    return {\n      ...bbox,\n      pathOffset: new Point(\n        bbox.left + bbox.width / 2,\n        bbox.top + bbox.height / 2,\n      ),\n    };\n  }\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `Path.fromElement`)\n   * @static\n   * @memberOf Path\n   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\n   */\n  static ATTRIBUTE_NAMES = [...SHARED_ATTRIBUTES, 'd'];\n\n  /**\n   * Creates an instance of Path from an object\n   * @static\n   * @memberOf Path\n   * @param {Object} object\n   * @returns {Promise<Path>}\n   */\n  static fromObject<T extends TOptions<SerializedPathProps>>(object: T) {\n    return this._fromObject<Path>(object, {\n      extraParam: 'path',\n    });\n  }\n\n  /**\n   * Creates an instance of Path from an SVG <path> element\n   * @static\n   * @memberOf Path\n   * @param {HTMLElement} element to parse\n   * @param {Partial<PathProps>} [options] Options object\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Partial<PathProps>,\n    cssRules?: CSSRules,\n  ) {\n    const { d, ...parsedAttributes } = parseAttributes(\n      element,\n      this.ATTRIBUTE_NAMES,\n      cssRules,\n    );\n    return new this(d, {\n      ...parsedAttributes,\n      ...options,\n      // we pass undefined to instruct the constructor to position the object using the bbox\n      left: undefined,\n      top: undefined,\n    });\n  }\n}\n\nclassRegistry.setClass(Path);\nclassRegistry.setSVGClass(Path);\n\n/* _FROM_SVG_START_ */\n","import type { ModifierKey, TEvent } from '../EventTypeDefs';\nimport type { Point } from '../Point';\nimport { Shadow } from '../Shadow';\nimport { Path } from '../shapes/Path';\nimport { getSmoothPathFromPoints, joinPath } from '../util/path';\nimport type { Canvas } from '../canvas/Canvas';\nimport { BaseBrush } from './BaseBrush';\nimport type { TSimplePathData } from '../util/path/typedefs';\n\n/**\n * @private\n * @param {TSimplePathData} pathData SVG path commands\n * @returns {boolean}\n */\nfunction isEmptySVGPath(pathData: TSimplePathData): boolean {\n  return joinPath(pathData) === 'M 0 0 Q 0 0 0 0 L 0 0';\n}\n\nexport class PencilBrush extends BaseBrush {\n  /**\n   * Discard points that are less than `decimate` pixel distant from each other\n   * @type Number\n   * @default 0.4\n   */\n  decimate = 0.4;\n\n  /**\n   * Draws a straight line between last recorded point to current pointer\n   * Used for `shift` functionality\n   *\n   * @type boolean\n   * @default false\n   */\n  drawStraightLine = false;\n\n  /**\n   * The event modifier key that makes the brush draw a straight line.\n   * If `null` or 'none' or any other string that is not a modifier key the feature is disabled.\n   * @type {ModifierKey | undefined | null}\n   */\n  straightLineKey: ModifierKey | undefined | null = 'shiftKey';\n\n  private declare _points: Point[];\n  private declare _hasStraightLine: boolean;\n  private declare oldEnd?: Point;\n\n  constructor(canvas: Canvas) {\n    super(canvas);\n    this._points = [];\n    this._hasStraightLine = false;\n  }\n\n  needsFullRender() {\n    return super.needsFullRender() || this._hasStraightLine;\n  }\n\n  static drawSegment(ctx: CanvasRenderingContext2D, p1: Point, p2: Point) {\n    const midPoint = p1.midPointFrom(p2);\n    ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n    return midPoint;\n  }\n\n  /**\n   * Invoked on mouse down\n   * @param {Point} pointer\n   */\n  onMouseDown(pointer: Point, { e }: TEvent) {\n    if (!this.canvas._isMainEvent(e)) {\n      return;\n    }\n    this.drawStraightLine = !!this.straightLineKey && e[this.straightLineKey];\n    this._prepareForDrawing(pointer);\n    // capture coordinates immediately\n    // this allows to draw dots (when movement never occurs)\n    this._addPoint(pointer);\n    this._render();\n  }\n\n  /**\n   * Invoked on mouse move\n   * @param {Point} pointer\n   */\n  onMouseMove(pointer: Point, { e }: TEvent) {\n    if (!this.canvas._isMainEvent(e)) {\n      return;\n    }\n    this.drawStraightLine = !!this.straightLineKey && e[this.straightLineKey];\n    if (this.limitedToCanvasSize === true && this._isOutSideCanvas(pointer)) {\n      return;\n    }\n    if (this._addPoint(pointer) && this._points.length > 1) {\n      if (this.needsFullRender()) {\n        // redraw curve\n        // clear top canvas\n        this.canvas.clearContext(this.canvas.contextTop);\n        this._render();\n      } else {\n        const points = this._points,\n          length = points.length,\n          ctx = this.canvas.contextTop;\n        // draw the curve update\n        this._saveAndTransform(ctx);\n        if (this.oldEnd) {\n          ctx.beginPath();\n          ctx.moveTo(this.oldEnd.x, this.oldEnd.y);\n        }\n        this.oldEnd = PencilBrush.drawSegment(\n          ctx,\n          points[length - 2],\n          points[length - 1],\n        );\n        ctx.stroke();\n        ctx.restore();\n      }\n    }\n  }\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp({ e }: TEvent) {\n    if (!this.canvas._isMainEvent(e)) {\n      return true;\n    }\n    this.drawStraightLine = false;\n    this.oldEnd = undefined;\n    this._finalizeAndAddPath();\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {Point} pointer Actual mouse position related to the canvas.\n   */\n  _prepareForDrawing(pointer: Point) {\n    this._reset();\n    this._addPoint(pointer);\n    this.canvas.contextTop.moveTo(pointer.x, pointer.y);\n  }\n\n  /**\n   * @private\n   * @param {Point} point Point to be added to points array\n   */\n  _addPoint(point: Point) {\n    if (\n      this._points.length > 1 &&\n      point.eq(this._points[this._points.length - 1])\n    ) {\n      return false;\n    }\n    if (this.drawStraightLine && this._points.length > 1) {\n      this._hasStraightLine = true;\n      this._points.pop();\n    }\n    this._points.push(point);\n    return true;\n  }\n\n  /**\n   * Clear points array and set contextTop canvas style.\n   * @private\n   */\n  _reset() {\n    this._points = [];\n    this._setBrushStyles(this.canvas.contextTop);\n    this._setShadow();\n    this._hasStraightLine = false;\n  }\n\n  /**\n   * Draw a smooth path on the topCanvas using quadraticCurveTo\n   * @private\n   * @param {CanvasRenderingContext2D} [ctx]\n   */\n  _render(ctx: CanvasRenderingContext2D = this.canvas.contextTop) {\n    let p1 = this._points[0],\n      p2 = this._points[1];\n    this._saveAndTransform(ctx);\n    ctx.beginPath();\n    //if we only have 2 points in the path and they are the same\n    //it means that the user only clicked the canvas without moving the mouse\n    //then we should be drawing a dot. A path isn't drawn between two identical dots\n    //that's why we set them apart a bit\n    if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n      const width = this.width / 1000;\n      p1.x -= width;\n      p2.x += width;\n    }\n    ctx.moveTo(p1.x, p1.y);\n\n    for (let i = 1; i < this._points.length; i++) {\n      // we pick the point between pi + 1 & pi + 2 as the\n      // end point and p1 as our control point.\n      PencilBrush.drawSegment(ctx, p1, p2);\n      p1 = this._points[i];\n      p2 = this._points[i + 1];\n    }\n    // Draw last line as a straight line while\n    // we wait for the next point to be able to calculate\n    // the bezier control point\n    ctx.lineTo(p1.x, p1.y);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  /**\n   * Converts points to SVG path\n   * @param {Point[]} points Array of points\n   * @return {TSimplePathData} SVG path commands\n   */\n  convertPointsToSVGPath(points: Point[]): TSimplePathData {\n    const correction = this.width / 1000;\n    return getSmoothPathFromPoints(points, correction);\n  }\n\n  /**\n   * Creates a Path object to add on canvas\n   * @param {TSimplePathData} pathData Path data\n   * @return {Path} Path to add on canvas\n   */\n  createPath(pathData: TSimplePathData): Path {\n    const path = new Path(pathData, {\n      fill: null,\n      stroke: this.color,\n      strokeWidth: this.width,\n      strokeLineCap: this.strokeLineCap,\n      strokeMiterLimit: this.strokeMiterLimit,\n      strokeLineJoin: this.strokeLineJoin,\n      strokeDashArray: this.strokeDashArray,\n    });\n    if (this.shadow) {\n      this.shadow.affectStroke = true;\n      path.shadow = new Shadow(this.shadow);\n    }\n\n    return path;\n  }\n\n  /**\n   * Decimate points array with the decimate value\n   */\n  decimatePoints(points: Point[], distance: number) {\n    if (points.length <= 2) {\n      return points;\n    }\n    let lastPoint = points[0],\n      cDistance;\n    const zoom = this.canvas.getZoom(),\n      adjustedDistance = Math.pow(distance / zoom, 2),\n      l = points.length - 1,\n      newPoints = [lastPoint];\n    for (let i = 1; i < l - 1; i++) {\n      cDistance =\n        Math.pow(lastPoint.x - points[i].x, 2) +\n        Math.pow(lastPoint.y - points[i].y, 2);\n      if (cDistance >= adjustedDistance) {\n        lastPoint = points[i];\n        newPoints.push(lastPoint);\n      }\n    }\n    // Add the last point from the original line to the end of the array.\n    // This ensures decimate doesn't delete the last point on the line, and ensures the line is > 1 point.\n    newPoints.push(points[l]);\n    return newPoints;\n  }\n\n  /**\n   * On mouseup after drawing the path on contextTop canvas\n   * we use the points captured to create an new Path object\n   * and add it to the canvas.\n   */\n  _finalizeAndAddPath() {\n    const ctx = this.canvas.contextTop;\n    ctx.closePath();\n    if (this.decimate) {\n      this._points = this.decimatePoints(this._points, this.decimate);\n    }\n    const pathData = this.convertPointsToSVGPath(this._points);\n    if (isEmptySVGPath(pathData)) {\n      // do not create 0 width/height paths, as they are\n      // rendered inconsistently across browsers\n      // Firefox 4, for example, renders a dot,\n      // whereas Chrome 10 renders nothing\n      this.canvas.requestRenderAll();\n      return;\n    }\n\n    const path = this.createPath(pathData);\n    this.canvas.clearContext(this.canvas.contextTop);\n    this.canvas.fire('before:path:created', { path: path });\n    this.canvas.add(path);\n    this.canvas.requestRenderAll();\n    path.setCoords();\n    this._resetShadow();\n\n    // fire event 'path' created\n    this.canvas.fire('path:created', { path: path });\n  }\n}\n","import type { ObjectEvents } from '../EventTypeDefs';\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport { cos } from '../util/misc/cos';\nimport { degreesToRadians } from '../util/misc/radiansDegreesConversion';\nimport { sin } from '../util/misc/sin';\nimport { classRegistry } from '../ClassRegistry';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport type { Abortable, TClassProperties, TOptions } from '../typedefs';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { CSSRules } from '../parser/typedefs';\nimport { SCALE_X, SCALE_Y } from '../constants';\n\ninterface UniqueCircleProps {\n  /**\n   * Radius of this circle\n   * @type Number\n   * @default 0\n   */\n  radius: number;\n\n  /**\n   * Angle for the start of the circle, in degrees.\n   * @type TDegree 0 - 359\n   * @default 0\n   */\n  startAngle: number;\n\n  /**\n   * Angle for the end of the circle, in degrees\n   * @type TDegree 1 - 360\n   * @default 360\n   */\n  endAngle: number;\n\n  /**\n   * Orientation for the direction of the circle.\n   * Setting to true will switch the arc of the circle to traverse from startAngle to endAngle in a counter-clockwise direction.\n   * Note: this will only change how the circle is drawn, and does not affect rotational transformation.\n   * @default false\n   */\n  counterClockwise: boolean;\n}\n\nexport interface SerializedCircleProps\n  extends SerializedObjectProps,\n    UniqueCircleProps {}\n\nexport interface CircleProps extends FabricObjectProps, UniqueCircleProps {}\n\nconst CIRCLE_PROPS = [\n  'radius',\n  'startAngle',\n  'endAngle',\n  'counterClockwise',\n] as const;\n\nexport const circleDefaultValues: Partial<TClassProperties<Circle>> = {\n  radius: 0,\n  startAngle: 0,\n  endAngle: 360,\n  counterClockwise: false,\n};\n\nexport class Circle<\n    Props extends TOptions<CircleProps> = Partial<CircleProps>,\n    SProps extends SerializedCircleProps = SerializedCircleProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends FabricObject<Props, SProps, EventSpec>\n  implements UniqueCircleProps\n{\n  declare radius: number;\n  declare startAngle: number;\n  declare endAngle: number;\n  declare counterClockwise: boolean;\n\n  static type = 'Circle';\n\n  static cacheProperties = [...cacheProperties, ...CIRCLE_PROPS];\n\n  static ownDefaults = circleDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...Circle.ownDefaults,\n    };\n  }\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  constructor(options?: Props) {\n    super();\n    Object.assign(this, Circle.ownDefaults);\n    this.setOptions(options);\n  }\n\n  /**\n   * @private\n   * @param {String} key\n   * @param {*} value\n   */\n  _set(key: string, value: any) {\n    super._set(key, value);\n\n    if (key === 'radius') {\n      this.setRadius(value);\n    }\n\n    return this;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    ctx.beginPath();\n    ctx.arc(\n      0,\n      0,\n      this.radius,\n      degreesToRadians(this.startAngle),\n      degreesToRadians(this.endAngle),\n      this.counterClockwise,\n    );\n    this._renderPaintInOrder(ctx);\n  }\n\n  /**\n   * Returns horizontal radius of an object (according to how an object is scaled)\n   * @return {Number}\n   */\n  getRadiusX(): number {\n    return this.get('radius') * this.get(SCALE_X);\n  }\n\n  /**\n   * Returns vertical radius of an object (according to how an object is scaled)\n   * @return {Number}\n   */\n  getRadiusY(): number {\n    return this.get('radius') * this.get(SCALE_Y);\n  }\n\n  /**\n   * Sets radius of an object (and updates width accordingly)\n   */\n  setRadius(value: number) {\n    this.radius = value;\n    this.set({ width: value * 2, height: value * 2 });\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return super.toObject([...CIRCLE_PROPS, ...propertiesToInclude]);\n  }\n\n  /* _TO_SVG_START_ */\n\n  /**\n   * Returns svg representation of an instance\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG(): string[] {\n    const angle = (this.endAngle - this.startAngle) % 360;\n\n    if (angle === 0) {\n      return [\n        '<circle ',\n        'COMMON_PARTS',\n        'cx=\"0\" cy=\"0\" ',\n        'r=\"',\n        `${this.radius}`,\n        '\" />\\n',\n      ];\n    } else {\n      const { radius } = this;\n      const start = degreesToRadians(this.startAngle),\n        end = degreesToRadians(this.endAngle),\n        startX = cos(start) * radius,\n        startY = sin(start) * radius,\n        endX = cos(end) * radius,\n        endY = sin(end) * radius,\n        largeFlag = angle > 180 ? 1 : 0,\n        sweepFlag = this.counterClockwise ? 0 : 1;\n      return [\n        `<path d=\"M ${startX} ${startY} A ${radius} ${radius} 0 ${largeFlag} ${sweepFlag} ${endX} ${endY}\" `,\n        'COMMON_PARTS',\n        ' />\\n',\n      ];\n    }\n  }\n  /* _TO_SVG_END_ */\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link Circle.fromElement})\n   * @static\n   * @memberOf Circle\n   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\n   */\n  static ATTRIBUTE_NAMES = ['cx', 'cy', 'r', ...SHARED_ATTRIBUTES];\n\n  /**\n   * Returns {@link Circle} instance from an SVG element\n   * @static\n   * @memberOf Circle\n   * @param {HTMLElement} element Element to parse\n   * @param {Object} [options] Partial Circle object to default missing properties on the element.\n   * @throws {Error} If value of `r` attribute is missing or invalid\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable,\n    cssRules?: CSSRules,\n  ): Promise<Circle> {\n    const {\n      left = 0,\n      top = 0,\n      radius = 0,\n      ...otherParsedAttributes\n    } = parseAttributes(\n      element,\n      this.ATTRIBUTE_NAMES,\n      cssRules,\n    ) as Partial<CircleProps>;\n\n    // this probably requires to be fixed for default origins not being top/left.\n\n    return new this({\n      ...otherParsedAttributes,\n      radius,\n      left: left - radius,\n      top: top - radius,\n    });\n  }\n\n  /* _FROM_SVG_END_ */\n\n  /**\n   * @todo how do we declare this??\n   */\n  static fromObject<T extends TOptions<SerializedCircleProps>>(object: T) {\n    return super._fromObject<Circle>(object);\n  }\n}\n\nclassRegistry.setClass(Circle);\nclassRegistry.setSVGClass(Circle);\n","import { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport type { Abortable, TClassProperties, TOptions } from '../typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport { Point } from '../Point';\nimport { isFiller } from '../util/typeAssertions';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { ObjectEvents } from '../EventTypeDefs';\nimport { makeBoundingBoxFromPoints } from '../util';\nimport { CENTER, LEFT, TOP } from '../constants';\nimport type { CSSRules } from '../parser/typedefs';\n\n// @TODO this code is terrible and Line should be a special case of polyline.\n\nconst coordProps = ['x1', 'x2', 'y1', 'y2'] as const;\n\ninterface UniqueLineProps {\n  x1: number;\n  x2: number;\n  y1: number;\n  y2: number;\n}\n\nexport interface SerializedLineProps\n  extends SerializedObjectProps,\n    UniqueLineProps {}\n\nexport class Line<\n    Props extends TOptions<FabricObjectProps> = Partial<FabricObjectProps>,\n    SProps extends SerializedLineProps = SerializedLineProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends FabricObject<Props, SProps, EventSpec>\n  implements UniqueLineProps\n{\n  /**\n   * x value or first line edge\n   * @type number\n   * @default\n   */\n  declare x1: number;\n\n  /**\n   * y value or first line edge\n   * @type number\n   * @default\n   */\n  declare y1: number;\n\n  /**\n   * x value or second line edge\n   * @type number\n   * @default\n   */\n  declare x2: number;\n\n  /**\n   * y value or second line edge\n   * @type number\n   * @default\n   */\n  declare y2: number;\n\n  static type = 'Line';\n\n  static cacheProperties = [...cacheProperties, ...coordProps];\n  /**\n   * Constructor\n   * @param {Array} [points] Array of points\n   * @param {Object} [options] Options object\n   * @return {Line} thisArg\n   */\n  constructor([x1, y1, x2, y2] = [0, 0, 0, 0], options: Partial<Props> = {}) {\n    super();\n    Object.assign(this, Line.ownDefaults);\n    this.setOptions(options);\n    this.x1 = x1;\n    this.x2 = x2;\n    this.y1 = y1;\n    this.y2 = y2;\n    this._setWidthHeight();\n    const { left, top } = options;\n    typeof left === 'number' && this.set(LEFT, left);\n    typeof top === 'number' && this.set(TOP, top);\n  }\n\n  /**\n   * @private\n   * @param {Object} [options] Options\n   */\n  _setWidthHeight() {\n    const { x1, y1, x2, y2 } = this;\n    this.width = Math.abs(x2 - x1);\n    this.height = Math.abs(y2 - y1);\n    const { left, top, width, height } = makeBoundingBoxFromPoints([\n      { x: x1, y: y1 },\n      { x: x2, y: y2 },\n    ]);\n    const position = new Point(left + width / 2, top + height / 2);\n    this.setPositionByOrigin(position, CENTER, CENTER);\n  }\n\n  /**\n   * @private\n   * @param {String} key\n   * @param {*} value\n   */\n  _set(key: string, value: any) {\n    super._set(key, value);\n    if (coordProps.includes(key as keyof UniqueLineProps)) {\n      // this doesn't make sense very much, since setting x1 when top or left\n      // are already set, is just going to show a strange result since the\n      // line will move way more than the developer expect.\n      // in fabric5 it worked only when the line didn't have extra transformations,\n      // in fabric6 too. With extra transform they behave bad in different ways.\n      // This needs probably a good rework or a tutorial if you have to create a dynamic line\n      this._setWidthHeight();\n    }\n    return this;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    ctx.beginPath();\n\n    const p = this.calcLinePoints();\n    ctx.moveTo(p.x1, p.y1);\n    ctx.lineTo(p.x2, p.y2);\n\n    ctx.lineWidth = this.strokeWidth;\n\n    // TODO: test this\n    // make sure setting \"fill\" changes color of a line\n    // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\n    const origStrokeStyle = ctx.strokeStyle;\n    if (isFiller(this.stroke)) {\n      ctx.strokeStyle = this.stroke.toLive(ctx)!;\n    } else {\n      ctx.strokeStyle = this.stroke ?? ctx.fillStyle;\n    }\n    this.stroke && this._renderStroke(ctx);\n    ctx.strokeStyle = origStrokeStyle;\n  }\n\n  /**\n   * This function is an helper for svg import. it returns the center of the object in the svg\n   * untransformed coordinates\n   * @private\n   * @return {Point} center point from element coordinates\n   */\n  _findCenterFromElement(): Point {\n    return new Point((this.x1 + this.x2) / 2, (this.y1 + this.y2) / 2);\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @method toObject\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return {\n      ...super.toObject(propertiesToInclude),\n      ...this.calcLinePoints(),\n    };\n  }\n\n  /*\n   * Calculate object dimensions from its properties\n   * @private\n   */\n  _getNonTransformedDimensions(): Point {\n    const dim = super._getNonTransformedDimensions();\n    if (this.strokeLineCap === 'butt') {\n      if (this.width === 0) {\n        dim.y -= this.strokeWidth;\n      }\n      if (this.height === 0) {\n        dim.x -= this.strokeWidth;\n      }\n    }\n    return dim;\n  }\n\n  /**\n   * Recalculates line points given width and height\n   * Those points are simply placed around the center,\n   * This is not useful outside internal render functions and svg output\n   * Is not meant to be for the developer.\n   * @private\n   */\n  calcLinePoints(): UniqueLineProps {\n    const { x1: _x1, x2: _x2, y1: _y1, y2: _y2, width, height } = this;\n    const xMult = _x1 <= _x2 ? -1 : 1,\n      yMult = _y1 <= _y2 ? -1 : 1,\n      x1 = (xMult * width) / 2,\n      y1 = (yMult * height) / 2,\n      x2 = (xMult * -width) / 2,\n      y2 = (yMult * -height) / 2;\n\n    return {\n      x1,\n      x2,\n      y1,\n      y2,\n    };\n  }\n\n  /* _FROM_SVG_START_ */\n\n  /**\n   * Returns svg representation of an instance\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG() {\n    const { x1, x2, y1, y2 } = this.calcLinePoints();\n    return [\n      '<line ',\n      'COMMON_PARTS',\n      `x1=\"${x1}\" y1=\"${y1}\" x2=\"${x2}\" y2=\"${y2}\" />\\n`,\n    ];\n  }\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link Line.fromElement})\n   * @static\n   * @memberOf Line\n   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\n   */\n  static ATTRIBUTE_NAMES = SHARED_ATTRIBUTES.concat(coordProps);\n\n  /**\n   * Returns Line instance from an SVG element\n   * @static\n   * @memberOf Line\n   * @param {HTMLElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] callback function invoked after parsing\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable,\n    cssRules?: CSSRules,\n  ) {\n    const {\n      x1 = 0,\n      y1 = 0,\n      x2 = 0,\n      y2 = 0,\n      ...parsedAttributes\n    } = parseAttributes(element, this.ATTRIBUTE_NAMES, cssRules);\n    return new this([x1, y1, x2, y2], parsedAttributes);\n  }\n\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns Line instance from an object representation\n   * @static\n   * @memberOf Line\n   * @param {Object} object Object to create an instance from\n   * @returns {Promise<Line>}\n   */\n  static fromObject<T extends TOptions<SerializedLineProps>>({\n    x1,\n    y1,\n    x2,\n    y2,\n    ...object\n  }: T) {\n    return this._fromObject<Line>(\n      {\n        ...object,\n        points: [x1, y1, x2, y2],\n      },\n      {\n        extraParam: 'points',\n      },\n    );\n  }\n}\n\nclassRegistry.setClass(Line);\nclassRegistry.setSVGClass(Line);\n","import { classRegistry } from '../ClassRegistry';\nimport { FabricObject } from './Object/FabricObject';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { TClassProperties, TOptions } from '../typedefs';\nimport type { ObjectEvents } from '../EventTypeDefs';\n\nexport const triangleDefaultValues: Partial<TClassProperties<Triangle>> = {\n  width: 100,\n  height: 100,\n};\n\nexport class Triangle<\n    Props extends TOptions<FabricObjectProps> = Partial<FabricObjectProps>,\n    SProps extends SerializedObjectProps = SerializedObjectProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends FabricObject<Props, SProps, EventSpec>\n  implements FabricObjectProps\n{\n  static type = 'Triangle';\n\n  static ownDefaults = triangleDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return { ...super.getDefaults(), ...Triangle.ownDefaults };\n  }\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  constructor(options?: Props) {\n    super();\n    Object.assign(this, Triangle.ownDefaults);\n    this.setOptions(options);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    const widthBy2 = this.width / 2,\n      heightBy2 = this.height / 2;\n\n    ctx.beginPath();\n    ctx.moveTo(-widthBy2, heightBy2);\n    ctx.lineTo(0, -heightBy2);\n    ctx.lineTo(widthBy2, heightBy2);\n    ctx.closePath();\n\n    this._renderPaintInOrder(ctx);\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG() {\n    const widthBy2 = this.width / 2,\n      heightBy2 = this.height / 2,\n      points = `${-widthBy2} ${heightBy2},0 ${-heightBy2},${widthBy2} ${heightBy2}`;\n    return ['<polygon ', 'COMMON_PARTS', 'points=\"', points, '\" />'];\n  }\n}\n\nclassRegistry.setClass(Triangle);\nclassRegistry.setSVGClass(Triangle);\n","import { SCALE_X, SCALE_Y, twoMathPi } from '../constants';\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport type { Abortable, TClassProperties, TOptions } from '../typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { ObjectEvents } from '../EventTypeDefs';\nimport type { CSSRules } from '../parser/typedefs';\n\nexport const ellipseDefaultValues: Partial<TClassProperties<Ellipse>> = {\n  rx: 0,\n  ry: 0,\n};\n\ninterface UniqueEllipseProps {\n  rx: number;\n  ry: number;\n}\n\nexport interface SerializedEllipseProps\n  extends SerializedObjectProps,\n    UniqueEllipseProps {}\n\nexport interface EllipseProps extends FabricObjectProps, UniqueEllipseProps {}\n\nconst ELLIPSE_PROPS = ['rx', 'ry'] as const;\n\nexport class Ellipse<\n    Props extends TOptions<EllipseProps> = Partial<EllipseProps>,\n    SProps extends SerializedEllipseProps = SerializedEllipseProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends FabricObject<Props, SProps, EventSpec>\n  implements EllipseProps\n{\n  /**\n   * Horizontal radius\n   * @type Number\n   * @default\n   */\n  declare rx: number;\n\n  /**\n   * Vertical radius\n   * @type Number\n   * @default\n   */\n  declare ry: number;\n\n  static type = 'Ellipse';\n\n  static cacheProperties = [...cacheProperties, ...ELLIPSE_PROPS];\n\n  static ownDefaults = ellipseDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...Ellipse.ownDefaults,\n    };\n  }\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  constructor(options?: Props) {\n    super();\n    Object.assign(this, Ellipse.ownDefaults);\n    this.setOptions(options);\n  }\n\n  /**\n   * @private\n   * @param {String} key\n   * @param {*} value\n   * @return {Ellipse} thisArg\n   */\n  _set(key: string, value: any) {\n    super._set(key, value);\n    switch (key) {\n      case 'rx':\n        this.rx = value;\n        this.set('width', value * 2);\n        break;\n\n      case 'ry':\n        this.ry = value;\n        this.set('height', value * 2);\n        break;\n    }\n    return this;\n  }\n\n  /**\n   * Returns horizontal radius of an object (according to how an object is scaled)\n   * @return {Number}\n   */\n  getRx() {\n    return this.get('rx') * this.get(SCALE_X);\n  }\n\n  /**\n   * Returns Vertical radius of an object (according to how an object is scaled)\n   * @return {Number}\n   */\n  getRy() {\n    return this.get('ry') * this.get(SCALE_Y);\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return super.toObject([...ELLIPSE_PROPS, ...propertiesToInclude]);\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG(): string[] {\n    return [\n      '<ellipse ',\n      'COMMON_PARTS',\n      `cx=\"0\" cy=\"0\" rx=\"${this.rx}\" ry=\"${this.ry}\" />\\n`,\n    ];\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    ctx.beginPath();\n    ctx.save();\n    ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\n    ctx.arc(0, 0, this.rx, 0, twoMathPi, false);\n    ctx.restore();\n    this._renderPaintInOrder(ctx);\n  }\n\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link Ellipse.fromElement})\n   * @static\n   * @memberOf Ellipse\n   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\n   */\n  static ATTRIBUTE_NAMES = [...SHARED_ATTRIBUTES, 'cx', 'cy', 'rx', 'ry'];\n\n  /**\n   * Returns {@link Ellipse} instance from an SVG element\n   * @static\n   * @memberOf Ellipse\n   * @param {HTMLElement} element Element to parse\n   * @return {Ellipse}\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable,\n    cssRules?: CSSRules,\n  ) {\n    const parsedAttributes = parseAttributes(\n      element,\n      this.ATTRIBUTE_NAMES,\n      cssRules,\n    );\n\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.rx;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.ry;\n    return new this(parsedAttributes);\n  }\n\n  /* _FROM_SVG_END_ */\n}\n\nclassRegistry.setClass(Ellipse);\nclassRegistry.setSVGClass(Ellipse);\n","import type { XY } from '../Point';\n\n/**\n * Parses \"points\" attribute, returning an array of values\n * @static\n * @memberOf fabric\n * @param {String} points points attribute string\n * @return {Array} array of points\n */\nexport function parsePointsAttribute(points: string | null): XY[] {\n  // points attribute is required and must not be empty\n  if (!points) {\n    return [];\n  }\n\n  // replace commas with whitespace and remove bookending whitespace\n  const pointsSplit: string[] = points.replace(/,/g, ' ').trim().split(/\\s+/);\n\n  const parsedPoints = [];\n\n  for (let i = 0; i < pointsSplit.length; i += 2) {\n    parsedPoints.push({\n      x: parseFloat(pointsSplit[i]),\n      y: parseFloat(pointsSplit[i + 1]),\n    });\n  }\n\n  // odd number of points is an error\n  // if (parsedPoints.length % 2 !== 0) {\n  //   return null;\n  // }\n  return parsedPoints;\n}\n","import { config } from '../config';\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport { parsePointsAttribute } from '../parser/parsePointsAttribute';\nimport type { XY } from '../Point';\nimport { Point } from '../Point';\nimport type { Abortable, TClassProperties, TOptions } from '../typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { makeBoundingBoxFromPoints } from '../util/misc/boundingBoxFromPoints';\nimport { calcDimensionsMatrix, transformPoint } from '../util/misc/matrix';\nimport { projectStrokeOnPoints } from '../util/misc/projectStroke';\nimport type { TProjectStrokeOnPointsOptions } from '../util/misc/projectStroke/types';\nimport { degreesToRadians } from '../util/misc/radiansDegreesConversion';\nimport { toFixed } from '../util/misc/toFixed';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { ObjectEvents } from '../EventTypeDefs';\nimport {\n  CENTER,\n  LEFT,\n  SCALE_X,\n  SCALE_Y,\n  SKEW_X,\n  SKEW_Y,\n  TOP,\n} from '../constants';\nimport type { CSSRules } from '../parser/typedefs';\n\nexport const polylineDefaultValues: Partial<TClassProperties<Polyline>> = {\n  /**\n   * @deprecated transient option soon to be removed in favor of a different design\n   */\n  exactBoundingBox: false,\n};\n\nexport interface SerializedPolylineProps extends SerializedObjectProps {\n  points: XY[];\n}\n\nexport class Polyline<\n  Props extends TOptions<FabricObjectProps> = Partial<FabricObjectProps>,\n  SProps extends SerializedPolylineProps = SerializedPolylineProps,\n  EventSpec extends ObjectEvents = ObjectEvents,\n> extends FabricObject<Props, SProps, EventSpec> {\n  /**\n   * Points array\n   * @type Array\n   * @default\n   */\n  declare points: XY[];\n\n  /**\n   * WARNING: Feature in progress\n   * Calculate the exact bounding box taking in account strokeWidth on acute angles\n   * this will be turned to true by default on fabric 6.0\n   * maybe will be left in as an optimization since calculations may be slow\n   * @deprecated transient option soon to be removed in favor of a different design\n   * @type Boolean\n   * @default false\n   */\n  declare exactBoundingBox: boolean;\n\n  private declare initialized: true | undefined;\n\n  static ownDefaults = polylineDefaultValues;\n\n  static type = 'Polyline';\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...Polyline.ownDefaults,\n    };\n  }\n\n  /**\n   * A list of properties that if changed trigger a recalculation of dimensions\n   * @todo check if you really need to recalculate for all cases\n   */\n  static layoutProperties: (keyof Polyline)[] = [\n    SKEW_X,\n    SKEW_Y,\n    'strokeLineCap',\n    'strokeLineJoin',\n    'strokeMiterLimit',\n    'strokeWidth',\n    'strokeUniform',\n    'points',\n  ];\n\n  declare pathOffset: Point;\n\n  declare strokeOffset: Point;\n\n  static cacheProperties = [...cacheProperties, 'points'];\n\n  strokeDiff: Point;\n\n  /**\n   * Constructor\n   * @param {Array} points Array of points (where each point is an object with x and y)\n   * @param {Object} [options] Options object\n   * @return {Polyline} thisArg\n   * @example\n   * var poly = new Polyline([\n   *     { x: 10, y: 10 },\n   *     { x: 50, y: 30 },\n   *     { x: 40, y: 70 },\n   *     { x: 60, y: 50 },\n   *     { x: 100, y: 150 },\n   *     { x: 40, y: 100 }\n   *   ], {\n   *   stroke: 'red',\n   *   left: 100,\n   *   top: 100\n   * });\n   */\n  constructor(points: XY[] = [], options: Props = {} as Props) {\n    super();\n    Object.assign(this, Polyline.ownDefaults);\n    this.setOptions(options);\n    this.points = points;\n    const { left, top } = options;\n    this.initialized = true;\n    this.setBoundingBox(true);\n    typeof left === 'number' && this.set(LEFT, left);\n    typeof top === 'number' && this.set(TOP, top);\n  }\n\n  protected isOpen() {\n    return true;\n  }\n\n  private _projectStrokeOnPoints(options: TProjectStrokeOnPointsOptions) {\n    return projectStrokeOnPoints(this.points, options, this.isOpen());\n  }\n\n  /**\n   * Calculate the polygon bounding box\n   * @private\n   */\n  _calcDimensions(options?: Partial<TProjectStrokeOnPointsOptions>) {\n    options = {\n      scaleX: this.scaleX,\n      scaleY: this.scaleY,\n      skewX: this.skewX,\n      skewY: this.skewY,\n      strokeLineCap: this.strokeLineCap,\n      strokeLineJoin: this.strokeLineJoin,\n      strokeMiterLimit: this.strokeMiterLimit,\n      strokeUniform: this.strokeUniform,\n      strokeWidth: this.strokeWidth,\n      ...(options || {}),\n    };\n    const points = this.exactBoundingBox\n      ? this._projectStrokeOnPoints(\n          options as TProjectStrokeOnPointsOptions,\n        ).map((projection) => projection.projectedPoint)\n      : this.points;\n    if (points.length === 0) {\n      return {\n        left: 0,\n        top: 0,\n        width: 0,\n        height: 0,\n        pathOffset: new Point(),\n        strokeOffset: new Point(),\n        strokeDiff: new Point(),\n      };\n    }\n    const bbox = makeBoundingBoxFromPoints(points),\n      // Remove scale effect, since it's applied after\n      matrix = calcDimensionsMatrix({ ...options, scaleX: 1, scaleY: 1 }),\n      bboxNoStroke = makeBoundingBoxFromPoints(\n        this.points.map((p) => transformPoint(p, matrix, true)),\n      ),\n      scale = new Point(this.scaleX, this.scaleY);\n    let offsetX = bbox.left + bbox.width / 2,\n      offsetY = bbox.top + bbox.height / 2;\n    if (this.exactBoundingBox) {\n      offsetX = offsetX - offsetY * Math.tan(degreesToRadians(this.skewX));\n      // Order of those assignments is important.\n      // offsetY relies on offsetX being already changed by the line above\n      offsetY = offsetY - offsetX * Math.tan(degreesToRadians(this.skewY));\n    }\n\n    return {\n      ...bbox,\n      pathOffset: new Point(offsetX, offsetY),\n      strokeOffset: new Point(bboxNoStroke.left, bboxNoStroke.top)\n        .subtract(new Point(bbox.left, bbox.top))\n        .multiply(scale),\n      strokeDiff: new Point(bbox.width, bbox.height)\n        .subtract(new Point(bboxNoStroke.width, bboxNoStroke.height))\n        .multiply(scale),\n    };\n  }\n\n  /**\n   * This function is an helper for svg import. it returns the center of the object in the svg\n   * untransformed coordinates, by look at the polyline/polygon points.\n   * @private\n   * @return {Point} center point from element coordinates\n   */\n  _findCenterFromElement(): Point {\n    const bbox = makeBoundingBoxFromPoints(this.points);\n    return new Point(bbox.left + bbox.width / 2, bbox.top + bbox.height / 2);\n  }\n\n  setDimensions() {\n    this.setBoundingBox();\n  }\n\n  setBoundingBox(adjustPosition?: boolean) {\n    const { left, top, width, height, pathOffset, strokeOffset, strokeDiff } =\n      this._calcDimensions();\n    this.set({ width, height, pathOffset, strokeOffset, strokeDiff });\n    adjustPosition &&\n      this.setPositionByOrigin(\n        new Point(left + width / 2, top + height / 2),\n        CENTER,\n        CENTER,\n      );\n  }\n\n  /**\n   * @deprecated intermidiate method to be removed, do not use\n   */\n  protected isStrokeAccountedForInDimensions() {\n    return this.exactBoundingBox;\n  }\n\n  /**\n   * @override stroke is taken in account in size\n   */\n  _getNonTransformedDimensions() {\n    return this.exactBoundingBox\n      ? // TODO: fix this\n        new Point(this.width, this.height)\n      : super._getNonTransformedDimensions();\n  }\n\n  /**\n   * @override stroke and skewing are taken into account when projecting stroke on points,\n   * therefore we don't want the default calculation to account for skewing as well.\n   * Though it is possible to pass `width` and `height` in `options`, doing so is very strange, use with discretion.\n   *\n   * @private\n   */\n  _getTransformedDimensions(options: any = {}) {\n    if (this.exactBoundingBox) {\n      let size: Point;\n      /* When `strokeUniform = true`, any changes to the properties require recalculating the `width` and `height` because\n        the stroke projections are affected.\n        When `strokeUniform = false`, we don't need to recalculate for scale transformations, as the effect of scale on\n        projections follows a linear function (e.g. scaleX of 2 just multiply width by 2)*/\n      if (\n        Object.keys(options).some(\n          (key) =>\n            this.strokeUniform ||\n            (this.constructor as typeof Polyline).layoutProperties.includes(\n              key as keyof TProjectStrokeOnPointsOptions,\n            ),\n        )\n      ) {\n        const { width, height } = this._calcDimensions(options);\n        size = new Point(options.width ?? width, options.height ?? height);\n      } else {\n        size = new Point(\n          options.width ?? this.width,\n          options.height ?? this.height,\n        );\n      }\n      return size.multiply(\n        new Point(options.scaleX || this.scaleX, options.scaleY || this.scaleY),\n      );\n    } else {\n      return super._getTransformedDimensions(options);\n    }\n  }\n\n  /**\n   * Recalculates dimensions when changing skew and scale\n   * @private\n   */\n  _set(key: string, value: any) {\n    const changed = this.initialized && this[key as keyof this] !== value;\n    const output = super._set(key, value);\n    if (\n      this.exactBoundingBox &&\n      changed &&\n      (((key === SCALE_X || key === SCALE_Y) &&\n        this.strokeUniform &&\n        (this.constructor as typeof Polyline).layoutProperties.includes(\n          'strokeUniform',\n        )) ||\n        (this.constructor as typeof Polyline).layoutProperties.includes(\n          key as keyof Polyline,\n        ))\n    ) {\n      this.setDimensions();\n    }\n    return output;\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} Object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return {\n      ...super.toObject(propertiesToInclude),\n      points: this.points.map(({ x, y }) => ({ x, y })),\n    };\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG() {\n    const points = [],\n      diffX = this.pathOffset.x,\n      diffY = this.pathOffset.y,\n      NUM_FRACTION_DIGITS = config.NUM_FRACTION_DIGITS;\n\n    for (let i = 0, len = this.points.length; i < len; i++) {\n      points.push(\n        toFixed(this.points[i].x - diffX, NUM_FRACTION_DIGITS),\n        ',',\n        toFixed(this.points[i].y - diffY, NUM_FRACTION_DIGITS),\n        ' ',\n      );\n    }\n    return [\n      `<${\n        (this.constructor as typeof Polyline).type.toLowerCase() as\n          | 'polyline'\n          | 'polygon'\n      } `,\n      'COMMON_PARTS',\n      `points=\"${points.join('')}\" />\\n`,\n    ];\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    const len = this.points.length,\n      x = this.pathOffset.x,\n      y = this.pathOffset.y;\n\n    if (!len || isNaN(this.points[len - 1].y)) {\n      // do not draw if no points or odd points\n      // NaN comes from parseFloat of a empty string in parser\n      return;\n    }\n    ctx.beginPath();\n    ctx.moveTo(this.points[0].x - x, this.points[0].y - y);\n    for (let i = 0; i < len; i++) {\n      const point = this.points[i];\n      ctx.lineTo(point.x - x, point.y - y);\n    }\n    !this.isOpen() && ctx.closePath();\n    this._renderPaintInOrder(ctx);\n  }\n\n  /**\n   * Returns complexity of an instance\n   * @return {Number} complexity of this instance\n   */\n  complexity(): number {\n    return this.points.length;\n  }\n\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link Polyline.fromElement})\n   * @static\n   * @memberOf Polyline\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\n   */\n  static ATTRIBUTE_NAMES = [...SHARED_ATTRIBUTES];\n\n  /**\n   * Returns Polyline instance from an SVG element\n   * @static\n   * @memberOf Polyline\n   * @param {HTMLElement} element Element to parser\n   * @param {Object} [options] Options object\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable,\n    cssRules?: CSSRules,\n  ) {\n    const points = parsePointsAttribute(element.getAttribute('points')),\n      // we omit left and top to instruct the constructor to position the object using the bbox\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      { left, top, ...parsedAttributes } = parseAttributes(\n        element,\n        this.ATTRIBUTE_NAMES,\n        cssRules,\n      );\n    return new this(points, {\n      ...parsedAttributes,\n      ...options,\n    });\n  }\n\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns Polyline instance from an object representation\n   * @static\n   * @memberOf Polyline\n   * @param {Object} object Object to create an instance from\n   * @returns {Promise<Polyline>}\n   */\n  static fromObject<T extends TOptions<SerializedPolylineProps>>(object: T) {\n    return this._fromObject<Polyline>(object, {\n      extraParam: 'points',\n    });\n  }\n}\n\nclassRegistry.setClass(Polyline);\nclassRegistry.setSVGClass(Polyline);\n","import { classRegistry } from '../ClassRegistry';\nimport { Polyline, polylineDefaultValues } from './Polyline';\n\nexport class Polygon extends Polyline {\n  static ownDefaults = polylineDefaultValues;\n\n  static type = 'Polygon';\n\n  protected isOpen() {\n    return false;\n  }\n}\n\nclassRegistry.setClass(Polygon);\nclassRegistry.setSVGClass(Polygon);\n","import { FILL, LEFT, STROKE, reNewline } from '../../constants';\nimport type { TClassProperties } from '../../typedefs';\nimport type { FabricText } from './Text';\n\nconst fontProperties = [\n  'fontSize',\n  'fontWeight',\n  'fontFamily',\n  'fontStyle',\n] as const;\n\nexport const textDecorationProperties = [\n  'underline',\n  'overline',\n  'linethrough',\n] as const;\n\nexport const textLayoutProperties: string[] = [\n  ...fontProperties,\n  'lineHeight',\n  'text',\n  'charSpacing',\n  'textAlign',\n  'styles',\n  'path',\n  'pathStartOffset',\n  'pathSide',\n  'pathAlign',\n];\n\nexport const additionalProps = [\n  ...textLayoutProperties,\n  ...textDecorationProperties,\n  'textBackgroundColor',\n  'direction',\n] as const;\n\nexport type StylePropertiesType =\n  | 'fill'\n  | 'stroke'\n  | 'strokeWidth'\n  | 'fontSize'\n  | 'fontFamily'\n  | 'fontWeight'\n  | 'fontStyle'\n  | 'textBackgroundColor'\n  | 'deltaY'\n  | 'overline'\n  | 'underline'\n  | 'linethrough';\n\nexport const styleProperties: Readonly<StylePropertiesType[]> = [\n  ...fontProperties,\n  ...textDecorationProperties,\n  STROKE,\n  'strokeWidth',\n  FILL,\n  'deltaY',\n  'textBackgroundColor',\n] as const;\n\n// @TODO: Many things here are configuration related and shouldn't be on the class nor prototype\n// regexes, list of properties that are not suppose to change by instances, magic consts.\n// this will be a separated effort\nexport const textDefaultValues: Partial<TClassProperties<FabricText>> = {\n  _reNewline: reNewline,\n  _reSpacesAndTabs: /[ \\t\\r]/g,\n  _reSpaceAndTab: /[ \\t\\r]/,\n  _reWords: /\\S+/g,\n  fontSize: 40,\n  fontWeight: 'normal',\n  fontFamily: 'Times New Roman',\n  underline: false,\n  overline: false,\n  linethrough: false,\n  textAlign: LEFT,\n  fontStyle: 'normal',\n  lineHeight: 1.16,\n  superscript: {\n    size: 0.6, // fontSize factor\n    baseline: -0.35, // baseline-shift factor (upwards)\n  },\n  subscript: {\n    size: 0.6, // fontSize factor\n    baseline: 0.11, // baseline-shift factor (downwards)\n  },\n  textBackgroundColor: '',\n  stroke: null,\n  shadow: null,\n  path: undefined,\n  pathStartOffset: 0,\n  pathSide: LEFT,\n  pathAlign: 'baseline',\n  _fontSizeFraction: 0.222,\n  offsets: {\n    underline: 0.1,\n    linethrough: -0.315,\n    overline: -0.88,\n  },\n  _fontSizeMult: 1.13,\n  charSpacing: 0,\n  deltaY: 0,\n  direction: 'ltr',\n  CACHE_FONT_SIZE: 400,\n  MIN_TEXT_WIDTH: 2,\n};\n\nexport const JUSTIFY = 'justify';\nexport const JUSTIFY_LEFT = 'justify-left';\nexport const JUSTIFY_RIGHT = 'justify-right';\nexport const JUSTIFY_CENTER = 'justify-center';\n","import type { ObjectEvents } from '../../EventTypeDefs';\nimport type { FabricObjectProps, SerializedObjectProps } from '../Object/types';\nimport type { TOptions } from '../../typedefs';\nimport { FabricObject } from '../Object/FabricObject';\nimport { styleProperties } from './constants';\nimport type { StylePropertiesType } from './constants';\nimport type { FabricText } from './Text';\nimport { pick } from '../../util';\nimport { pickBy } from '../../util/misc/pick';\n\nexport type CompleteTextStyleDeclaration = Pick<\n  FabricText,\n  StylePropertiesType\n>;\n\nexport type TextStyleDeclaration = Partial<CompleteTextStyleDeclaration>;\n\nexport type TextStyle = {\n  [line: number | string]: { [char: number | string]: TextStyleDeclaration };\n};\n\nexport abstract class StyledText<\n  Props extends TOptions<FabricObjectProps> = Partial<FabricObjectProps>,\n  SProps extends SerializedObjectProps = SerializedObjectProps,\n  EventSpec extends ObjectEvents = ObjectEvents,\n> extends FabricObject<Props, SProps, EventSpec> {\n  declare abstract styles: TextStyle;\n  protected declare abstract _textLines: string[][];\n  protected declare _forceClearCache: boolean;\n  static _styleProperties: Readonly<StylePropertiesType[]> = styleProperties;\n  abstract get2DCursorLocation(\n    selectionStart: number,\n    skipWrapping?: boolean,\n  ): { charIndex: number; lineIndex: number };\n\n  /**\n   * Returns true if object has no styling or no styling in a line\n   * @param {Number} lineIndex , lineIndex is on wrapped lines.\n   * @return {Boolean}\n   */\n  isEmptyStyles(lineIndex?: number): boolean {\n    if (!this.styles) {\n      return true;\n    }\n    if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n      return true;\n    }\n    const obj =\n      typeof lineIndex === 'undefined'\n        ? this.styles\n        : { line: this.styles[lineIndex] };\n    for (const p1 in obj) {\n      for (const p2 in obj[p1]) {\n        // eslint-disable-next-line no-unused-vars\n        for (const p3 in obj[p1][p2]) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Returns true if object has a style property or has it ina specified line\n   * This function is used to detect if a text will use a particular property or not.\n   * @param {String} property to check for\n   * @param {Number} lineIndex to check the style on\n   * @return {Boolean}\n   */\n  styleHas(property: keyof TextStyleDeclaration, lineIndex?: number): boolean {\n    if (!this.styles) {\n      return false;\n    }\n    if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n      return false;\n    }\n    const obj =\n      typeof lineIndex === 'undefined'\n        ? this.styles\n        : { 0: this.styles[lineIndex] };\n    // eslint-disable-next-line\n    for (const p1 in obj) {\n      // eslint-disable-next-line\n      for (const p2 in obj[p1]) {\n        if (typeof obj[p1][p2][property] !== 'undefined') {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Check if characters in a text have a value for a property\n   * whose value matches the textbox's value for that property.  If so,\n   * the character-level property is deleted.  If the character\n   * has no other properties, then it is also deleted.  Finally,\n   * if the line containing that character has no other characters\n   * then it also is deleted.\n   *\n   * @param {string} property The property to compare between characters and text.\n   */\n  cleanStyle(property: keyof TextStyleDeclaration) {\n    if (!this.styles) {\n      return false;\n    }\n    const obj = this.styles;\n    let stylesCount = 0,\n      letterCount,\n      stylePropertyValue,\n      allStyleObjectPropertiesMatch = true,\n      graphemeCount = 0;\n    for (const p1 in obj) {\n      letterCount = 0;\n      for (const p2 in obj[p1]) {\n        const styleObject = obj[p1][p2] || {},\n          stylePropertyHasBeenSet = styleObject[property] !== undefined;\n\n        stylesCount++;\n\n        if (stylePropertyHasBeenSet) {\n          if (!stylePropertyValue) {\n            stylePropertyValue = styleObject[property];\n          } else if (styleObject[property] !== stylePropertyValue) {\n            allStyleObjectPropertiesMatch = false;\n          }\n\n          if (styleObject[property] === this[property as keyof this]) {\n            delete styleObject[property];\n          }\n        } else {\n          allStyleObjectPropertiesMatch = false;\n        }\n\n        if (Object.keys(styleObject).length !== 0) {\n          letterCount++;\n        } else {\n          delete obj[p1][p2];\n        }\n      }\n\n      if (letterCount === 0) {\n        delete obj[p1];\n      }\n    }\n    // if every grapheme has the same style set then\n    // delete those styles and set it on the parent\n    for (let i = 0; i < this._textLines.length; i++) {\n      graphemeCount += this._textLines[i].length;\n    }\n    if (allStyleObjectPropertiesMatch && stylesCount === graphemeCount) {\n      // @ts-expect-error conspiracy theory of TS\n      this[property as keyof this] = stylePropertyValue;\n      this.removeStyle(property);\n    }\n  }\n\n  /**\n   * Remove a style property or properties from all individual character styles\n   * in a text object.  Deletes the character style object if it contains no other style\n   * props.  Deletes a line style object if it contains no other character styles.\n   *\n   * @param {String} props The property to remove from character styles.\n   */\n  removeStyle(property: keyof TextStyleDeclaration) {\n    if (!this.styles) {\n      return;\n    }\n    const obj = this.styles;\n    let line, lineNum, charNum;\n    for (lineNum in obj) {\n      line = obj[lineNum];\n      for (charNum in line) {\n        delete line[charNum][property];\n        if (Object.keys(line[charNum]).length === 0) {\n          delete line[charNum];\n        }\n      }\n      if (Object.keys(line).length === 0) {\n        delete obj[lineNum];\n      }\n    }\n  }\n\n  private _extendStyles(index: number, style: TextStyleDeclaration): void {\n    const { lineIndex, charIndex } = this.get2DCursorLocation(index);\n\n    if (!this._getLineStyle(lineIndex)) {\n      this._setLineStyle(lineIndex);\n    }\n\n    const newStyle = pickBy(\n      {\n        // first create a new object that is a merge of existing and new\n        ...this._getStyleDeclaration(lineIndex, charIndex),\n        ...style,\n        // use the predicate to discard undefined values\n      },\n      (value) => value !== undefined,\n    );\n\n    // finally assign to the old position the new style\n    this._setStyleDeclaration(lineIndex, charIndex, newStyle);\n  }\n\n  /**\n   * Gets style of a current selection/cursor (at the start position)\n   * @param {Number} startIndex Start index to get styles at\n   * @param {Number} endIndex End index to get styles at, if not specified startIndex + 1\n   * @param {Boolean} [complete] get full style or not\n   * @return {Array} styles an array with one, zero or more Style objects\n   */\n  getSelectionStyles(\n    startIndex: number,\n    endIndex?: number,\n    complete?: boolean,\n  ): TextStyleDeclaration[] {\n    const styles: TextStyleDeclaration[] = [];\n    for (let i = startIndex; i < (endIndex || startIndex); i++) {\n      styles.push(this.getStyleAtPosition(i, complete));\n    }\n    return styles;\n  }\n\n  /**\n   * Gets style of a current selection/cursor position\n   * @param {Number} position  to get styles at\n   * @param {Boolean} [complete] full style if true\n   * @return {Object} style Style object at a specified index\n   * @private\n   */\n  getStyleAtPosition(position: number, complete?: boolean) {\n    const { lineIndex, charIndex } = this.get2DCursorLocation(position);\n    return complete\n      ? this.getCompleteStyleDeclaration(lineIndex, charIndex)\n      : this._getStyleDeclaration(lineIndex, charIndex);\n  }\n\n  /**\n   * Sets style of a current selection, if no selection exist, do not set anything.\n   * @param {Object} styles Styles object\n   * @param {Number} startIndex Start index to get styles at\n   * @param {Number} [endIndex] End index to get styles at, if not specified startIndex + 1\n   */\n  setSelectionStyles(styles: object, startIndex: number, endIndex?: number) {\n    for (let i = startIndex; i < (endIndex || startIndex); i++) {\n      this._extendStyles(i, styles);\n    }\n    /* not included in _extendStyles to avoid clearing cache more than once */\n    this._forceClearCache = true;\n  }\n\n  /**\n   * Get a reference, not a clone, to the style object for a given character,\n   * if no style is set for a line or char, return a new empty object.\n   * This is tricky and confusing because when you get an empty object you can't\n   * determine if it is a reference or a new one.\n   * @TODO this should always return a reference or always a clone or undefined when necessary.\n   * @protected\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {TextStyleDeclaration} a style object reference to the existing one or a new empty object when undefined\n   */\n  _getStyleDeclaration(\n    lineIndex: number,\n    charIndex: number,\n  ): TextStyleDeclaration {\n    const lineStyle = this.styles && this.styles[lineIndex];\n    return lineStyle ? lineStyle[charIndex] ?? {} : {};\n  }\n\n  /**\n   * return a new object that contains all the style property for a character\n   * the object returned is newly created\n   * @param {Number} lineIndex of the line where the character is\n   * @param {Number} charIndex position of the character on the line\n   * @return {Object} style object\n   */\n  getCompleteStyleDeclaration(\n    lineIndex: number,\n    charIndex: number,\n  ): CompleteTextStyleDeclaration {\n    return {\n      // @ts-expect-error readonly\n      ...pick(this, (this.constructor as typeof StyledText)._styleProperties),\n      ...this._getStyleDeclaration(lineIndex, charIndex),\n    } as CompleteTextStyleDeclaration;\n  }\n\n  /**\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @param {Object} style\n   * @private\n   */\n  protected _setStyleDeclaration(\n    lineIndex: number,\n    charIndex: number,\n    style: object,\n  ) {\n    this.styles[lineIndex][charIndex] = style;\n  }\n\n  /**\n   *\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @private\n   */\n  protected _deleteStyleDeclaration(lineIndex: number, charIndex: number) {\n    delete this.styles[lineIndex][charIndex];\n  }\n\n  /**\n   * @param {Number} lineIndex\n   * @return {Boolean} if the line exists or not\n   * @private\n   */\n  protected _getLineStyle(lineIndex: number): boolean {\n    return !!this.styles[lineIndex];\n  }\n\n  /**\n   * Set the line style to an empty object so that is initialized\n   * @param {Number} lineIndex\n   * @private\n   */\n  protected _setLineStyle(lineIndex: number) {\n    this.styles[lineIndex] = {};\n  }\n\n  protected _deleteLineStyle(lineIndex: number) {\n    delete this.styles[lineIndex];\n  }\n}\n","import { config } from '../../config';\nimport type { TSVGReviver } from '../../typedefs';\nimport { escapeXml } from '../../util/lang_string';\nimport { colorPropToSVG, createSVGRect } from '../../util/misc/svgParsing';\nimport { hasStyleChanged } from '../../util/misc/textStyles';\nimport { toFixed } from '../../util/misc/toFixed';\nimport { FabricObjectSVGExportMixin } from '../Object/FabricObjectSVGExportMixin';\nimport { type TextStyleDeclaration } from './StyledText';\nimport { JUSTIFY } from '../Text/constants';\nimport type { FabricText } from './Text';\nimport { STROKE, FILL } from '../../constants';\n\nconst multipleSpacesRegex = /  +/g;\nconst dblQuoteRegex = /\"/g;\n\nfunction createSVGInlineRect(\n  color: string,\n  left: number,\n  top: number,\n  width: number,\n  height: number,\n) {\n  return `\\t\\t${createSVGRect(color, { left, top, width, height })}\\n`;\n}\n\nexport class TextSVGExportMixin extends FabricObjectSVGExportMixin {\n  _toSVG(this: TextSVGExportMixin & FabricText): string[] {\n    const offsets = this._getSVGLeftTopOffsets(),\n      textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\n    return this._wrapSVGTextAndBg(textAndBg);\n  }\n\n  toSVG(this: TextSVGExportMixin & FabricText, reviver?: TSVGReviver): string {\n    return this._createBaseSVGMarkup(this._toSVG(), {\n      reviver,\n      noStyle: true,\n      withShadow: true,\n    });\n  }\n\n  private _getSVGLeftTopOffsets(this: TextSVGExportMixin & FabricText) {\n    return {\n      textLeft: -this.width / 2,\n      textTop: -this.height / 2,\n      lineTop: this.getHeightOfLine(0),\n    };\n  }\n\n  private _wrapSVGTextAndBg(\n    this: TextSVGExportMixin & FabricText,\n    {\n      textBgRects,\n      textSpans,\n    }: {\n      textSpans: string[];\n      textBgRects: string[];\n    },\n  ) {\n    const noShadow = true,\n      textDecoration = this.getSvgTextDecoration(this);\n    return [\n      textBgRects.join(''),\n      '\\t\\t<text xml:space=\"preserve\" ',\n      this.fontFamily\n        ? `font-family=\"${this.fontFamily.replace(dblQuoteRegex, \"'\")}\" `\n        : '',\n      this.fontSize ? `font-size=\"${this.fontSize}\" ` : '',\n      this.fontStyle ? `font-style=\"${this.fontStyle}\" ` : '',\n      this.fontWeight ? `font-weight=\"${this.fontWeight}\" ` : '',\n      textDecoration ? `text-decoration=\"${textDecoration}\" ` : '',\n      this.direction === 'rtl' ? `direction=\"${this.direction}\" ` : '',\n      'style=\"',\n      this.getSvgStyles(noShadow),\n      '\"',\n      this.addPaintOrder(),\n      ' >',\n      textSpans.join(''),\n      '</text>\\n',\n    ];\n  }\n\n  /**\n   * @private\n   * @param {Number} textTopOffset Text top offset\n   * @param {Number} textLeftOffset Text left offset\n   * @return {Object}\n   */\n  private _getSVGTextAndBg(\n    this: TextSVGExportMixin & FabricText,\n    textTopOffset: number,\n    textLeftOffset: number,\n  ) {\n    const textSpans: string[] = [],\n      textBgRects: string[] = [];\n    let height = textTopOffset,\n      lineOffset;\n\n    // bounding-box background\n    this.backgroundColor &&\n      textBgRects.push(\n        ...createSVGInlineRect(\n          this.backgroundColor,\n          -this.width / 2,\n          -this.height / 2,\n          this.width,\n          this.height,\n        ),\n      );\n\n    // text and text-background\n    for (let i = 0, len = this._textLines.length; i < len; i++) {\n      lineOffset = this._getLineLeftOffset(i);\n      if (this.direction === 'rtl') {\n        lineOffset += this.width;\n      }\n      if (this.textBackgroundColor || this.styleHas('textBackgroundColor', i)) {\n        this._setSVGTextLineBg(\n          textBgRects,\n          i,\n          textLeftOffset + lineOffset,\n          height,\n        );\n      }\n      this._setSVGTextLineText(\n        textSpans,\n        i,\n        textLeftOffset + lineOffset,\n        height,\n      );\n      height += this.getHeightOfLine(i);\n    }\n\n    return {\n      textSpans,\n      textBgRects,\n    };\n  }\n\n  private _createTextCharSpan(\n    this: TextSVGExportMixin & FabricText,\n    char: string,\n    styleDecl: TextStyleDeclaration,\n    left: number,\n    top: number,\n  ) {\n    const styleProps = this.getSvgSpanStyles(\n        styleDecl,\n        char !== char.trim() || !!char.match(multipleSpacesRegex),\n      ),\n      fillStyles = styleProps ? `style=\"${styleProps}\"` : '',\n      dy = styleDecl.deltaY,\n      dySpan = dy ? ` dy=\"${toFixed(dy, config.NUM_FRACTION_DIGITS)}\" ` : '';\n\n    return `<tspan x=\"${toFixed(\n      left,\n      config.NUM_FRACTION_DIGITS,\n    )}\" y=\"${toFixed(\n      top,\n      config.NUM_FRACTION_DIGITS,\n    )}\" ${dySpan}${fillStyles}>${escapeXml(char)}</tspan>`;\n  }\n\n  private _setSVGTextLineText(\n    this: TextSVGExportMixin & FabricText,\n    textSpans: string[],\n    lineIndex: number,\n    textLeftOffset: number,\n    textTopOffset: number,\n  ) {\n    const lineHeight = this.getHeightOfLine(lineIndex),\n      isJustify = this.textAlign.includes(JUSTIFY),\n      line = this._textLines[lineIndex];\n    let actualStyle,\n      nextStyle,\n      charsToRender = '',\n      charBox,\n      style,\n      boxWidth = 0,\n      timeToRender;\n\n    textTopOffset +=\n      (lineHeight * (1 - this._fontSizeFraction)) / this.lineHeight;\n    for (let i = 0, len = line.length - 1; i <= len; i++) {\n      timeToRender = i === len || this.charSpacing;\n      charsToRender += line[i];\n      charBox = this.__charBounds[lineIndex][i];\n      if (boxWidth === 0) {\n        textLeftOffset += charBox.kernedWidth - charBox.width;\n        boxWidth += charBox.width;\n      } else {\n        boxWidth += charBox.kernedWidth;\n      }\n      if (isJustify && !timeToRender) {\n        if (this._reSpaceAndTab.test(line[i])) {\n          timeToRender = true;\n        }\n      }\n      if (!timeToRender) {\n        // if we have charSpacing, we render char by char\n        actualStyle =\n          actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n        nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n        timeToRender = hasStyleChanged(actualStyle, nextStyle, true);\n      }\n      if (timeToRender) {\n        style = this._getStyleDeclaration(lineIndex, i);\n        textSpans.push(\n          this._createTextCharSpan(\n            charsToRender,\n            style,\n            textLeftOffset,\n            textTopOffset,\n          ),\n        );\n        charsToRender = '';\n        actualStyle = nextStyle;\n        if (this.direction === 'rtl') {\n          textLeftOffset -= boxWidth;\n        } else {\n          textLeftOffset += boxWidth;\n        }\n        boxWidth = 0;\n      }\n    }\n  }\n\n  private _setSVGTextLineBg(\n    this: TextSVGExportMixin & FabricText,\n    textBgRects: (string | number)[],\n    i: number,\n    leftOffset: number,\n    textTopOffset: number,\n  ) {\n    const line = this._textLines[i],\n      heightOfLine = this.getHeightOfLine(i) / this.lineHeight;\n    let boxWidth = 0,\n      boxStart = 0,\n      currentColor,\n      lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n    for (let j = 0; j < line.length; j++) {\n      const { left, width, kernedWidth } = this.__charBounds[i][j];\n      currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n      if (currentColor !== lastColor) {\n        lastColor &&\n          textBgRects.push(\n            ...createSVGInlineRect(\n              lastColor,\n              leftOffset + boxStart,\n              textTopOffset,\n              boxWidth,\n              heightOfLine,\n            ),\n          );\n        boxStart = left;\n        boxWidth = width;\n        lastColor = currentColor;\n      } else {\n        boxWidth += kernedWidth;\n      }\n    }\n    currentColor &&\n      textBgRects.push(\n        ...createSVGInlineRect(\n          lastColor,\n          leftOffset + boxStart,\n          textTopOffset,\n          boxWidth,\n          heightOfLine,\n        ),\n      );\n  }\n\n  /**\n   * @deprecated unused\n   */\n  _getSVGLineTopOffset(\n    this: TextSVGExportMixin & FabricText,\n    lineIndex: number,\n  ) {\n    let lineTopOffset = 0,\n      j;\n    for (j = 0; j < lineIndex; j++) {\n      lineTopOffset += this.getHeightOfLine(j);\n    }\n    const lastHeight = this.getHeightOfLine(j);\n    return {\n      lineTop: lineTopOffset,\n      offset:\n        ((this._fontSizeMult - this._fontSizeFraction) * lastHeight) /\n        (this.lineHeight * this._fontSizeMult),\n    };\n  }\n\n  /**\n   * Returns styles-string for svg-export\n   * @param {Boolean} skipShadow a boolean to skip shadow filter output\n   * @return {String}\n   */\n  getSvgStyles(this: TextSVGExportMixin & FabricText, skipShadow?: boolean) {\n    return `${super.getSvgStyles(skipShadow)} white-space: pre;`;\n  }\n\n  /**\n   * Returns styles-string for svg-export\n   * @param {Object} style the object from which to retrieve style properties\n   * @param {Boolean} useWhiteSpace a boolean to include an additional attribute in the style.\n   * @return {String}\n   */\n  getSvgSpanStyles(\n    this: TextSVGExportMixin & FabricText,\n    style: TextStyleDeclaration,\n    useWhiteSpace?: boolean,\n  ) {\n    const {\n      fontFamily,\n      strokeWidth,\n      stroke,\n      fill,\n      fontSize,\n      fontStyle,\n      fontWeight,\n      deltaY,\n    } = style;\n\n    const textDecoration = this.getSvgTextDecoration(style);\n\n    return [\n      stroke ? colorPropToSVG(STROKE, stroke) : '',\n      strokeWidth ? `stroke-width: ${strokeWidth}; ` : '',\n      fontFamily\n        ? `font-family: ${\n            !fontFamily.includes(\"'\") && !fontFamily.includes('\"')\n              ? `'${fontFamily}'`\n              : fontFamily\n          }; `\n        : '',\n      fontSize ? `font-size: ${fontSize}px; ` : '',\n      fontStyle ? `font-style: ${fontStyle}; ` : '',\n      fontWeight ? `font-weight: ${fontWeight}; ` : '',\n      textDecoration ? `text-decoration: ${textDecoration}; ` : textDecoration,\n      fill ? colorPropToSVG(FILL, fill) : '',\n      deltaY ? `baseline-shift: ${-deltaY}; ` : '',\n      useWhiteSpace ? 'white-space: pre; ' : '',\n    ].join('');\n  }\n\n  /**\n   * Returns text-decoration property for svg-export\n   * @param {Object} style the object from which to retrieve style properties\n   * @return {String}\n   */\n  getSvgTextDecoration(\n    this: TextSVGExportMixin & FabricText,\n    style: TextStyleDeclaration,\n  ) {\n    return (['overline', 'underline', 'line-through'] as const)\n      .filter(\n        (decoration) =>\n          style[\n            decoration.replace('-', '') as\n              | 'overline'\n              | 'underline'\n              | 'linethrough'\n          ],\n      )\n      .join(' ');\n  }\n}\n","import { cache } from '../../cache';\nimport { DEFAULT_SVG_FONT_SIZE, FILL, STROKE } from '../../constants';\nimport type { ObjectEvents } from '../../EventTypeDefs';\nimport type {\n  CompleteTextStyleDeclaration,\n  TextStyle,\n  TextStyleDeclaration,\n} from './StyledText';\nimport { StyledText } from './StyledText';\nimport { SHARED_ATTRIBUTES } from '../../parser/attributes';\nimport { parseAttributes } from '../../parser/parseAttributes';\nimport type {\n  Abortable,\n  TCacheCanvasDimensions,\n  TClassProperties,\n  TFiller,\n  TOptions,\n} from '../../typedefs';\nimport { classRegistry } from '../../ClassRegistry';\nimport { graphemeSplit } from '../../util/lang_string';\nimport { createCanvasElementFor } from '../../util/misc/dom';\nimport type { TextStyleArray } from '../../util/misc/textStyles';\nimport {\n  hasStyleChanged,\n  stylesFromArray,\n  stylesToArray,\n} from '../../util/misc/textStyles';\nimport { getPathSegmentsInfo, getPointOnPath } from '../../util/path';\nimport { cacheProperties } from '../Object/FabricObject';\nimport type { Path } from '../Path';\nimport { TextSVGExportMixin } from './TextSVGExportMixin';\nimport { applyMixins } from '../../util/applyMixins';\nimport type { FabricObjectProps, SerializedObjectProps } from '../Object/types';\nimport type { StylePropertiesType } from './constants';\nimport {\n  additionalProps,\n  textDefaultValues,\n  textLayoutProperties,\n  JUSTIFY,\n  JUSTIFY_CENTER,\n  JUSTIFY_LEFT,\n  JUSTIFY_RIGHT,\n} from './constants';\nimport { CENTER, LEFT, RIGHT, TOP, BOTTOM } from '../../constants';\nimport { isFiller } from '../../util/typeAssertions';\nimport type { Gradient } from '../../gradient/Gradient';\nimport type { Pattern } from '../../Pattern';\nimport type { CSSRules } from '../../parser/typedefs';\n\nlet measuringContext: CanvasRenderingContext2D | null;\n\n/**\n * Return a context for measurement of text string.\n * if created it gets stored for reuse\n */\nfunction getMeasuringContext() {\n  if (!measuringContext) {\n    const canvas = createCanvasElementFor({\n      width: 0,\n      height: 0,\n    });\n    measuringContext = canvas.getContext('2d');\n  }\n  return measuringContext;\n}\n\nexport type TPathSide = 'left' | 'right';\n\nexport type TPathAlign = 'baseline' | 'center' | 'ascender' | 'descender';\n\nexport type TextLinesInfo = {\n  lines: string[];\n  graphemeLines: string[][];\n  graphemeText: string[];\n  _unwrappedLines: string[][];\n};\n\n/**\n * Measure and return the info of a single grapheme.\n * needs the the info of previous graphemes already filled\n * Override to customize measuring\n */\nexport type GraphemeBBox = {\n  width: number;\n  height: number;\n  kernedWidth: number;\n  left: number;\n  deltaY: number;\n  renderLeft?: number;\n  renderTop?: number;\n  angle?: number;\n};\n\n// @TODO this is not complete\ninterface UniqueTextProps {\n  charSpacing: number;\n  lineHeight: number;\n  fontSize: number;\n  fontWeight: string | number;\n  fontFamily: string;\n  fontStyle: string;\n  pathSide: TPathSide;\n  pathAlign: TPathAlign;\n  underline: boolean;\n  overline: boolean;\n  linethrough: boolean;\n  textAlign: string;\n  direction: CanvasDirection;\n  path?: Path;\n}\n\nexport interface SerializedTextProps\n  extends SerializedObjectProps,\n    UniqueTextProps {\n  styles: TextStyleArray | TextStyle;\n}\n\nexport interface TextProps extends FabricObjectProps, UniqueTextProps {\n  styles: TextStyle;\n}\n\n/**\n * Text class\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\n */\nexport class FabricText<\n    Props extends TOptions<TextProps> = Partial<TextProps>,\n    SProps extends SerializedTextProps = SerializedTextProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends StyledText<Props, SProps, EventSpec>\n  implements UniqueTextProps\n{\n  /**\n   * Properties that requires a text layout recalculation when changed\n   * @type string[]\n   * @protected\n   */\n  static textLayoutProperties: string[] = textLayoutProperties;\n\n  /**\n   * @private\n   */\n  declare _reNewline: RegExp;\n\n  /**\n   * Use this regular expression to filter for whitespaces that is not a new line.\n   * Mostly used when text is 'justify' aligned.\n   * @private\n   */\n  declare _reSpacesAndTabs: RegExp;\n\n  /**\n   * Use this regular expression to filter for whitespace that is not a new line.\n   * Mostly used when text is 'justify' aligned.\n   * @private\n   */\n  declare _reSpaceAndTab: RegExp;\n\n  /**\n   * Use this regular expression to filter consecutive groups of non spaces.\n   * Mostly used when text is 'justify' aligned.\n   * @private\n   */\n  declare _reWords: RegExp;\n\n  declare text: string;\n\n  /**\n   * Font size (in pixels)\n   * @type Number\n   * @default\n   */\n  declare fontSize: number;\n\n  /**\n   * Font weight (e.g. bold, normal, 400, 600, 800)\n   * @type {(Number|String)}\n   * @default\n   */\n  declare fontWeight: string | number;\n\n  /**\n   * Font family\n   * @type String\n   * @default\n   */\n  declare fontFamily: string;\n\n  /**\n   * Text decoration underline.\n   * @type Boolean\n   * @default\n   */\n  declare underline: boolean;\n\n  /**\n   * Text decoration overline.\n   * @type Boolean\n   * @default\n   */\n  declare overline: boolean;\n\n  /**\n   * Text decoration linethrough.\n   * @type Boolean\n   * @default\n   */\n  declare linethrough: boolean;\n\n  /**\n   * Text alignment. Possible values: \"left\", \"center\", \"right\", \"justify\",\n   * \"justify-left\", \"justify-center\" or \"justify-right\".\n   * @type String\n   * @default\n   */\n  declare textAlign: string;\n\n  /**\n   * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\n   * @type String\n   * @default\n   */\n  declare fontStyle: string;\n\n  /**\n   * Line height\n   * @type Number\n   * @default\n   */\n  declare lineHeight: number;\n\n  /**\n   * Superscript schema object (minimum overlap)\n   */\n  declare superscript: {\n    /**\n     * fontSize factor\n     * @default 0.6\n     */\n    size: number;\n    /**\n     * baseline-shift factor (upwards)\n     * @default -0.35\n     */\n    baseline: number;\n  };\n\n  /**\n   * Subscript schema object (minimum overlap)\n   */\n  declare subscript: {\n    /**\n     * fontSize factor\n     * @default 0.6\n     */\n    size: number;\n    /**\n     * baseline-shift factor (downwards)\n     * @default 0.11\n     */\n    baseline: number;\n  };\n\n  /**\n   * Background color of text lines\n   * @type String\n   * @default\n   */\n  declare textBackgroundColor: string;\n\n  declare styles: TextStyle;\n\n  /**\n   * Path that the text should follow.\n   * since 4.6.0 the path will be drawn automatically.\n   * if you want to make the path visible, give it a stroke and strokeWidth or fill value\n   * if you want it to be hidden, assign visible = false to the path.\n   * This feature is in BETA, and SVG import/export is not yet supported.\n   * @type Path\n   * @example\n   * const textPath = new Text('Text on a path', {\n   *     top: 150,\n   *     left: 150,\n   *     textAlign: 'center',\n   *     charSpacing: -50,\n   *     path: new Path('M 0 0 C 50 -100 150 -100 200 0', {\n   *         strokeWidth: 1,\n   *         visible: false\n   *     }),\n   *     pathSide: 'left',\n   *     pathStartOffset: 0\n   * });\n   * @default\n   */\n  declare path?: Path;\n\n  /**\n   * Offset amount for text path starting position\n   * Only used when text has a path\n   * @type Number\n   * @default\n   */\n  declare pathStartOffset: number;\n\n  /**\n   * Which side of the path the text should be drawn on.\n   * Only used when text has a path\n   * @type {TPathSide} 'left|right'\n   * @default\n   */\n  declare pathSide: TPathSide;\n\n  /**\n   * How text is aligned to the path. This property determines\n   * the perpendicular position of each character relative to the path.\n   * (one of \"baseline\", \"center\", \"ascender\", \"descender\")\n   * This feature is in BETA, and its behavior may change\n   * @type TPathAlign\n   * @default\n   */\n  declare pathAlign: TPathAlign;\n\n  /**\n   * @private\n   */\n  declare _fontSizeFraction: number;\n\n  /**\n   * @private\n   */\n  declare offsets: { underline: number; linethrough: number; overline: number };\n\n  /**\n   * Text Line proportion to font Size (in pixels)\n   * @type Number\n   * @default\n   */\n  declare _fontSizeMult: number;\n\n  /**\n   * additional space between characters\n   * expressed in thousands of em unit\n   * @type Number\n   * @default\n   */\n  declare charSpacing: number;\n\n  /**\n   * Baseline shift, styles only, keep at 0 for the main text object\n   * @type {Number}\n   * @default\n   */\n  declare deltaY: number;\n\n  /**\n   * WARNING: EXPERIMENTAL. NOT SUPPORTED YET\n   * determine the direction of the text.\n   * This has to be set manually together with textAlign and originX for proper\n   * experience.\n   * some interesting link for the future\n   * https://www.w3.org/International/questions/qa-bidi-unicode-controls\n   * @since 4.5.0\n   * @type {CanvasDirection} 'ltr|rtl'\n   * @default\n   */\n  declare direction: CanvasDirection;\n\n  /**\n   * contains characters bounding boxes\n   * This variable is considered to be protected.\n   * But for how mixins are implemented right now, we can't leave it private\n   * @protected\n   */\n  __charBounds: GraphemeBBox[][] = [];\n\n  /**\n   * use this size when measuring text. To avoid IE11 rounding errors\n   * @type {Number}\n   * @default\n   * @readonly\n   * @private\n   */\n  declare CACHE_FONT_SIZE: number;\n\n  /**\n   * contains the min text width to avoid getting 0\n   * @type {Number}\n   * @default\n   */\n  declare MIN_TEXT_WIDTH: number;\n\n  /**\n   * contains the the text of the object, divided in lines as they are displayed\n   * on screen. Wrapping will divide the text independently of line breaks\n   * @type {string[]}\n   * @default\n   */\n  declare textLines: string[];\n\n  /**\n   * same as textlines, but each line is an array of graphemes as split by splitByGrapheme\n   * @type {string[]}\n   * @default\n   */\n  declare _textLines: string[][];\n\n  declare _unwrappedTextLines: string[][];\n  declare _text: string[];\n  declare cursorWidth: number;\n  declare __lineHeights: number[];\n  declare __lineWidths: number[];\n  declare initialized?: true;\n\n  static cacheProperties = [...cacheProperties, ...additionalProps];\n\n  static ownDefaults = textDefaultValues;\n\n  static type = 'Text';\n\n  static getDefaults(): Record<string, any> {\n    return { ...super.getDefaults(), ...FabricText.ownDefaults };\n  }\n\n  constructor(text: string, options?: Props) {\n    super();\n    Object.assign(this, FabricText.ownDefaults);\n    this.setOptions(options);\n    if (!this.styles) {\n      this.styles = {};\n    }\n    this.text = text;\n    this.initialized = true;\n    if (this.path) {\n      this.setPathInfo();\n    }\n    this.initDimensions();\n    this.setCoords();\n  }\n\n  /**\n   * If text has a path, it will add the extra information needed\n   * for path and text calculations\n   */\n  setPathInfo() {\n    const path = this.path;\n    if (path) {\n      path.segmentsInfo = getPathSegmentsInfo(path.path);\n    }\n  }\n\n  /**\n   * @private\n   * Divides text into lines of text and lines of graphemes.\n   */\n  _splitText(): TextLinesInfo {\n    const newLines = this._splitTextIntoLines(this.text);\n    this.textLines = newLines.lines;\n    this._textLines = newLines.graphemeLines;\n    this._unwrappedTextLines = newLines._unwrappedLines;\n    this._text = newLines.graphemeText;\n    return newLines;\n  }\n\n  /**\n   * Initialize or update text dimensions.\n   * Updates this.width and this.height with the proper values.\n   * Does not return dimensions.\n   */\n  initDimensions() {\n    this._splitText();\n    this._clearCache();\n    this.dirty = true;\n    if (this.path) {\n      this.width = this.path.width;\n      this.height = this.path.height;\n    } else {\n      this.width =\n        this.calcTextWidth() || this.cursorWidth || this.MIN_TEXT_WIDTH;\n      this.height = this.calcTextHeight();\n    }\n    if (this.textAlign.includes(JUSTIFY)) {\n      // once text is measured we need to make space fatter to make justified text.\n      this.enlargeSpaces();\n    }\n  }\n\n  /**\n   * Enlarge space boxes and shift the others\n   */\n  enlargeSpaces() {\n    let diffSpace,\n      currentLineWidth,\n      numberOfSpaces,\n      accumulatedSpace,\n      line,\n      charBound,\n      spaces;\n    for (let i = 0, len = this._textLines.length; i < len; i++) {\n      if (\n        this.textAlign !== JUSTIFY &&\n        (i === len - 1 || this.isEndOfWrapping(i))\n      ) {\n        continue;\n      }\n      accumulatedSpace = 0;\n      line = this._textLines[i];\n      currentLineWidth = this.getLineWidth(i);\n      if (\n        currentLineWidth < this.width &&\n        (spaces = this.textLines[i].match(this._reSpacesAndTabs))\n      ) {\n        numberOfSpaces = spaces.length;\n        diffSpace = (this.width - currentLineWidth) / numberOfSpaces;\n        for (let j = 0; j <= line.length; j++) {\n          charBound = this.__charBounds[i][j];\n          if (this._reSpaceAndTab.test(line[j])) {\n            charBound.width += diffSpace;\n            charBound.kernedWidth += diffSpace;\n            charBound.left += accumulatedSpace;\n            accumulatedSpace += diffSpace;\n          } else {\n            charBound.left += accumulatedSpace;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Detect if the text line is ended with an hard break\n   * text and itext do not have wrapping, return false\n   * @return {Boolean}\n   */\n  isEndOfWrapping(lineIndex: number): boolean {\n    return lineIndex === this._textLines.length - 1;\n  }\n\n  /**\n   * Detect if a line has a linebreak and so we need to account for it when moving\n   * and counting style.\n   * It return always 1 for text and Itext. Textbox has its own implementation\n   * @return Number\n   */\n  missingNewlineOffset(lineIndex: number, skipWrapping?: boolean): 0 | 1;\n  missingNewlineOffset(_lineIndex: number): 1 {\n    return 1;\n  }\n\n  /**\n   * Returns 2d representation (lineIndex and charIndex) of cursor\n   * @param {Number} selectionStart\n   * @param {Boolean} [skipWrapping] consider the location for unwrapped lines. useful to manage styles.\n   */\n  get2DCursorLocation(selectionStart: number, skipWrapping?: boolean) {\n    const lines = skipWrapping ? this._unwrappedTextLines : this._textLines;\n    let i: number;\n    for (i = 0; i < lines.length; i++) {\n      if (selectionStart <= lines[i].length) {\n        return {\n          lineIndex: i,\n          charIndex: selectionStart,\n        };\n      }\n      selectionStart -=\n        lines[i].length + this.missingNewlineOffset(i, skipWrapping);\n    }\n    return {\n      lineIndex: i - 1,\n      charIndex:\n        lines[i - 1].length < selectionStart\n          ? lines[i - 1].length\n          : selectionStart,\n    };\n  }\n\n  /**\n   * Returns string representation of an instance\n   * @return {String} String representation of text object\n   */\n  toString(): string {\n    return `#<Text (${this.complexity()}): { \"text\": \"${\n      this.text\n    }\", \"fontFamily\": \"${this.fontFamily}\" }>`;\n  }\n\n  /**\n   * Return the dimension and the zoom level needed to create a cache canvas\n   * big enough to host the object to be cached.\n   * @private\n   * @param {Object} dim.x width of object to be cached\n   * @param {Object} dim.y height of object to be cached\n   * @return {Object}.width width of canvas\n   * @return {Object}.height height of canvas\n   * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n   * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n   */\n  _getCacheCanvasDimensions(): TCacheCanvasDimensions {\n    const dims = super._getCacheCanvasDimensions();\n    const fontSize = this.fontSize;\n    dims.width += fontSize * dims.zoomX;\n    dims.height += fontSize * dims.zoomY;\n    return dims;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    const path = this.path;\n    path && !path.isNotVisible() && path._render(ctx);\n    this._setTextStyles(ctx);\n    this._renderTextLinesBackground(ctx);\n    this._renderTextDecoration(ctx, 'underline');\n    this._renderText(ctx);\n    this._renderTextDecoration(ctx, 'overline');\n    this._renderTextDecoration(ctx, 'linethrough');\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderText(ctx: CanvasRenderingContext2D) {\n    if (this.paintFirst === STROKE) {\n      this._renderTextStroke(ctx);\n      this._renderTextFill(ctx);\n    } else {\n      this._renderTextFill(ctx);\n      this._renderTextStroke(ctx);\n    }\n  }\n\n  /**\n   * Set the font parameter of the context with the object properties or with charStyle\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {Object} [charStyle] object with font style properties\n   * @param {String} [charStyle.fontFamily] Font Family\n   * @param {Number} [charStyle.fontSize] Font size in pixels. ( without px suffix )\n   * @param {String} [charStyle.fontWeight] Font weight\n   * @param {String} [charStyle.fontStyle] Font style (italic|normal)\n   */\n  _setTextStyles(\n    ctx: CanvasRenderingContext2D,\n    charStyle?: any,\n    forMeasuring?: boolean,\n  ) {\n    ctx.textBaseline = 'alphabetic';\n    if (this.path) {\n      switch (this.pathAlign) {\n        case CENTER:\n          ctx.textBaseline = 'middle';\n          break;\n        case 'ascender':\n          ctx.textBaseline = TOP;\n          break;\n        case 'descender':\n          ctx.textBaseline = BOTTOM;\n          break;\n      }\n    }\n    ctx.font = this._getFontDeclaration(charStyle, forMeasuring);\n  }\n\n  /**\n   * calculate and return the text Width measuring each line.\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @return {Number} Maximum width of Text object\n   */\n  calcTextWidth(): number {\n    let maxWidth = this.getLineWidth(0);\n\n    for (let i = 1, len = this._textLines.length; i < len; i++) {\n      const currentLineWidth = this.getLineWidth(i);\n      if (currentLineWidth > maxWidth) {\n        maxWidth = currentLineWidth;\n      }\n    }\n    return maxWidth;\n  }\n\n  /**\n   * @private\n   * @param {String} method Method name (\"fillText\" or \"strokeText\")\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {String} line Text to render\n   * @param {Number} left Left position of text\n   * @param {Number} top Top position of text\n   * @param {Number} lineIndex Index of a line in a text\n   */\n  _renderTextLine(\n    method: 'fillText' | 'strokeText',\n    ctx: CanvasRenderingContext2D,\n    line: string[],\n    left: number,\n    top: number,\n    lineIndex: number,\n  ) {\n    this._renderChars(method, ctx, line, left, top, lineIndex);\n  }\n\n  /**\n   * Renders the text background for lines, taking care of style\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderTextLinesBackground(ctx: CanvasRenderingContext2D) {\n    if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor')) {\n      return;\n    }\n    const originalFill = ctx.fillStyle,\n      leftOffset = this._getLeftOffset();\n    let lineTopOffset = this._getTopOffset();\n\n    for (let i = 0, len = this._textLines.length; i < len; i++) {\n      const heightOfLine = this.getHeightOfLine(i);\n      if (\n        !this.textBackgroundColor &&\n        !this.styleHas('textBackgroundColor', i)\n      ) {\n        lineTopOffset += heightOfLine;\n        continue;\n      }\n      const jlen = this._textLines[i].length;\n      const lineLeftOffset = this._getLineLeftOffset(i);\n      let boxWidth = 0;\n      let boxStart = 0;\n      let drawStart;\n      let currentColor;\n      let lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n      for (let j = 0; j < jlen; j++) {\n        // at this point charbox are either standard or full with pathInfo if there is a path.\n        const charBox = this.__charBounds[i][j] as Required<GraphemeBBox>;\n        currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n        if (this.path) {\n          ctx.save();\n          ctx.translate(charBox.renderLeft, charBox.renderTop);\n          ctx.rotate(charBox.angle);\n          ctx.fillStyle = currentColor;\n          currentColor &&\n            ctx.fillRect(\n              -charBox.width / 2,\n              (-heightOfLine / this.lineHeight) * (1 - this._fontSizeFraction),\n              charBox.width,\n              heightOfLine / this.lineHeight,\n            );\n          ctx.restore();\n        } else if (currentColor !== lastColor) {\n          drawStart = leftOffset + lineLeftOffset + boxStart;\n          if (this.direction === 'rtl') {\n            drawStart = this.width - drawStart - boxWidth;\n          }\n          ctx.fillStyle = lastColor;\n          lastColor &&\n            ctx.fillRect(\n              drawStart,\n              lineTopOffset,\n              boxWidth,\n              heightOfLine / this.lineHeight,\n            );\n          boxStart = charBox.left;\n          boxWidth = charBox.width;\n          lastColor = currentColor;\n        } else {\n          boxWidth += charBox.kernedWidth;\n        }\n      }\n      if (currentColor && !this.path) {\n        drawStart = leftOffset + lineLeftOffset + boxStart;\n        if (this.direction === 'rtl') {\n          drawStart = this.width - drawStart - boxWidth;\n        }\n        ctx.fillStyle = currentColor;\n        ctx.fillRect(\n          drawStart,\n          lineTopOffset,\n          boxWidth,\n          heightOfLine / this.lineHeight,\n        );\n      }\n      lineTopOffset += heightOfLine;\n    }\n    ctx.fillStyle = originalFill;\n    // if there is text background color no\n    // other shadows should be casted\n    this._removeShadow(ctx);\n  }\n\n  /**\n   * measure and return the width of a single character.\n   * possibly overridden to accommodate different measure logic or\n   * to hook some external lib for character measurement\n   * @private\n   * @param {String} _char, char to be measured\n   * @param {Object} charStyle style of char to be measured\n   * @param {String} [previousChar] previous char\n   * @param {Object} [prevCharStyle] style of previous char\n   */\n  _measureChar(\n    _char: string,\n    charStyle: CompleteTextStyleDeclaration,\n    previousChar: string | undefined,\n    prevCharStyle: CompleteTextStyleDeclaration | Record<string, never>,\n  ) {\n    const fontCache = cache.getFontCache(charStyle),\n      fontDeclaration = this._getFontDeclaration(charStyle),\n      couple = previousChar + _char,\n      stylesAreEqual =\n        previousChar &&\n        fontDeclaration === this._getFontDeclaration(prevCharStyle),\n      fontMultiplier = charStyle.fontSize / this.CACHE_FONT_SIZE;\n    let width: number | undefined,\n      coupleWidth: number | undefined,\n      previousWidth: number | undefined,\n      kernedWidth: number | undefined;\n\n    if (previousChar && fontCache[previousChar] !== undefined) {\n      previousWidth = fontCache[previousChar];\n    }\n    if (fontCache[_char] !== undefined) {\n      kernedWidth = width = fontCache[_char];\n    }\n    if (stylesAreEqual && fontCache[couple] !== undefined) {\n      coupleWidth = fontCache[couple];\n      kernedWidth = coupleWidth - previousWidth!;\n    }\n    if (\n      width === undefined ||\n      previousWidth === undefined ||\n      coupleWidth === undefined\n    ) {\n      const ctx = getMeasuringContext()!;\n      // send a TRUE to specify measuring font size CACHE_FONT_SIZE\n      this._setTextStyles(ctx, charStyle, true);\n      if (width === undefined) {\n        kernedWidth = width = ctx.measureText(_char).width;\n        fontCache[_char] = width;\n      }\n      if (previousWidth === undefined && stylesAreEqual && previousChar) {\n        previousWidth = ctx.measureText(previousChar).width;\n        fontCache[previousChar] = previousWidth;\n      }\n      if (stylesAreEqual && coupleWidth === undefined) {\n        // we can measure the kerning couple and subtract the width of the previous character\n        coupleWidth = ctx.measureText(couple).width;\n        fontCache[couple] = coupleWidth;\n        // safe to use the non-null since if undefined we defined it before.\n        kernedWidth = coupleWidth - previousWidth!;\n      }\n    }\n    return {\n      width: width * fontMultiplier,\n      kernedWidth: kernedWidth! * fontMultiplier,\n    };\n  }\n\n  /**\n   * Computes height of character at given position\n   * @param {Number} line the line index number\n   * @param {Number} _char the character index number\n   * @return {Number} fontSize of the character\n   */\n  getHeightOfChar(line: number, _char: number): number {\n    return this.getValueOfPropertyAt(line, _char, 'fontSize');\n  }\n\n  /**\n   * measure a text line measuring all characters.\n   * @param {Number} lineIndex line number\n   */\n  measureLine(lineIndex: number) {\n    const lineInfo = this._measureLine(lineIndex);\n    if (this.charSpacing !== 0) {\n      lineInfo.width -= this._getWidthOfCharSpacing();\n    }\n    if (lineInfo.width < 0) {\n      lineInfo.width = 0;\n    }\n    return lineInfo;\n  }\n\n  /**\n   * measure every grapheme of a line, populating __charBounds\n   * @param {Number} lineIndex\n   * @return {Object} object.width total width of characters\n   * @return {Object} object.numOfSpaces length of chars that match this._reSpacesAndTabs\n   */\n  _measureLine(lineIndex: number) {\n    let width = 0,\n      prevGrapheme: string | undefined,\n      graphemeInfo: GraphemeBBox | undefined;\n\n    const reverse = this.pathSide === RIGHT,\n      path = this.path,\n      line = this._textLines[lineIndex],\n      llength = line.length,\n      lineBounds = new Array<GraphemeBBox>(llength);\n\n    this.__charBounds[lineIndex] = lineBounds;\n    for (let i = 0; i < llength; i++) {\n      const grapheme = line[i];\n      graphemeInfo = this._getGraphemeBox(grapheme, lineIndex, i, prevGrapheme);\n      lineBounds[i] = graphemeInfo;\n      width += graphemeInfo.kernedWidth;\n      prevGrapheme = grapheme;\n    }\n    // this latest bound box represent the last character of the line\n    // to simplify cursor handling in interactive mode.\n    lineBounds[llength] = {\n      left: graphemeInfo ? graphemeInfo.left + graphemeInfo.width : 0,\n      width: 0,\n      kernedWidth: 0,\n      height: this.fontSize,\n      deltaY: 0,\n    } as GraphemeBBox;\n    if (path && path.segmentsInfo) {\n      let positionInPath = 0;\n      const totalPathLength =\n        path.segmentsInfo[path.segmentsInfo.length - 1].length;\n      switch (this.textAlign) {\n        case LEFT:\n          positionInPath = reverse ? totalPathLength - width : 0;\n          break;\n        case CENTER:\n          positionInPath = (totalPathLength - width) / 2;\n          break;\n        case RIGHT:\n          positionInPath = reverse ? 0 : totalPathLength - width;\n          break;\n        //todo - add support for justify\n      }\n      positionInPath += this.pathStartOffset * (reverse ? -1 : 1);\n      for (\n        let i = reverse ? llength - 1 : 0;\n        reverse ? i >= 0 : i < llength;\n        reverse ? i-- : i++\n      ) {\n        graphemeInfo = lineBounds[i];\n        if (positionInPath > totalPathLength) {\n          positionInPath %= totalPathLength;\n        } else if (positionInPath < 0) {\n          positionInPath += totalPathLength;\n        }\n        // it would probably much faster to send all the grapheme position for a line\n        // and calculate path position/angle at once.\n        this._setGraphemeOnPath(positionInPath, graphemeInfo);\n        positionInPath += graphemeInfo.kernedWidth;\n      }\n    }\n    return { width: width, numOfSpaces: 0 };\n  }\n\n  /**\n   * Calculate the angle  and the left,top position of the char that follow a path.\n   * It appends it to graphemeInfo to be reused later at rendering\n   * @private\n   * @param {Number} positionInPath to be measured\n   * @param {GraphemeBBox} graphemeInfo current grapheme box information\n   * @param {Object} startingPoint position of the point\n   */\n  _setGraphemeOnPath(positionInPath: number, graphemeInfo: GraphemeBBox) {\n    const centerPosition = positionInPath + graphemeInfo.kernedWidth / 2,\n      path = this.path!;\n\n    // we are at currentPositionOnPath. we want to know what point on the path is.\n    const info = getPointOnPath(path.path, centerPosition, path.segmentsInfo)!;\n    graphemeInfo.renderLeft = info.x - path.pathOffset.x;\n    graphemeInfo.renderTop = info.y - path.pathOffset.y;\n    graphemeInfo.angle = info.angle + (this.pathSide === RIGHT ? Math.PI : 0);\n  }\n\n  /**\n   *\n   * @param {String} grapheme to be measured\n   * @param {Number} lineIndex index of the line where the char is\n   * @param {Number} charIndex position in the line\n   * @param {String} [prevGrapheme] character preceding the one to be measured\n   * @returns {GraphemeBBox} grapheme bbox\n   */\n  _getGraphemeBox(\n    grapheme: string,\n    lineIndex: number,\n    charIndex: number,\n    prevGrapheme?: string,\n    skipLeft?: boolean,\n  ): GraphemeBBox {\n    const style = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n      prevStyle = prevGrapheme\n        ? this.getCompleteStyleDeclaration(lineIndex, charIndex - 1)\n        : {},\n      info = this._measureChar(grapheme, style, prevGrapheme, prevStyle);\n    let kernedWidth = info.kernedWidth,\n      width = info.width,\n      charSpacing;\n\n    if (this.charSpacing !== 0) {\n      charSpacing = this._getWidthOfCharSpacing();\n      width += charSpacing;\n      kernedWidth += charSpacing;\n    }\n\n    const box: GraphemeBBox = {\n      width,\n      left: 0,\n      height: style.fontSize,\n      kernedWidth,\n      deltaY: style.deltaY,\n    };\n    if (charIndex > 0 && !skipLeft) {\n      const previousBox = this.__charBounds[lineIndex][charIndex - 1];\n      box.left =\n        previousBox.left + previousBox.width + info.kernedWidth - info.width;\n    }\n    return box;\n  }\n\n  /**\n   * Calculate height of line at 'lineIndex'\n   * @param {Number} lineIndex index of line to calculate\n   * @return {Number}\n   */\n  getHeightOfLine(lineIndex: number): number {\n    if (this.__lineHeights[lineIndex]) {\n      return this.__lineHeights[lineIndex];\n    }\n\n    // char 0 is measured before the line cycle because it needs to char\n    // emptylines\n    let maxHeight = this.getHeightOfChar(lineIndex, 0);\n    for (let i = 1, len = this._textLines[lineIndex].length; i < len; i++) {\n      maxHeight = Math.max(this.getHeightOfChar(lineIndex, i), maxHeight);\n    }\n\n    return (this.__lineHeights[lineIndex] =\n      maxHeight * this.lineHeight * this._fontSizeMult);\n  }\n\n  /**\n   * Calculate text box height\n   */\n  calcTextHeight() {\n    let lineHeight,\n      height = 0;\n    for (let i = 0, len = this._textLines.length; i < len; i++) {\n      lineHeight = this.getHeightOfLine(i);\n      height += i === len - 1 ? lineHeight / this.lineHeight : lineHeight;\n    }\n    return height;\n  }\n\n  /**\n   * @private\n   * @return {Number} Left offset\n   */\n  _getLeftOffset(): number {\n    return this.direction === 'ltr' ? -this.width / 2 : this.width / 2;\n  }\n\n  /**\n   * @private\n   * @return {Number} Top offset\n   */\n  _getTopOffset(): number {\n    return -this.height / 2;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {String} method Method name (\"fillText\" or \"strokeText\")\n   */\n  _renderTextCommon(\n    ctx: CanvasRenderingContext2D,\n    method: 'fillText' | 'strokeText',\n  ) {\n    ctx.save();\n    let lineHeights = 0;\n    const left = this._getLeftOffset(),\n      top = this._getTopOffset();\n    for (let i = 0, len = this._textLines.length; i < len; i++) {\n      const heightOfLine = this.getHeightOfLine(i),\n        maxHeight = heightOfLine / this.lineHeight,\n        leftOffset = this._getLineLeftOffset(i);\n      this._renderTextLine(\n        method,\n        ctx,\n        this._textLines[i],\n        left + leftOffset,\n        top + lineHeights + maxHeight,\n        i,\n      );\n      lineHeights += heightOfLine;\n    }\n    ctx.restore();\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderTextFill(ctx: CanvasRenderingContext2D) {\n    if (!this.fill && !this.styleHas(FILL)) {\n      return;\n    }\n\n    this._renderTextCommon(ctx, 'fillText');\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderTextStroke(ctx: CanvasRenderingContext2D) {\n    if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\n      return;\n    }\n\n    if (this.shadow && !this.shadow.affectStroke) {\n      this._removeShadow(ctx);\n    }\n\n    ctx.save();\n    this._setLineDash(ctx, this.strokeDashArray);\n    ctx.beginPath();\n    this._renderTextCommon(ctx, 'strokeText');\n    ctx.closePath();\n    ctx.restore();\n  }\n\n  /**\n   * @private\n   * @param {String} method fillText or strokeText.\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {Array} line Content of the line, splitted in an array by grapheme\n   * @param {Number} left\n   * @param {Number} top\n   * @param {Number} lineIndex\n   */\n  _renderChars(\n    method: 'fillText' | 'strokeText',\n    ctx: CanvasRenderingContext2D,\n    line: Array<any>,\n    left: number,\n    top: number,\n    lineIndex: number,\n  ) {\n    const lineHeight = this.getHeightOfLine(lineIndex),\n      isJustify = this.textAlign.includes(JUSTIFY),\n      path = this.path,\n      shortCut =\n        !isJustify &&\n        this.charSpacing === 0 &&\n        this.isEmptyStyles(lineIndex) &&\n        !path,\n      isLtr = this.direction === 'ltr',\n      sign = this.direction === 'ltr' ? 1 : -1,\n      // this was changed in the PR #7674\n      // currentDirection = ctx.canvas.getAttribute('dir');\n      currentDirection = ctx.direction;\n\n    let actualStyle,\n      nextStyle,\n      charsToRender = '',\n      charBox,\n      boxWidth = 0,\n      timeToRender,\n      drawingLeft;\n\n    ctx.save();\n    if (currentDirection !== this.direction) {\n      ctx.canvas.setAttribute('dir', isLtr ? 'ltr' : 'rtl');\n      ctx.direction = isLtr ? 'ltr' : 'rtl';\n      ctx.textAlign = isLtr ? LEFT : RIGHT;\n    }\n    top -= (lineHeight * this._fontSizeFraction) / this.lineHeight;\n    if (shortCut) {\n      // render all the line in one pass without checking\n      // drawingLeft = isLtr ? left : left - this.getLineWidth(lineIndex);\n      this._renderChar(method, ctx, lineIndex, 0, line.join(''), left, top);\n      ctx.restore();\n      return;\n    }\n    for (let i = 0, len = line.length - 1; i <= len; i++) {\n      timeToRender = i === len || this.charSpacing || path;\n      charsToRender += line[i];\n      charBox = this.__charBounds[lineIndex][i] as Required<GraphemeBBox>;\n      if (boxWidth === 0) {\n        left += sign * (charBox.kernedWidth - charBox.width);\n        boxWidth += charBox.width;\n      } else {\n        boxWidth += charBox.kernedWidth;\n      }\n      if (isJustify && !timeToRender) {\n        if (this._reSpaceAndTab.test(line[i])) {\n          timeToRender = true;\n        }\n      }\n      if (!timeToRender) {\n        // if we have charSpacing, we render char by char\n        actualStyle =\n          actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n        nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n        timeToRender = hasStyleChanged(actualStyle, nextStyle, false);\n      }\n      if (timeToRender) {\n        if (path) {\n          ctx.save();\n          ctx.translate(charBox.renderLeft, charBox.renderTop);\n          ctx.rotate(charBox.angle);\n          this._renderChar(\n            method,\n            ctx,\n            lineIndex,\n            i,\n            charsToRender,\n            -boxWidth / 2,\n            0,\n          );\n          ctx.restore();\n        } else {\n          drawingLeft = left;\n          this._renderChar(\n            method,\n            ctx,\n            lineIndex,\n            i,\n            charsToRender,\n            drawingLeft,\n            top,\n          );\n        }\n        charsToRender = '';\n        actualStyle = nextStyle;\n        left += sign * boxWidth;\n        boxWidth = 0;\n      }\n    }\n    ctx.restore();\n  }\n\n  /**\n   * This function try to patch the missing gradientTransform on canvas gradients.\n   * transforming a context to transform the gradient, is going to transform the stroke too.\n   * we want to transform the gradient but not the stroke operation, so we create\n   * a transformed gradient on a pattern and then we use the pattern instead of the gradient.\n   * this method has drawbacks: is slow, is in low resolution, needs a patch for when the size\n   * is limited.\n   * @private\n   * @param {TFiller} filler a fabric gradient instance\n   * @return {CanvasPattern} a pattern to use as fill/stroke style\n   */\n  _applyPatternGradientTransformText(filler: TFiller) {\n    // TODO: verify compatibility with strokeUniform\n    const width = this.width + this.strokeWidth,\n      height = this.height + this.strokeWidth,\n      pCanvas = createCanvasElementFor({\n        width,\n        height,\n      }),\n      pCtx = pCanvas.getContext('2d')!;\n    pCanvas.width = width;\n    pCanvas.height = height;\n    pCtx.beginPath();\n    pCtx.moveTo(0, 0);\n    pCtx.lineTo(width, 0);\n    pCtx.lineTo(width, height);\n    pCtx.lineTo(0, height);\n    pCtx.closePath();\n    pCtx.translate(width / 2, height / 2);\n    pCtx.fillStyle = filler.toLive(pCtx)!;\n    this._applyPatternGradientTransform(pCtx, filler);\n    pCtx.fill();\n    return pCtx.createPattern(pCanvas, 'no-repeat')!;\n  }\n\n  handleFiller<T extends 'fill' | 'stroke'>(\n    ctx: CanvasRenderingContext2D,\n    property: `${T}Style`,\n    filler: TFiller | string,\n  ): { offsetX: number; offsetY: number } {\n    let offsetX: number, offsetY: number;\n    if (isFiller(filler)) {\n      if (\n        (filler as Gradient<'linear'>).gradientUnits === 'percentage' ||\n        (filler as Gradient<'linear'>).gradientTransform ||\n        (filler as Pattern).patternTransform\n      ) {\n        // need to transform gradient in a pattern.\n        // this is a slow process. If you are hitting this codepath, and the object\n        // is not using caching, you should consider switching it on.\n        // we need a canvas as big as the current object caching canvas.\n        offsetX = -this.width / 2;\n        offsetY = -this.height / 2;\n        ctx.translate(offsetX, offsetY);\n        ctx[property] = this._applyPatternGradientTransformText(filler);\n        return { offsetX, offsetY };\n      } else {\n        // is a simple gradient or pattern\n        ctx[property] = filler.toLive(ctx)!;\n        return this._applyPatternGradientTransform(ctx, filler);\n      }\n    } else {\n      // is a color\n      ctx[property] = filler;\n    }\n    return { offsetX: 0, offsetY: 0 };\n  }\n\n  /**\n   * This function prepare the canvas for a stroke style, and stroke and strokeWidth\n   * need to be sent in as defined\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {CompleteTextStyleDeclaration} style with stroke and strokeWidth defined\n   * @returns\n   */\n  _setStrokeStyles(\n    ctx: CanvasRenderingContext2D,\n    {\n      stroke,\n      strokeWidth,\n    }: Pick<CompleteTextStyleDeclaration, 'stroke' | 'strokeWidth'>,\n  ) {\n    ctx.lineWidth = strokeWidth;\n    ctx.lineCap = this.strokeLineCap;\n    ctx.lineDashOffset = this.strokeDashOffset;\n    ctx.lineJoin = this.strokeLineJoin;\n    ctx.miterLimit = this.strokeMiterLimit;\n    return this.handleFiller(ctx, 'strokeStyle', stroke!);\n  }\n\n  /**\n   * This function prepare the canvas for a ill style, and fill\n   * need to be sent in as defined\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {CompleteTextStyleDeclaration} style with ill defined\n   * @returns\n   */\n  _setFillStyles(ctx: CanvasRenderingContext2D, { fill }: Pick<this, 'fill'>) {\n    return this.handleFiller(ctx, 'fillStyle', fill!);\n  }\n\n  /**\n   * @private\n   * @param {String} method\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @param {String} _char\n   * @param {Number} left Left coordinate\n   * @param {Number} top Top coordinate\n   * @param {Number} lineHeight Height of the line\n   */\n  _renderChar(\n    method: 'fillText' | 'strokeText',\n    ctx: CanvasRenderingContext2D,\n    lineIndex: number,\n    charIndex: number,\n    _char: string,\n    left: number,\n    top: number,\n  ) {\n    const decl = this._getStyleDeclaration(lineIndex, charIndex),\n      fullDecl = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n      shouldFill = method === 'fillText' && fullDecl.fill,\n      shouldStroke =\n        method === 'strokeText' && fullDecl.stroke && fullDecl.strokeWidth;\n\n    if (!shouldStroke && !shouldFill) {\n      return;\n    }\n    ctx.save();\n\n    ctx.font = this._getFontDeclaration(fullDecl);\n\n    if (decl.textBackgroundColor) {\n      this._removeShadow(ctx);\n    }\n    if (decl.deltaY) {\n      top += decl.deltaY;\n    }\n\n    if (shouldFill) {\n      const fillOffsets = this._setFillStyles(ctx, fullDecl);\n      ctx.fillText(\n        _char,\n        left - fillOffsets.offsetX,\n        top - fillOffsets.offsetY,\n      );\n    }\n\n    if (shouldStroke) {\n      const strokeOffsets = this._setStrokeStyles(ctx, fullDecl);\n      ctx.strokeText(\n        _char,\n        left - strokeOffsets.offsetX,\n        top - strokeOffsets.offsetY,\n      );\n    }\n\n    ctx.restore();\n  }\n\n  /**\n   * Turns the character into a 'superior figure' (i.e. 'superscript')\n   * @param {Number} start selection start\n   * @param {Number} end selection end\n   */\n  setSuperscript(start: number, end: number) {\n    this._setScript(start, end, this.superscript);\n  }\n\n  /**\n   * Turns the character into an 'inferior figure' (i.e. 'subscript')\n   * @param {Number} start selection start\n   * @param {Number} end selection end\n   */\n  setSubscript(start: number, end: number) {\n    this._setScript(start, end, this.subscript);\n  }\n\n  /**\n   * Applies 'schema' at given position\n   * @private\n   * @param {Number} start selection start\n   * @param {Number} end selection end\n   * @param {Number} schema\n   */\n  protected _setScript(\n    start: number,\n    end: number,\n    schema: {\n      size: number;\n      baseline: number;\n    },\n  ) {\n    const loc = this.get2DCursorLocation(start, true),\n      fontSize = this.getValueOfPropertyAt(\n        loc.lineIndex,\n        loc.charIndex,\n        'fontSize',\n      ),\n      dy = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'deltaY'),\n      style = {\n        fontSize: fontSize * schema.size,\n        deltaY: dy + fontSize * schema.baseline,\n      };\n    this.setSelectionStyles(style, start, end);\n  }\n\n  /**\n   * @private\n   * @param {Number} lineIndex index text line\n   * @return {Number} Line left offset\n   */\n  _getLineLeftOffset(lineIndex: number): number {\n    const lineWidth = this.getLineWidth(lineIndex),\n      lineDiff = this.width - lineWidth,\n      textAlign = this.textAlign,\n      direction = this.direction,\n      isEndOfWrapping = this.isEndOfWrapping(lineIndex);\n    let leftOffset = 0;\n    if (\n      textAlign === JUSTIFY ||\n      (textAlign === JUSTIFY_CENTER && !isEndOfWrapping) ||\n      (textAlign === JUSTIFY_RIGHT && !isEndOfWrapping) ||\n      (textAlign === JUSTIFY_LEFT && !isEndOfWrapping)\n    ) {\n      return 0;\n    }\n    if (textAlign === CENTER) {\n      leftOffset = lineDiff / 2;\n    }\n    if (textAlign === RIGHT) {\n      leftOffset = lineDiff;\n    }\n    if (textAlign === JUSTIFY_CENTER) {\n      leftOffset = lineDiff / 2;\n    }\n    if (textAlign === JUSTIFY_RIGHT) {\n      leftOffset = lineDiff;\n    }\n    if (direction === 'rtl') {\n      if (\n        textAlign === RIGHT ||\n        textAlign === JUSTIFY ||\n        textAlign === JUSTIFY_RIGHT\n      ) {\n        leftOffset = 0;\n      } else if (textAlign === LEFT || textAlign === JUSTIFY_LEFT) {\n        leftOffset = -lineDiff;\n      } else if (textAlign === CENTER || textAlign === JUSTIFY_CENTER) {\n        leftOffset = -lineDiff / 2;\n      }\n    }\n    return leftOffset;\n  }\n\n  /**\n   * @private\n   */\n  _clearCache() {\n    this._forceClearCache = false;\n    this.__lineWidths = [];\n    this.__lineHeights = [];\n    this.__charBounds = [];\n  }\n\n  /**\n   * Measure a single line given its index. Used to calculate the initial\n   * text bounding box. The values are calculated and stored in __lineWidths cache.\n   * @private\n   * @param {Number} lineIndex line number\n   * @return {Number} Line width\n   */\n  getLineWidth(lineIndex: number): number {\n    if (this.__lineWidths[lineIndex] !== undefined) {\n      return this.__lineWidths[lineIndex];\n    }\n\n    const { width } = this.measureLine(lineIndex);\n    this.__lineWidths[lineIndex] = width;\n    return width;\n  }\n\n  _getWidthOfCharSpacing() {\n    if (this.charSpacing !== 0) {\n      return (this.fontSize * this.charSpacing) / 1000;\n    }\n    return 0;\n  }\n\n  /**\n   * Retrieves the value of property at given character position\n   * @param {Number} lineIndex the line number\n   * @param {Number} charIndex the character number\n   * @param {String} property the property name\n   * @returns the value of 'property'\n   */\n  getValueOfPropertyAt<T extends StylePropertiesType>(\n    lineIndex: number,\n    charIndex: number,\n    property: T,\n  ): this[T] {\n    const charStyle = this._getStyleDeclaration(lineIndex, charIndex);\n    return (charStyle[property] ?? this[property]) as this[T];\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderTextDecoration(\n    ctx: CanvasRenderingContext2D,\n    type: 'underline' | 'linethrough' | 'overline',\n  ) {\n    if (!this[type] && !this.styleHas(type)) {\n      return;\n    }\n    let topOffset = this._getTopOffset();\n    const leftOffset = this._getLeftOffset(),\n      path = this.path,\n      charSpacing = this._getWidthOfCharSpacing(),\n      offsetY = this.offsets[type];\n\n    for (let i = 0, len = this._textLines.length; i < len; i++) {\n      const heightOfLine = this.getHeightOfLine(i);\n      if (!this[type] && !this.styleHas(type, i)) {\n        topOffset += heightOfLine;\n        continue;\n      }\n      const line = this._textLines[i];\n      const maxHeight = heightOfLine / this.lineHeight;\n      const lineLeftOffset = this._getLineLeftOffset(i);\n      let boxStart = 0;\n      let boxWidth = 0;\n      let lastDecoration = this.getValueOfPropertyAt(i, 0, type);\n      let lastFill = this.getValueOfPropertyAt(i, 0, FILL);\n      let currentDecoration;\n      let currentFill;\n      const top = topOffset + maxHeight * (1 - this._fontSizeFraction);\n      let size = this.getHeightOfChar(i, 0);\n      let dy = this.getValueOfPropertyAt(i, 0, 'deltaY');\n      for (let j = 0, jlen = line.length; j < jlen; j++) {\n        const charBox = this.__charBounds[i][j] as Required<GraphemeBBox>;\n        currentDecoration = this.getValueOfPropertyAt(i, j, type);\n        currentFill = this.getValueOfPropertyAt(i, j, FILL);\n        const currentSize = this.getHeightOfChar(i, j);\n        const currentDy = this.getValueOfPropertyAt(i, j, 'deltaY');\n        if (path && currentDecoration && currentFill) {\n          ctx.save();\n          // bug? verify lastFill is a valid fill here.\n          ctx.fillStyle = lastFill as string;\n          ctx.translate(charBox.renderLeft, charBox.renderTop);\n          ctx.rotate(charBox.angle);\n          ctx.fillRect(\n            -charBox.kernedWidth / 2,\n            offsetY * currentSize + currentDy,\n            charBox.kernedWidth,\n            this.fontSize / 15,\n          );\n          ctx.restore();\n        } else if (\n          (currentDecoration !== lastDecoration ||\n            currentFill !== lastFill ||\n            currentSize !== size ||\n            currentDy !== dy) &&\n          boxWidth > 0\n        ) {\n          let drawStart = leftOffset + lineLeftOffset + boxStart;\n          if (this.direction === 'rtl') {\n            drawStart = this.width - drawStart - boxWidth;\n          }\n          if (lastDecoration && lastFill) {\n            // bug? verify lastFill is a valid fill here.\n            ctx.fillStyle = lastFill as string;\n            ctx.fillRect(\n              drawStart,\n              top + offsetY * size + dy,\n              boxWidth,\n              this.fontSize / 15,\n            );\n          }\n          boxStart = charBox.left;\n          boxWidth = charBox.width;\n          lastDecoration = currentDecoration;\n          lastFill = currentFill;\n          size = currentSize;\n          dy = currentDy;\n        } else {\n          boxWidth += charBox.kernedWidth;\n        }\n      }\n      let drawStart = leftOffset + lineLeftOffset + boxStart;\n      if (this.direction === 'rtl') {\n        drawStart = this.width - drawStart - boxWidth;\n      }\n      ctx.fillStyle = currentFill as string;\n      currentDecoration &&\n        currentFill &&\n        ctx.fillRect(\n          drawStart,\n          top + offsetY * size + dy,\n          boxWidth - charSpacing,\n          this.fontSize / 15,\n        );\n      topOffset += heightOfLine;\n    }\n    // if there is text background color no\n    // other shadows should be casted\n    this._removeShadow(ctx);\n  }\n\n  /**\n   * return font declaration string for canvas context\n   * @param {Object} [styleObject] object\n   * @returns {String} font declaration formatted for canvas context.\n   */\n  _getFontDeclaration(\n    {\n      fontFamily = this.fontFamily,\n      fontStyle = this.fontStyle,\n      fontWeight = this.fontWeight,\n      fontSize = this.fontSize,\n    }: Partial<\n      Pick<\n        TextStyleDeclaration,\n        'fontFamily' | 'fontStyle' | 'fontWeight' | 'fontSize'\n      >\n    > = {},\n    forMeasuring?: boolean,\n  ): string {\n    const parsedFontFamily =\n      fontFamily.includes(\"'\") ||\n      fontFamily.includes('\"') ||\n      fontFamily.includes(',') ||\n      FabricText.genericFonts.includes(fontFamily.toLowerCase())\n        ? fontFamily\n        : `\"${fontFamily}\"`;\n    return [\n      fontStyle,\n      fontWeight,\n      `${forMeasuring ? this.CACHE_FONT_SIZE : fontSize}px`,\n      parsedFontFamily,\n    ].join(' ');\n  }\n\n  /**\n   * Renders text instance on a specified context\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  render(ctx: CanvasRenderingContext2D) {\n    if (!this.visible) {\n      return;\n    }\n    if (\n      this.canvas &&\n      this.canvas.skipOffscreen &&\n      !this.group &&\n      !this.isOnScreen()\n    ) {\n      return;\n    }\n    if (this._forceClearCache) {\n      this.initDimensions();\n    }\n    super.render(ctx);\n  }\n\n  /**\n   * Override this method to customize grapheme splitting\n   * @todo the util `graphemeSplit` needs to be injectable in some way.\n   * is more comfortable to inject the correct util rather than having to override text\n   * in the middle of the prototype chain\n   * @param {string} value\n   * @returns {string[]} array of graphemes\n   */\n  graphemeSplit(value: string): string[] {\n    return graphemeSplit(value);\n  }\n\n  /**\n   * Returns the text as an array of lines.\n   * @param {String} text text to split\n   * @returns  Lines in the text\n   */\n  _splitTextIntoLines(text: string): TextLinesInfo {\n    const lines = text.split(this._reNewline),\n      newLines = new Array<string[]>(lines.length),\n      newLine = ['\\n'];\n    let newText: string[] = [];\n    for (let i = 0; i < lines.length; i++) {\n      newLines[i] = this.graphemeSplit(lines[i]);\n      newText = newText.concat(newLines[i], newLine);\n    }\n    newText.pop();\n    return {\n      _unwrappedLines: newLines,\n      lines: lines,\n      graphemeText: newText,\n      graphemeLines: newLines,\n    };\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} Object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return {\n      ...super.toObject([...additionalProps, ...propertiesToInclude] as K[]),\n      styles: stylesToArray(this.styles, this.text),\n      ...(this.path ? { path: this.path.toObject() } : {}),\n    };\n  }\n\n  set(key: string | any, value?: any) {\n    const { textLayoutProperties } = this.constructor as typeof FabricText;\n    super.set(key, value);\n    let needsDims = false;\n    let isAddingPath = false;\n    if (typeof key === 'object') {\n      for (const _key in key) {\n        if (_key === 'path') {\n          this.setPathInfo();\n        }\n        needsDims = needsDims || textLayoutProperties.includes(_key);\n        isAddingPath = isAddingPath || _key === 'path';\n      }\n    } else {\n      needsDims = textLayoutProperties.includes(key);\n      isAddingPath = key === 'path';\n    }\n    if (isAddingPath) {\n      this.setPathInfo();\n    }\n    if (needsDims && this.initialized) {\n      this.initDimensions();\n      this.setCoords();\n    }\n    return this;\n  }\n\n  /**\n   * Returns complexity of an instance\n   * @return {Number} complexity\n   */\n  complexity(): number {\n    return 1;\n  }\n\n  /**\n   * List of generic font families\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/font-family#generic-name\n   */\n  static genericFonts = [\n    'serif',\n    'sans-serif',\n    'monospace',\n    'cursive',\n    'fantasy',\n    'system-ui',\n    'ui-serif',\n    'ui-sans-serif',\n    'ui-monospace',\n    'ui-rounded',\n    'math',\n    'emoji',\n    'fangsong',\n  ];\n\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link FabricText.fromElement})\n   * @static\n   * @memberOf Text\n   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\n   */\n  static ATTRIBUTE_NAMES = SHARED_ATTRIBUTES.concat(\n    'x',\n    'y',\n    'dx',\n    'dy',\n    'font-family',\n    'font-style',\n    'font-weight',\n    'font-size',\n    'letter-spacing',\n    'text-decoration',\n    'text-anchor',\n  );\n\n  /**\n   * Returns FabricText instance from an SVG element (<b>not yet implemented</b>)\n   * @static\n   * @memberOf Text\n   * @param {HTMLElement} element Element to parse\n   * @param {Object} [options] Options object\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable,\n    cssRules?: CSSRules,\n  ) {\n    const parsedAttributes = parseAttributes(\n      element,\n      FabricText.ATTRIBUTE_NAMES,\n      cssRules,\n    );\n\n    const {\n      textAnchor = LEFT as typeof LEFT | typeof CENTER | typeof RIGHT,\n      textDecoration = '',\n      dx = 0,\n      dy = 0,\n      top = 0,\n      left = 0,\n      fontSize = DEFAULT_SVG_FONT_SIZE,\n      strokeWidth = 1,\n      ...restOfOptions\n    } = { ...options, ...parsedAttributes };\n\n    const textContent = (element.textContent || '')\n      .replace(/^\\s+|\\s+$|\\n+/g, '')\n      .replace(/\\s+/g, ' ');\n\n    // this code here is probably the usual issue for SVG center find\n    // this can later looked at again and probably removed.\n\n    const text = new this(textContent, {\n        left: left + dx,\n        top: top + dy,\n        underline: textDecoration.includes('underline'),\n        overline: textDecoration.includes('overline'),\n        linethrough: textDecoration.includes('line-through'),\n        // we initialize this as 0\n        strokeWidth: 0,\n        fontSize,\n        ...restOfOptions,\n      }),\n      textHeightScaleFactor = text.getScaledHeight() / text.height,\n      lineHeightDiff =\n        (text.height + text.strokeWidth) * text.lineHeight - text.height,\n      scaledDiff = lineHeightDiff * textHeightScaleFactor,\n      textHeight = text.getScaledHeight() + scaledDiff;\n\n    let offX = 0;\n    /*\n      Adjust positioning:\n        x/y attributes in SVG correspond to the bottom-left corner of text bounding box\n        fabric output by default at top, left.\n    */\n    if (textAnchor === CENTER) {\n      offX = text.getScaledWidth() / 2;\n    }\n    if (textAnchor === RIGHT) {\n      offX = text.getScaledWidth();\n    }\n    text.set({\n      left: text.left - offX,\n      top:\n        text.top -\n        (textHeight - text.fontSize * (0.07 + text._fontSizeFraction)) /\n          text.lineHeight,\n      strokeWidth,\n    });\n    return text;\n  }\n\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns FabricText instance from an object representation\n   * @param {Object} object plain js Object to create an instance from\n   * @returns {Promise<FabricText>}\n   */\n  static fromObject<\n    T extends TOptions<SerializedTextProps>,\n    S extends FabricText,\n  >(object: T) {\n    return this._fromObject<S>(\n      {\n        ...object,\n        styles: stylesFromArray(object.styles || {}, object.text),\n      },\n      {\n        extraParam: 'text',\n      },\n    );\n  }\n}\n\napplyMixins(FabricText, [TextSVGExportMixin]);\nclassRegistry.setClass(FabricText);\nclassRegistry.setSVGClass(FabricText);\n","import type {\n  DragEventData,\n  DropEventData,\n  TPointerEvent,\n} from '../../EventTypeDefs';\nimport { Point } from '../../Point';\nimport type { IText } from './IText';\nimport { setStyle } from '../../util/dom_style';\nimport { cloneStyles } from '../../util/internals/cloneStyles';\nimport type { TextStyleDeclaration } from '../Text/StyledText';\nimport { getDocumentFromElement } from '../../util/dom_misc';\nimport { CHANGED, NONE } from '../../constants';\n\n/**\n * #### Dragging IText/Textbox Lifecycle\n * - {@link start} is called from `mousedown` {@link IText#_mouseDownHandler} and determines if dragging should start by testing {@link isPointerOverSelection}\n * - if true `mousedown` {@link IText#_mouseDownHandler} is blocked to keep selection\n * - if the pointer moves, canvas fires numerous mousemove {@link Canvas#_onMouseMove} that we make sure **aren't** prevented ({@link IText#shouldStartDragging}) in order for the window to start a drag session\n * - once/if the session starts canvas calls {@link onDragStart} on the active object to determine if dragging should occur\n * - canvas fires relevant drag events that are handled by the handlers defined in this scope\n * - {@link end} is called from `mouseup` {@link IText#mouseUpHandler}, blocking IText default click behavior\n * - in case the drag session didn't occur, {@link end} handles a click, since logic to do so was blocked during `mousedown`\n */\nexport class DraggableTextDelegate {\n  readonly target: IText;\n  private __mouseDownInPlace = false;\n  private __dragStartFired = false;\n  private __isDraggingOver = false;\n  private __dragStartSelection?: {\n    selectionStart: number;\n    selectionEnd: number;\n  };\n  private __dragImageDisposer?: VoidFunction;\n  private _dispose?: () => void;\n\n  constructor(target: IText) {\n    this.target = target;\n    const disposers = [\n      this.target.on('dragenter', this.dragEnterHandler.bind(this)),\n      this.target.on('dragover', this.dragOverHandler.bind(this)),\n      this.target.on('dragleave', this.dragLeaveHandler.bind(this)),\n      this.target.on('dragend', this.dragEndHandler.bind(this)),\n      this.target.on('drop', this.dropHandler.bind(this)),\n    ];\n    this._dispose = () => {\n      disposers.forEach((d) => d());\n      this._dispose = undefined;\n    };\n  }\n\n  isPointerOverSelection(e: TPointerEvent) {\n    const target = this.target;\n    const newSelection = target.getSelectionStartFromPointer(e);\n    return (\n      target.isEditing &&\n      newSelection >= target.selectionStart &&\n      newSelection <= target.selectionEnd &&\n      target.selectionStart < target.selectionEnd\n    );\n  }\n\n  /**\n   * @public override this method to disable dragging and default to mousedown logic\n   */\n  start(e: TPointerEvent) {\n    return (this.__mouseDownInPlace = this.isPointerOverSelection(e));\n  }\n\n  /**\n   * @public override this method to disable dragging without discarding selection\n   */\n  isActive() {\n    return this.__mouseDownInPlace;\n  }\n\n  /**\n   * Ends interaction and sets cursor in case of a click\n   * @returns true if was active\n   */\n  end(e: TPointerEvent) {\n    const active = this.isActive();\n    if (active && !this.__dragStartFired) {\n      // mousedown has been blocked since `active` is true => cursor has not been set.\n      // `__dragStartFired` is false => dragging didn't occur, pointer didn't move and is over selection.\n      // meaning this is actually a click, `active` is a false positive.\n      this.target.setCursorByClick(e);\n      this.target.initDelayedCursor(true);\n    }\n    this.__mouseDownInPlace = false;\n    this.__dragStartFired = false;\n    this.__isDraggingOver = false;\n    return active;\n  }\n\n  getDragStartSelection() {\n    return this.__dragStartSelection;\n  }\n\n  /**\n   * Override to customize the drag image\n   * https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/setDragImage\n   */\n  setDragImage(\n    e: DragEvent,\n    {\n      selectionStart,\n      selectionEnd,\n    }: {\n      selectionStart: number;\n      selectionEnd: number;\n    },\n  ) {\n    const target = this.target;\n    const canvas = target.canvas!;\n    const flipFactor = new Point(target.flipX ? -1 : 1, target.flipY ? -1 : 1);\n    const boundaries = target._getCursorBoundaries(selectionStart);\n    const selectionPosition = new Point(\n      boundaries.left + boundaries.leftOffset,\n      boundaries.top + boundaries.topOffset,\n    ).multiply(flipFactor);\n    const pos = selectionPosition.transform(target.calcTransformMatrix());\n    const pointer = canvas.getScenePoint(e);\n    const diff = pointer.subtract(pos);\n    const retinaScaling = target.getCanvasRetinaScaling();\n    const bbox = target.getBoundingRect();\n    const correction = pos.subtract(new Point(bbox.left, bbox.top));\n    const vpt = canvas.viewportTransform;\n    const offset = correction.add(diff).transform(vpt, true);\n    //  prepare instance for drag image snapshot by making all non selected text invisible\n    const bgc = target.backgroundColor;\n    const styles = cloneStyles(target.styles);\n    target.backgroundColor = '';\n    const styleOverride = {\n      stroke: 'transparent',\n      fill: 'transparent',\n      textBackgroundColor: 'transparent',\n    };\n    target.setSelectionStyles(styleOverride, 0, selectionStart);\n    target.setSelectionStyles(styleOverride, selectionEnd, target.text.length);\n    target.dirty = true;\n    const dragImage = target.toCanvasElement({\n      enableRetinaScaling: canvas.enableRetinaScaling,\n      viewportTransform: true,\n    });\n    // restore values\n    target.backgroundColor = bgc;\n    target.styles = styles;\n    target.dirty = true;\n    //  position drag image offscreen\n    setStyle(dragImage, {\n      position: 'fixed',\n      left: `${-dragImage.width}px`,\n      border: NONE,\n      width: `${dragImage.width / retinaScaling}px`,\n      height: `${dragImage.height / retinaScaling}px`,\n    });\n    this.__dragImageDisposer && this.__dragImageDisposer();\n    this.__dragImageDisposer = () => {\n      dragImage.remove();\n    };\n    getDocumentFromElement(\n      (e.target || this.target.hiddenTextarea)! as HTMLElement,\n    ).body.appendChild(dragImage);\n    e.dataTransfer?.setDragImage(dragImage, offset.x, offset.y);\n  }\n\n  /**\n   * @returns {boolean} determines whether {@link target} should/shouldn't become a drag source\n   */\n  onDragStart(e: DragEvent): boolean {\n    this.__dragStartFired = true;\n    const target = this.target;\n    const active = this.isActive();\n    if (active && e.dataTransfer) {\n      const selection = (this.__dragStartSelection = {\n        selectionStart: target.selectionStart,\n        selectionEnd: target.selectionEnd,\n      });\n      const value = target._text\n        .slice(selection.selectionStart, selection.selectionEnd)\n        .join('');\n      const data = { text: target.text, value, ...selection };\n      e.dataTransfer.setData('text/plain', value);\n      e.dataTransfer.setData(\n        'application/fabric',\n        JSON.stringify({\n          value: value,\n          styles: target.getSelectionStyles(\n            selection.selectionStart,\n            selection.selectionEnd,\n            true,\n          ),\n        }),\n      );\n      e.dataTransfer.effectAllowed = 'copyMove';\n      this.setDragImage(e, data);\n    }\n    target.abortCursorAnimation();\n    return active;\n  }\n\n  /**\n   * use {@link targetCanDrop} to respect overriding\n   * @returns {boolean} determines whether {@link target} should/shouldn't become a drop target\n   */\n  canDrop(e: DragEvent): boolean {\n    if (\n      this.target.editable &&\n      !this.target.getActiveControl() &&\n      !e.defaultPrevented\n    ) {\n      if (this.isActive() && this.__dragStartSelection) {\n        //  drag source trying to drop over itself\n        //  allow dropping only outside of drag start selection\n        const index = this.target.getSelectionStartFromPointer(e);\n        const dragStartSelection = this.__dragStartSelection;\n        return (\n          index < dragStartSelection.selectionStart ||\n          index > dragStartSelection.selectionEnd\n        );\n      }\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * in order to respect overriding {@link IText#canDrop} we call that instead of calling {@link canDrop} directly\n   */\n  protected targetCanDrop(e: DragEvent) {\n    return this.target.canDrop(e);\n  }\n\n  dragEnterHandler({ e }: DragEventData) {\n    const canDrop = this.targetCanDrop(e);\n    if (!this.__isDraggingOver && canDrop) {\n      this.__isDraggingOver = true;\n    }\n  }\n\n  dragOverHandler(ev: DragEventData) {\n    const { e } = ev;\n    const canDrop = this.targetCanDrop(e);\n    if (!this.__isDraggingOver && canDrop) {\n      this.__isDraggingOver = true;\n    } else if (this.__isDraggingOver && !canDrop) {\n      //  drop state has changed\n      this.__isDraggingOver = false;\n    }\n    if (this.__isDraggingOver) {\n      //  can be dropped, inform browser\n      e.preventDefault();\n      //  inform event subscribers\n      ev.canDrop = true;\n      ev.dropTarget = this.target;\n    }\n  }\n\n  dragLeaveHandler() {\n    if (this.__isDraggingOver || this.isActive()) {\n      this.__isDraggingOver = false;\n    }\n  }\n\n  /**\n   * Override the `text/plain | application/fabric` types of {@link DragEvent#dataTransfer}\n   * in order to change the drop value or to customize styling respectively, by listening to the `drop:before` event\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#performing_a_drop\n   */\n  dropHandler(ev: DropEventData) {\n    const { e } = ev;\n    const didDrop = e.defaultPrevented;\n    this.__isDraggingOver = false;\n    // inform browser that the drop has been accepted\n    e.preventDefault();\n    let insert = e.dataTransfer?.getData('text/plain');\n    if (insert && !didDrop) {\n      const target = this.target;\n      const canvas = target.canvas!;\n      let insertAt = target.getSelectionStartFromPointer(e);\n      const { styles } = (\n        e.dataTransfer!.types.includes('application/fabric')\n          ? JSON.parse(e.dataTransfer!.getData('application/fabric'))\n          : {}\n      ) as { styles: TextStyleDeclaration[] };\n      const trailing = insert[Math.max(0, insert.length - 1)];\n      const selectionStartOffset = 0;\n      //  drag and drop in same instance\n      if (this.__dragStartSelection) {\n        const selectionStart = this.__dragStartSelection.selectionStart;\n        const selectionEnd = this.__dragStartSelection.selectionEnd;\n        if (insertAt > selectionStart && insertAt <= selectionEnd) {\n          insertAt = selectionStart;\n        } else if (insertAt > selectionEnd) {\n          insertAt -= selectionEnd - selectionStart;\n        }\n        target.removeChars(selectionStart, selectionEnd);\n        // prevent `dragend` from handling event\n        delete this.__dragStartSelection;\n      }\n      //  remove redundant line break\n      if (\n        target._reNewline.test(trailing) &&\n        (target._reNewline.test(target._text[insertAt]) ||\n          insertAt === target._text.length)\n      ) {\n        insert = insert.trimEnd();\n      }\n      //  inform subscribers\n      ev.didDrop = true;\n      ev.dropTarget = target;\n      //  finalize\n      target.insertChars(insert, styles, insertAt);\n      // can this part be moved in an outside event? andrea to check.\n      canvas.setActiveObject(target);\n      target.enterEditing(e);\n      target.selectionStart = Math.min(\n        insertAt + selectionStartOffset,\n        target._text.length,\n      );\n      target.selectionEnd = Math.min(\n        target.selectionStart + insert.length,\n        target._text.length,\n      );\n      target.hiddenTextarea!.value = target.text;\n      target._updateTextarea();\n      target.hiddenTextarea!.focus();\n      target.fire(CHANGED, {\n        index: insertAt + selectionStartOffset,\n        action: 'drop',\n      });\n      canvas.fire('text:changed', { target });\n      canvas.contextTopDirty = true;\n      canvas.requestRenderAll();\n    }\n  }\n\n  /**\n   * fired only on the drag source after drop (if occurred)\n   * handle changes to the drag source in case of a drop on another object or a cancellation\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#finishing_a_drag\n   */\n  dragEndHandler({ e }: DragEventData) {\n    if (this.isActive() && this.__dragStartFired) {\n      //  once the drop event finishes we check if we need to change the drag source\n      //  if the drag source received the drop we bail out since the drop handler has already handled logic\n      if (this.__dragStartSelection) {\n        const target = this.target;\n        const canvas = this.target.canvas!;\n        const { selectionStart, selectionEnd } = this.__dragStartSelection;\n        const dropEffect = e.dataTransfer?.dropEffect || NONE;\n        if (dropEffect === NONE) {\n          // pointer is back over selection\n          target.selectionStart = selectionStart;\n          target.selectionEnd = selectionEnd;\n          target._updateTextarea();\n          target.hiddenTextarea!.focus();\n        } else {\n          target.clearContextTop();\n          if (dropEffect === 'move') {\n            target.removeChars(selectionStart, selectionEnd);\n            target.selectionStart = target.selectionEnd = selectionStart;\n            target.hiddenTextarea &&\n              (target.hiddenTextarea.value = target.text);\n            target._updateTextarea();\n            target.fire(CHANGED, {\n              index: selectionStart,\n              action: 'dragend',\n            });\n            canvas.fire('text:changed', { target });\n            canvas.requestRenderAll();\n          }\n          target.exitEditing();\n        }\n      }\n    }\n\n    this.__dragImageDisposer && this.__dragImageDisposer();\n    delete this.__dragImageDisposer;\n    delete this.__dragStartSelection;\n    this.__isDraggingOver = false;\n  }\n\n  dispose() {\n    this._dispose && this._dispose();\n  }\n}\n","import type {\n  ObjectEvents,\n  TPointerEvent,\n  TPointerEventInfo,\n} from '../../EventTypeDefs';\nimport { Point } from '../../Point';\nimport type { FabricObject } from '../Object/FabricObject';\nimport { FabricText } from '../Text/Text';\nimport { animate } from '../../util/animation/animate';\nimport type { TOnAnimationChangeCallback } from '../../util/animation/types';\nimport type { ValueAnimation } from '../../util/animation/ValueAnimation';\nimport type { TextStyleDeclaration } from '../Text/StyledText';\nimport type { SerializedTextProps, TextProps } from '../Text/Text';\nimport type { TOptions } from '../../typedefs';\nimport { getDocumentFromElement } from '../../util/dom_misc';\nimport { LEFT, MODIFIED, RIGHT, reNewline } from '../../constants';\nimport type { IText } from './IText';\n\n/**\n *  extend this regex to support non english languages\n *\n *  - ` `      Matches a SPACE character (char code 32).\n *  - `\\n`     Matches a LINE FEED character (char code 10).\n *  - `\\.`     Matches a \".\" character (char code 46).\n *  - `,`      Matches a \",\" character (char code 44).\n *  - `;`      Matches a \";\" character (char code 59).\n *  - `!`      Matches a \"!\" character (char code 33).\n *  - `\\?`     Matches a \"?\" character (char code 63).\n *  - `\\-`     Matches a \"-\" character (char code 45).\n */\n// eslint-disable-next-line no-useless-escape\nconst reNonWord = /[ \\n\\.,;!\\?\\-]/;\n\nexport type ITextEvents = ObjectEvents & {\n  'selection:changed': never;\n  changed: never | { index: number; action: string };\n  tripleclick: TPointerEventInfo;\n  'editing:entered': never | { e: TPointerEvent };\n  'editing:exited': never;\n};\n\nexport abstract class ITextBehavior<\n  Props extends TOptions<TextProps> = Partial<TextProps>,\n  SProps extends SerializedTextProps = SerializedTextProps,\n  EventSpec extends ITextEvents = ITextEvents,\n> extends FabricText<Props, SProps, EventSpec> {\n  declare abstract isEditing: boolean;\n  declare abstract cursorDelay: number;\n  declare abstract selectionStart: number;\n  declare abstract selectionEnd: number;\n  declare abstract cursorDuration: number;\n  declare abstract editable: boolean;\n  declare abstract editingBorderColor: string;\n\n  declare abstract compositionStart: number;\n  declare abstract compositionEnd: number;\n\n  declare abstract hiddenTextarea: HTMLTextAreaElement | null;\n\n  /**\n   * Helps determining when the text is in composition, so that the cursor\n   * rendering is altered.\n   */\n  protected declare inCompositionMode: boolean;\n\n  protected declare _reSpace: RegExp;\n  private declare _currentTickState?: ValueAnimation;\n  private declare _currentTickCompleteState?: ValueAnimation;\n  protected _currentCursorOpacity = 1;\n  private declare _textBeforeEdit: string;\n  protected declare __selectionStartOnMouseDown: number;\n\n  protected declare selected: boolean;\n  protected declare cursorOffsetCache: { left?: number; top?: number };\n  protected declare _savedProps?: {\n    hasControls: boolean;\n    borderColor: string;\n    lockMovementX: boolean;\n    lockMovementY: boolean;\n    selectable: boolean;\n    hoverCursor: CSSStyleDeclaration['cursor'] | null;\n    defaultCursor?: CSSStyleDeclaration['cursor'];\n    moveCursor?: CSSStyleDeclaration['cursor'];\n  };\n  protected declare _selectionDirection: 'left' | 'right' | null;\n\n  abstract initHiddenTextarea(): void;\n  abstract _fireSelectionChanged(): void;\n  abstract renderCursorOrSelection(): void;\n  abstract getSelectionStartFromPointer(e: TPointerEvent): number;\n  abstract _getCursorBoundaries(\n    index: number,\n    skipCaching?: boolean,\n  ): {\n    left: number;\n    top: number;\n    leftOffset: number;\n    topOffset: number;\n  };\n\n  /**\n   * Initializes all the interactive behavior of IText\n   */\n  initBehavior() {\n    this._tick = this._tick.bind(this);\n    this._onTickComplete = this._onTickComplete.bind(this);\n    this.updateSelectionOnMouseMove =\n      this.updateSelectionOnMouseMove.bind(this);\n  }\n\n  onDeselect(options?: { e?: TPointerEvent; object?: FabricObject }) {\n    this.isEditing && this.exitEditing();\n    this.selected = false;\n    return super.onDeselect(options);\n  }\n\n  /**\n   * @private\n   */\n  _animateCursor({\n    toValue,\n    duration,\n    delay,\n    onComplete,\n  }: {\n    toValue: number;\n    duration: number;\n    delay?: number;\n    onComplete?: TOnAnimationChangeCallback<number, void>;\n  }) {\n    return animate({\n      startValue: this._currentCursorOpacity,\n      endValue: toValue,\n      duration,\n      delay,\n      onComplete,\n      abort: () =>\n        !this.canvas ||\n        // we do not want to animate a selection, only cursor\n        this.selectionStart !== this.selectionEnd,\n      onChange: (value) => {\n        this._currentCursorOpacity = value;\n        this.renderCursorOrSelection();\n      },\n    });\n  }\n\n  /**\n   * changes the cursor from visible to invisible\n   */\n  private _tick(delay?: number) {\n    this._currentTickState = this._animateCursor({\n      toValue: 0,\n      duration: this.cursorDuration / 2,\n      delay: Math.max(delay || 0, 100),\n      onComplete: this._onTickComplete,\n    });\n  }\n\n  /**\n   * Changes the cursor from invisible to visible\n   */\n  private _onTickComplete() {\n    this._currentTickCompleteState?.abort();\n    this._currentTickCompleteState = this._animateCursor({\n      toValue: 1,\n      duration: this.cursorDuration,\n      onComplete: this._tick,\n    });\n  }\n\n  /**\n   * Initializes delayed cursor\n   */\n  initDelayedCursor(restart?: boolean) {\n    this.abortCursorAnimation();\n    this._tick(restart ? 0 : this.cursorDelay);\n  }\n\n  /**\n   * Aborts cursor animation, clears all timeouts and clear textarea context if necessary\n   */\n  abortCursorAnimation() {\n    let shouldClear = false;\n    [this._currentTickState, this._currentTickCompleteState].forEach(\n      (cursorAnimation) => {\n        if (cursorAnimation && !cursorAnimation.isDone()) {\n          shouldClear = true;\n          cursorAnimation.abort();\n        }\n      },\n    );\n\n    this._currentCursorOpacity = 1;\n\n    //  make sure we clear context even if instance is not editing\n    if (shouldClear) {\n      this.clearContextTop();\n    }\n  }\n\n  /**\n   * Restart tue cursor animation if either is in complete state ( between animations )\n   * or if it never started before\n   */\n  restartCursorIfNeeded() {\n    if (\n      [this._currentTickState, this._currentTickCompleteState].some(\n        (cursorAnimation) => !cursorAnimation || cursorAnimation.isDone(),\n      )\n    ) {\n      this.initDelayedCursor();\n    }\n  }\n\n  /**\n   * Selects entire text\n   */\n  selectAll() {\n    this.selectionStart = 0;\n    this.selectionEnd = this._text.length;\n    this._fireSelectionChanged();\n    this._updateTextarea();\n    return this;\n  }\n\n  /**\n   * Returns selected text\n   * @return {String}\n   */\n  getSelectedText(): string {\n    return this._text.slice(this.selectionStart, this.selectionEnd).join('');\n  }\n\n  /**\n   * Find new selection index representing start of current word according to current selection index\n   * @param {Number} startFrom Current selection index\n   * @return {Number} New selection index\n   */\n  findWordBoundaryLeft(startFrom: number): number {\n    let offset = 0,\n      index = startFrom - 1;\n\n    // remove space before cursor first\n    if (this._reSpace.test(this._text[index])) {\n      while (this._reSpace.test(this._text[index])) {\n        offset++;\n        index--;\n      }\n    }\n    while (/\\S/.test(this._text[index]) && index > -1) {\n      offset++;\n      index--;\n    }\n\n    return startFrom - offset;\n  }\n\n  /**\n   * Find new selection index representing end of current word according to current selection index\n   * @param {Number} startFrom Current selection index\n   * @return {Number} New selection index\n   */\n  findWordBoundaryRight(startFrom: number): number {\n    let offset = 0,\n      index = startFrom;\n\n    // remove space after cursor first\n    if (this._reSpace.test(this._text[index])) {\n      while (this._reSpace.test(this._text[index])) {\n        offset++;\n        index++;\n      }\n    }\n    while (/\\S/.test(this._text[index]) && index < this._text.length) {\n      offset++;\n      index++;\n    }\n\n    return startFrom + offset;\n  }\n\n  /**\n   * Find new selection index representing start of current line according to current selection index\n   * @param {Number} startFrom Current selection index\n   * @return {Number} New selection index\n   */\n  findLineBoundaryLeft(startFrom: number): number {\n    let offset = 0,\n      index = startFrom - 1;\n\n    while (!/\\n/.test(this._text[index]) && index > -1) {\n      offset++;\n      index--;\n    }\n\n    return startFrom - offset;\n  }\n\n  /**\n   * Find new selection index representing end of current line according to current selection index\n   * @param {Number} startFrom Current selection index\n   * @return {Number} New selection index\n   */\n  findLineBoundaryRight(startFrom: number): number {\n    let offset = 0,\n      index = startFrom;\n\n    while (!/\\n/.test(this._text[index]) && index < this._text.length) {\n      offset++;\n      index++;\n    }\n\n    return startFrom + offset;\n  }\n\n  /**\n   * Finds index corresponding to beginning or end of a word\n   * @param {Number} selectionStart Index of a character\n   * @param {Number} direction 1 or -1\n   * @return {Number} Index of the beginning or end of a word\n   */\n  searchWordBoundary(selectionStart: number, direction: 1 | -1): number {\n    const text = this._text;\n    // if we land on a space we move the cursor backwards\n    // if we are searching boundary end we move the cursor backwards ONLY if we don't land on a line break\n    let index =\n        selectionStart > 0 &&\n        this._reSpace.test(text[selectionStart]) &&\n        (direction === -1 || !reNewline.test(text[selectionStart - 1]))\n          ? selectionStart - 1\n          : selectionStart,\n      _char = text[index];\n    while (index > 0 && index < text.length && !reNonWord.test(_char)) {\n      index += direction;\n      _char = text[index];\n    }\n    if (direction === -1 && reNonWord.test(_char)) {\n      index++;\n    }\n    return index;\n  }\n\n  /**\n   * TODO fix: selectionStart set as 0 will be ignored?\n   * Selects a word based on the index\n   * @param {Number} selectionStart Index of a character\n   */\n  selectWord(selectionStart?: number) {\n    selectionStart = selectionStart || this.selectionStart;\n    // search backwards\n    const newSelectionStart = this.searchWordBoundary(selectionStart, -1),\n      // search forward\n      newSelectionEnd = Math.max(\n        newSelectionStart,\n        this.searchWordBoundary(selectionStart, 1),\n      );\n\n    this.selectionStart = newSelectionStart;\n    this.selectionEnd = newSelectionEnd;\n    this._fireSelectionChanged();\n    this._updateTextarea();\n    this.renderCursorOrSelection();\n  }\n\n  /**\n   * TODO fix: selectionStart set as 0 will be ignored?\n   * Selects a line based on the index\n   * @param {Number} selectionStart Index of a character\n   */\n  selectLine(selectionStart?: number) {\n    selectionStart = selectionStart || this.selectionStart;\n    const newSelectionStart = this.findLineBoundaryLeft(selectionStart),\n      newSelectionEnd = this.findLineBoundaryRight(selectionStart);\n\n    this.selectionStart = newSelectionStart;\n    this.selectionEnd = newSelectionEnd;\n    this._fireSelectionChanged();\n    this._updateTextarea();\n    return this;\n  }\n\n  /**\n   * Enters editing state\n   */\n  enterEditing(e?: TPointerEvent) {\n    if (this.isEditing || !this.editable) {\n      return;\n    }\n    this.enterEditingImpl();\n    this.fire('editing:entered', e ? { e } : undefined);\n    this._fireSelectionChanged();\n    if (this.canvas) {\n      this.canvas.fire('text:editing:entered', {\n        target: this as unknown as IText,\n        e,\n      });\n      this.canvas.requestRenderAll();\n    }\n  }\n\n  /**\n   * runs the actual logic that enter from editing state, see {@link enterEditing}\n   */\n  enterEditingImpl() {\n    if (this.canvas) {\n      this.canvas.calcOffset();\n      this.canvas.textEditingManager.exitTextEditing();\n    }\n\n    this.isEditing = true;\n\n    this.initHiddenTextarea();\n    this.hiddenTextarea!.focus();\n    this.hiddenTextarea!.value = this.text;\n    this._updateTextarea();\n    this._saveEditingProps();\n    this._setEditingProps();\n    this._textBeforeEdit = this.text;\n\n    this._tick();\n  }\n\n  /**\n   * called by {@link Canvas#textEditingManager}\n   */\n  updateSelectionOnMouseMove(e: TPointerEvent) {\n    if (this.getActiveControl()) {\n      return;\n    }\n\n    const el = this.hiddenTextarea!;\n    // regain focus\n    getDocumentFromElement(el).activeElement !== el && el.focus();\n\n    const newSelectionStart = this.getSelectionStartFromPointer(e),\n      currentStart = this.selectionStart,\n      currentEnd = this.selectionEnd;\n    if (\n      (newSelectionStart !== this.__selectionStartOnMouseDown ||\n        currentStart === currentEnd) &&\n      (currentStart === newSelectionStart || currentEnd === newSelectionStart)\n    ) {\n      return;\n    }\n    if (newSelectionStart > this.__selectionStartOnMouseDown) {\n      this.selectionStart = this.__selectionStartOnMouseDown;\n      this.selectionEnd = newSelectionStart;\n    } else {\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = this.__selectionStartOnMouseDown;\n    }\n    if (\n      this.selectionStart !== currentStart ||\n      this.selectionEnd !== currentEnd\n    ) {\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      this.renderCursorOrSelection();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _setEditingProps() {\n    this.hoverCursor = 'text';\n\n    if (this.canvas) {\n      this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\n    }\n\n    this.borderColor = this.editingBorderColor;\n    this.hasControls = this.selectable = false;\n    this.lockMovementX = this.lockMovementY = true;\n  }\n\n  /**\n   * convert from textarea to grapheme indexes\n   */\n  fromStringToGraphemeSelection(start: number, end: number, text: string) {\n    const smallerTextStart = text.slice(0, start),\n      graphemeStart = this.graphemeSplit(smallerTextStart).length;\n    if (start === end) {\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n    }\n    const smallerTextEnd = text.slice(start, end),\n      graphemeEnd = this.graphemeSplit(smallerTextEnd).length;\n    return {\n      selectionStart: graphemeStart,\n      selectionEnd: graphemeStart + graphemeEnd,\n    };\n  }\n\n  /**\n   * convert from fabric to textarea values\n   */\n  fromGraphemeToStringSelection(\n    start: number,\n    end: number,\n    graphemes: string[],\n  ) {\n    const smallerTextStart = graphemes.slice(0, start),\n      graphemeStart = smallerTextStart.join('').length;\n    if (start === end) {\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n    }\n    const smallerTextEnd = graphemes.slice(start, end),\n      graphemeEnd = smallerTextEnd.join('').length;\n    return {\n      selectionStart: graphemeStart,\n      selectionEnd: graphemeStart + graphemeEnd,\n    };\n  }\n\n  /**\n   * @private\n   */\n  _updateTextarea() {\n    this.cursorOffsetCache = {};\n    if (!this.hiddenTextarea) {\n      return;\n    }\n    if (!this.inCompositionMode) {\n      const newSelection = this.fromGraphemeToStringSelection(\n        this.selectionStart,\n        this.selectionEnd,\n        this._text,\n      );\n      this.hiddenTextarea.selectionStart = newSelection.selectionStart;\n      this.hiddenTextarea.selectionEnd = newSelection.selectionEnd;\n    }\n    this.updateTextareaPosition();\n  }\n\n  /**\n   * @private\n   */\n  updateFromTextArea() {\n    if (!this.hiddenTextarea) {\n      return;\n    }\n    this.cursorOffsetCache = {};\n    const textarea = this.hiddenTextarea;\n    this.text = textarea.value;\n    this.set('dirty', true);\n    this.initDimensions();\n    this.setCoords();\n    const newSelection = this.fromStringToGraphemeSelection(\n      textarea.selectionStart,\n      textarea.selectionEnd,\n      textarea.value,\n    );\n    this.selectionEnd = this.selectionStart = newSelection.selectionEnd;\n    if (!this.inCompositionMode) {\n      this.selectionStart = newSelection.selectionStart;\n    }\n    this.updateTextareaPosition();\n  }\n\n  /**\n   * @private\n   */\n  updateTextareaPosition() {\n    if (this.selectionStart === this.selectionEnd) {\n      const style = this._calcTextareaPosition();\n      this.hiddenTextarea!.style.left = style.left;\n      this.hiddenTextarea!.style.top = style.top;\n    }\n  }\n\n  /**\n   * @private\n   * @return {Object} style contains style for hiddenTextarea\n   */\n  _calcTextareaPosition() {\n    if (!this.canvas) {\n      return { left: '1px', top: '1px' };\n    }\n    const desiredPosition = this.inCompositionMode\n        ? this.compositionStart\n        : this.selectionStart,\n      boundaries = this._getCursorBoundaries(desiredPosition),\n      cursorLocation = this.get2DCursorLocation(desiredPosition),\n      lineIndex = cursorLocation.lineIndex,\n      charIndex = cursorLocation.charIndex,\n      charHeight =\n        this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize') *\n        this.lineHeight,\n      leftOffset = boundaries.leftOffset,\n      retinaScaling = this.getCanvasRetinaScaling(),\n      upperCanvas = this.canvas.upperCanvasEl,\n      upperCanvasWidth = upperCanvas.width / retinaScaling,\n      upperCanvasHeight = upperCanvas.height / retinaScaling,\n      maxWidth = upperCanvasWidth - charHeight,\n      maxHeight = upperCanvasHeight - charHeight;\n\n    const p = new Point(\n      boundaries.left + leftOffset,\n      boundaries.top + boundaries.topOffset + charHeight,\n    )\n      .transform(this.calcTransformMatrix())\n      .transform(this.canvas.viewportTransform)\n      .multiply(\n        new Point(\n          upperCanvas.clientWidth / upperCanvasWidth,\n          upperCanvas.clientHeight / upperCanvasHeight,\n        ),\n      );\n\n    if (p.x < 0) {\n      p.x = 0;\n    }\n    if (p.x > maxWidth) {\n      p.x = maxWidth;\n    }\n    if (p.y < 0) {\n      p.y = 0;\n    }\n    if (p.y > maxHeight) {\n      p.y = maxHeight;\n    }\n\n    // add canvas offset on document\n    p.x += this.canvas._offset.left;\n    p.y += this.canvas._offset.top;\n\n    return {\n      left: `${p.x}px`,\n      top: `${p.y}px`,\n      fontSize: `${charHeight}px`,\n      charHeight: charHeight,\n    };\n  }\n\n  /**\n   * @private\n   */\n  _saveEditingProps() {\n    this._savedProps = {\n      hasControls: this.hasControls,\n      borderColor: this.borderColor,\n      lockMovementX: this.lockMovementX,\n      lockMovementY: this.lockMovementY,\n      hoverCursor: this.hoverCursor,\n      selectable: this.selectable,\n      defaultCursor: this.canvas && this.canvas.defaultCursor,\n      moveCursor: this.canvas && this.canvas.moveCursor,\n    };\n  }\n\n  /**\n   * @private\n   */\n  _restoreEditingProps() {\n    if (!this._savedProps) {\n      return;\n    }\n\n    this.hoverCursor = this._savedProps.hoverCursor;\n    this.hasControls = this._savedProps.hasControls;\n    this.borderColor = this._savedProps.borderColor;\n    this.selectable = this._savedProps.selectable;\n    this.lockMovementX = this._savedProps.lockMovementX;\n    this.lockMovementY = this._savedProps.lockMovementY;\n\n    if (this.canvas) {\n      this.canvas.defaultCursor =\n        this._savedProps.defaultCursor || this.canvas.defaultCursor;\n      this.canvas.moveCursor =\n        this._savedProps.moveCursor || this.canvas.moveCursor;\n    }\n\n    delete this._savedProps;\n  }\n\n  /**\n   * runs the actual logic that exits from editing state, see {@link exitEditing}\n   * Please use exitEditingImpl, this function was kept to avoid breaking changes.\n   * Will be removed in fabric 7.0\n   * @deprecated use \"exitEditingImpl\"\n   */\n  protected _exitEditing() {\n    const hiddenTextarea = this.hiddenTextarea;\n    this.selected = false;\n    this.isEditing = false;\n\n    if (hiddenTextarea) {\n      hiddenTextarea.blur && hiddenTextarea.blur();\n      hiddenTextarea.parentNode &&\n        hiddenTextarea.parentNode.removeChild(hiddenTextarea);\n    }\n    this.hiddenTextarea = null;\n    this.abortCursorAnimation();\n    this.selectionStart !== this.selectionEnd && this.clearContextTop();\n  }\n\n  /**\n   * runs the actual logic that exits from editing state, see {@link exitEditing}\n   * But it does not fire events\n   */\n  exitEditingImpl() {\n    this._exitEditing();\n    this.selectionEnd = this.selectionStart;\n    this._restoreEditingProps();\n    if (this._forceClearCache) {\n      this.initDimensions();\n      this.setCoords();\n    }\n  }\n\n  /**\n   * Exits from editing state and fires relevant events\n   */\n  exitEditing() {\n    const isTextChanged = this._textBeforeEdit !== this.text;\n    this.exitEditingImpl();\n\n    this.fire('editing:exited');\n    isTextChanged && this.fire(MODIFIED);\n    if (this.canvas) {\n      this.canvas.fire('text:editing:exited', {\n        target: this as unknown as IText,\n      });\n      // todo: evaluate add an action to this event\n      isTextChanged && this.canvas.fire('object:modified', { target: this });\n    }\n    return this;\n  }\n\n  /**\n   * @private\n   */\n  _removeExtraneousStyles() {\n    for (const prop in this.styles) {\n      if (!this._textLines[prop as unknown as number]) {\n        delete this.styles[prop];\n      }\n    }\n  }\n\n  /**\n   * remove and reflow a style block from start to end.\n   * @param {Number} start linear start position for removal (included in removal)\n   * @param {Number} end linear end position for removal ( excluded from removal )\n   */\n  removeStyleFromTo(start: number, end: number) {\n    const { lineIndex: lineStart, charIndex: charStart } =\n        this.get2DCursorLocation(start, true),\n      { lineIndex: lineEnd, charIndex: charEnd } = this.get2DCursorLocation(\n        end,\n        true,\n      );\n    if (lineStart !== lineEnd) {\n      // step1 remove the trailing of lineStart\n      if (this.styles[lineStart]) {\n        for (\n          let i = charStart;\n          i < this._unwrappedTextLines[lineStart].length;\n          i++\n        ) {\n          delete this.styles[lineStart][i];\n        }\n      }\n      // step2 move the trailing of lineEnd to lineStart if needed\n      if (this.styles[lineEnd]) {\n        for (\n          let i = charEnd;\n          i < this._unwrappedTextLines[lineEnd].length;\n          i++\n        ) {\n          const styleObj = this.styles[lineEnd][i];\n          if (styleObj) {\n            this.styles[lineStart] || (this.styles[lineStart] = {});\n            this.styles[lineStart][charStart + i - charEnd] = styleObj;\n          }\n        }\n      }\n      // step3 detects lines will be completely removed.\n      for (let i = lineStart + 1; i <= lineEnd; i++) {\n        delete this.styles[i];\n      }\n      // step4 shift remaining lines.\n      this.shiftLineStyles(lineEnd, lineStart - lineEnd);\n    } else {\n      // remove and shift left on the same line\n      if (this.styles[lineStart]) {\n        const styleObj = this.styles[lineStart];\n        const diff = charEnd - charStart;\n        for (let i = charStart; i < charEnd; i++) {\n          delete styleObj[i];\n        }\n        for (const char in this.styles[lineStart]) {\n          const numericChar = parseInt(char, 10);\n          if (numericChar >= charEnd) {\n            styleObj[numericChar - diff] = styleObj[char];\n            delete styleObj[char];\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Shifts line styles up or down\n   * @param {Number} lineIndex Index of a line\n   * @param {Number} offset Can any number?\n   */\n  shiftLineStyles(lineIndex: number, offset: number) {\n    const clonedStyles = Object.assign({}, this.styles);\n    for (const line in this.styles) {\n      const numericLine = parseInt(line, 10);\n      if (numericLine > lineIndex) {\n        this.styles[numericLine + offset] = clonedStyles[numericLine];\n        if (!clonedStyles[numericLine - offset]) {\n          delete this.styles[numericLine];\n        }\n      }\n    }\n  }\n\n  /**\n   * Handle insertion of more consecutive style lines for when one or more\n   * newlines gets added to the text. Since current style needs to be shifted\n   * first we shift the current style of the number lines needed, then we add\n   * new lines from the last to the first.\n   * @param {Number} lineIndex Index of a line\n   * @param {Number} charIndex Index of a char\n   * @param {Number} qty number of lines to add\n   * @param {Array} copiedStyle Array of objects styles\n   */\n  insertNewlineStyleObject(\n    lineIndex: number,\n    charIndex: number,\n    qty: number,\n    copiedStyle?: { [index: number]: TextStyleDeclaration },\n  ) {\n    const newLineStyles: { [index: number]: TextStyleDeclaration } = {};\n    const originalLineLength = this._unwrappedTextLines[lineIndex].length;\n    const isEndOfLine = originalLineLength === charIndex;\n\n    let someStyleIsCarryingOver = false;\n    qty || (qty = 1);\n    this.shiftLineStyles(lineIndex, qty);\n    const currentCharStyle = this.styles[lineIndex]\n      ? this.styles[lineIndex][charIndex === 0 ? charIndex : charIndex - 1]\n      : undefined;\n\n    // we clone styles of all chars\n    // after cursor onto the current line\n    for (const index in this.styles[lineIndex]) {\n      const numIndex = parseInt(index, 10);\n      if (numIndex >= charIndex) {\n        someStyleIsCarryingOver = true;\n        newLineStyles[numIndex - charIndex] = this.styles[lineIndex][index];\n        // remove lines from the previous line since they're on a new line now\n        if (!(isEndOfLine && charIndex === 0)) {\n          delete this.styles[lineIndex][index];\n        }\n      }\n    }\n    let styleCarriedOver = false;\n    if (someStyleIsCarryingOver && !isEndOfLine) {\n      // if is end of line, the extra style we copied\n      // is probably not something we want\n      this.styles[lineIndex + qty] = newLineStyles;\n      styleCarriedOver = true;\n    }\n    if (styleCarriedOver || originalLineLength > charIndex) {\n      // skip the last line of since we already prepared it.\n      // or contains text without style that we don't want to style\n      // just because it changed lines\n      qty--;\n    }\n    // for the all the lines or all the other lines\n    // we clone current char style onto the next (otherwise empty) line\n    while (qty > 0) {\n      if (copiedStyle && copiedStyle[qty - 1]) {\n        this.styles[lineIndex + qty] = {\n          0: { ...copiedStyle[qty - 1] },\n        };\n      } else if (currentCharStyle) {\n        this.styles[lineIndex + qty] = {\n          0: { ...currentCharStyle },\n        };\n      } else {\n        delete this.styles[lineIndex + qty];\n      }\n      qty--;\n    }\n    this._forceClearCache = true;\n  }\n\n  /**\n   * Inserts style object for a given line/char index\n   * @param {Number} lineIndex Index of a line\n   * @param {Number} charIndex Index of a char\n   * @param {Number} quantity number Style object to insert, if given\n   * @param {Array} copiedStyle array of style objects\n   */\n  insertCharStyleObject(\n    lineIndex: number,\n    charIndex: number,\n    quantity: number,\n    copiedStyle?: TextStyleDeclaration[],\n  ) {\n    if (!this.styles) {\n      this.styles = {};\n    }\n    const currentLineStyles = this.styles[lineIndex],\n      currentLineStylesCloned = currentLineStyles\n        ? { ...currentLineStyles }\n        : {};\n\n    quantity || (quantity = 1);\n    // shift all char styles by quantity forward\n    // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\n    for (const index in currentLineStylesCloned) {\n      const numericIndex = parseInt(index, 10);\n      if (numericIndex >= charIndex) {\n        currentLineStyles[numericIndex + quantity] =\n          currentLineStylesCloned[numericIndex];\n        // only delete the style if there was nothing moved there\n        if (!currentLineStylesCloned[numericIndex - quantity]) {\n          delete currentLineStyles[numericIndex];\n        }\n      }\n    }\n    this._forceClearCache = true;\n    if (copiedStyle) {\n      while (quantity--) {\n        if (!Object.keys(copiedStyle[quantity]).length) {\n          continue;\n        }\n        if (!this.styles[lineIndex]) {\n          this.styles[lineIndex] = {};\n        }\n        this.styles[lineIndex][charIndex + quantity] = {\n          ...copiedStyle[quantity],\n        };\n      }\n      return;\n    }\n    if (!currentLineStyles) {\n      return;\n    }\n    const newStyle = currentLineStyles[charIndex ? charIndex - 1 : 1];\n    while (newStyle && quantity--) {\n      this.styles[lineIndex][charIndex + quantity] = { ...newStyle };\n    }\n  }\n\n  /**\n   * Inserts style object(s)\n   * @param {Array} insertedText Characters at the location where style is inserted\n   * @param {Number} start cursor index for inserting style\n   * @param {Array} [copiedStyle] array of style objects to insert.\n   */\n  insertNewStyleBlock(\n    insertedText: string[],\n    start: number,\n    copiedStyle?: TextStyleDeclaration[],\n  ) {\n    const cursorLoc = this.get2DCursorLocation(start, true),\n      addedLines = [0];\n    let linesLength = 0;\n    // get an array of how many char per lines are being added.\n    for (let i = 0; i < insertedText.length; i++) {\n      if (insertedText[i] === '\\n') {\n        linesLength++;\n        addedLines[linesLength] = 0;\n      } else {\n        addedLines[linesLength]++;\n      }\n    }\n    // for the first line copy the style from the current char position.\n    if (addedLines[0] > 0) {\n      this.insertCharStyleObject(\n        cursorLoc.lineIndex,\n        cursorLoc.charIndex,\n        addedLines[0],\n        copiedStyle,\n      );\n      copiedStyle = copiedStyle && copiedStyle.slice(addedLines[0] + 1);\n    }\n    linesLength &&\n      this.insertNewlineStyleObject(\n        cursorLoc.lineIndex,\n        cursorLoc.charIndex + addedLines[0],\n        linesLength,\n      );\n    let i;\n    for (i = 1; i < linesLength; i++) {\n      if (addedLines[i] > 0) {\n        this.insertCharStyleObject(\n          cursorLoc.lineIndex + i,\n          0,\n          addedLines[i],\n          copiedStyle,\n        );\n      } else if (copiedStyle) {\n        // this test is required in order to close #6841\n        // when a pasted buffer begins with a newline then\n        // this.styles[cursorLoc.lineIndex + i] and copiedStyle[0]\n        // may be undefined for some reason\n        if (this.styles[cursorLoc.lineIndex + i] && copiedStyle[0]) {\n          this.styles[cursorLoc.lineIndex + i][0] = copiedStyle[0];\n        }\n      }\n      copiedStyle = copiedStyle && copiedStyle.slice(addedLines[i] + 1);\n    }\n    if (addedLines[i] > 0) {\n      this.insertCharStyleObject(\n        cursorLoc.lineIndex + i,\n        0,\n        addedLines[i],\n        copiedStyle,\n      );\n    }\n  }\n\n  /**\n   * Removes characters from start/end\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  removeChars(start: number, end: number = start + 1) {\n    this.removeStyleFromTo(start, end);\n    this._text.splice(start, end - start);\n    this.text = this._text.join('');\n    this.set('dirty', true);\n    this.initDimensions();\n    this.setCoords();\n    this._removeExtraneousStyles();\n  }\n\n  /**\n   * insert characters at start position, before start position.\n   * start  equal 1 it means the text get inserted between actual grapheme 0 and 1\n   * if style array is provided, it must be as the same length of text in graphemes\n   * if end is provided and is bigger than start, old text is replaced.\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {String} text text to insert\n   * @param {Array} style array of style objects\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  insertChars(\n    text: string,\n    style: TextStyleDeclaration[] | undefined,\n    start: number,\n    end: number = start,\n  ) {\n    if (end > start) {\n      this.removeStyleFromTo(start, end);\n    }\n    const graphemes = this.graphemeSplit(text);\n    this.insertNewStyleBlock(graphemes, start, style);\n    this._text = [\n      ...this._text.slice(0, start),\n      ...graphemes,\n      ...this._text.slice(end),\n    ];\n    this.text = this._text.join('');\n    this.set('dirty', true);\n    this.initDimensions();\n    this.setCoords();\n    this._removeExtraneousStyles();\n  }\n\n  /**\n   * Set the selectionStart and selectionEnd according to the new position of cursor\n   * mimic the key - mouse navigation when shift is pressed.\n   */\n  setSelectionStartEndWithShift(\n    start: number,\n    end: number,\n    newSelection: number,\n  ) {\n    if (newSelection <= start) {\n      if (end === start) {\n        this._selectionDirection = LEFT;\n      } else if (this._selectionDirection === RIGHT) {\n        this._selectionDirection = LEFT;\n        this.selectionEnd = start;\n      }\n      this.selectionStart = newSelection;\n    } else if (newSelection > start && newSelection < end) {\n      if (this._selectionDirection === RIGHT) {\n        this.selectionEnd = newSelection;\n      } else {\n        this.selectionStart = newSelection;\n      }\n    } else {\n      // newSelection is > selection start and end\n      if (end === start) {\n        this._selectionDirection = RIGHT;\n      } else if (this._selectionDirection === LEFT) {\n        this._selectionDirection = RIGHT;\n        this.selectionStart = end;\n      }\n      this.selectionEnd = newSelection;\n    }\n  }\n}\n","import { config } from '../../config';\nimport { getFabricDocument, getEnv } from '../../env';\nimport { capValue } from '../../util/misc/capValue';\nimport type { ITextEvents } from './ITextBehavior';\nimport { ITextBehavior } from './ITextBehavior';\nimport type { TKeyMapIText } from './constants';\nimport type { TOptions } from '../../typedefs';\nimport type { TextProps, SerializedTextProps } from '../Text/Text';\nimport { getDocumentFromElement } from '../../util/dom_misc';\nimport { CHANGED, LEFT, RIGHT } from '../../constants';\nimport type { IText } from './IText';\nimport type { TextStyleDeclaration } from '../Text/StyledText';\n\nexport abstract class ITextKeyBehavior<\n  Props extends TOptions<TextProps> = Partial<TextProps>,\n  SProps extends SerializedTextProps = SerializedTextProps,\n  EventSpec extends ITextEvents = ITextEvents,\n> extends ITextBehavior<Props, SProps, EventSpec> {\n  /**\n   * For functionalities on keyDown\n   * Map a special key to a function of the instance/prototype\n   * If you need different behavior for ESC or TAB or arrows, you have to change\n   * this map setting the name of a function that you build on the IText or\n   * your prototype.\n   * the map change will affect all Instances unless you need for only some text Instances\n   * in that case you have to clone this object and assign your Instance.\n   * this.keysMap = Object.assign({}, this.keysMap);\n   * The function must be in IText.prototype.myFunction And will receive event as args[0]\n   */\n  declare keysMap: TKeyMapIText;\n\n  declare keysMapRtl: TKeyMapIText;\n\n  /**\n   * For functionalities on keyUp + ctrl || cmd\n   */\n  declare ctrlKeysMapUp: TKeyMapIText;\n\n  /**\n   * For functionalities on keyDown + ctrl || cmd\n   */\n  declare ctrlKeysMapDown: TKeyMapIText;\n\n  declare hiddenTextarea: HTMLTextAreaElement | null;\n\n  /**\n   * DOM container to append the hiddenTextarea.\n   * An alternative to attaching to the document.body.\n   * Useful to reduce laggish redraw of the full document.body tree and\n   * also with modals event capturing that won't let the textarea take focus.\n   * @type HTMLElement\n   * @default\n   */\n  declare hiddenTextareaContainer?: HTMLElement | null;\n\n  private declare _clickHandlerInitialized: boolean;\n  private declare _copyDone: boolean;\n  private declare fromPaste: boolean;\n\n  /**\n   * Initializes hidden textarea (needed to bring up keyboard in iOS)\n   */\n  initHiddenTextarea() {\n    const doc =\n      (this.canvas && getDocumentFromElement(this.canvas.getElement())) ||\n      getFabricDocument();\n    const textarea = doc.createElement('textarea');\n    Object.entries({\n      autocapitalize: 'off',\n      autocorrect: 'off',\n      autocomplete: 'off',\n      spellcheck: 'false',\n      'data-fabric': 'textarea',\n      wrap: 'off',\n    }).map(([attribute, value]) => textarea.setAttribute(attribute, value));\n    const { top, left, fontSize } = this._calcTextareaPosition();\n    // line-height: 1px; was removed from the style to fix this:\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=870966\n    textarea.style.cssText = `position: absolute; top: ${top}; left: ${left}; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px; padding-top: ${fontSize};`;\n\n    (this.hiddenTextareaContainer || doc.body).appendChild(textarea);\n\n    Object.entries({\n      blur: 'blur',\n      keydown: 'onKeyDown',\n      keyup: 'onKeyUp',\n      input: 'onInput',\n      copy: 'copy',\n      cut: 'copy',\n      paste: 'paste',\n      compositionstart: 'onCompositionStart',\n      compositionupdate: 'onCompositionUpdate',\n      compositionend: 'onCompositionEnd',\n    } as Record<string, keyof this>).map(([eventName, handler]) =>\n      textarea.addEventListener(\n        eventName,\n        (this[handler] as EventListener).bind(this),\n      ),\n    );\n    this.hiddenTextarea = textarea;\n  }\n\n  /**\n   * Override this method to customize cursor behavior on textbox blur\n   */\n  blur() {\n    this.abortCursorAnimation();\n  }\n\n  /**\n   * Handles keydown event\n   * only used for arrows and combination of modifier keys.\n   * @param {KeyboardEvent} e Event object\n   */\n  onKeyDown(e: KeyboardEvent) {\n    if (!this.isEditing) {\n      return;\n    }\n    const keyMap = this.direction === 'rtl' ? this.keysMapRtl : this.keysMap;\n    if (e.keyCode in keyMap) {\n      // @ts-expect-error legacy method calling pattern\n      this[keyMap[e.keyCode]](e);\n    } else if (e.keyCode in this.ctrlKeysMapDown && (e.ctrlKey || e.metaKey)) {\n      // @ts-expect-error legacy method calling pattern\n      this[this.ctrlKeysMapDown[e.keyCode]](e);\n    } else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    if (e.keyCode >= 33 && e.keyCode <= 40) {\n      // if i press an arrow key just update selection\n      this.inCompositionMode = false;\n      this.clearContextTop();\n      this.renderCursorOrSelection();\n    } else {\n      this.canvas && this.canvas.requestRenderAll();\n    }\n  }\n\n  /**\n   * Handles keyup event\n   * We handle KeyUp because ie11 and edge have difficulties copy/pasting\n   * if a copy/cut event fired, keyup is dismissed\n   * @param {KeyboardEvent} e Event object\n   */\n  onKeyUp(e: KeyboardEvent) {\n    if (!this.isEditing || this._copyDone || this.inCompositionMode) {\n      this._copyDone = false;\n      return;\n    }\n    if (e.keyCode in this.ctrlKeysMapUp && (e.ctrlKey || e.metaKey)) {\n      // @ts-expect-error legacy method calling pattern\n      this[this.ctrlKeysMapUp[e.keyCode]](e);\n    } else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this.canvas && this.canvas.requestRenderAll();\n  }\n\n  /**\n   * Handles onInput event\n   * @param {Event} e Event object\n   */\n  onInput(this: this & { hiddenTextarea: HTMLTextAreaElement }, e: Event) {\n    const fromPaste = this.fromPaste;\n    this.fromPaste = false;\n    e && e.stopPropagation();\n    if (!this.isEditing) {\n      return;\n    }\n    const updateAndFire = () => {\n      this.updateFromTextArea();\n      this.fire(CHANGED);\n      if (this.canvas) {\n        this.canvas.fire('text:changed', { target: this as unknown as IText });\n        this.canvas.requestRenderAll();\n      }\n    };\n    if (this.hiddenTextarea.value === '') {\n      this.styles = {};\n      updateAndFire();\n      return;\n    }\n    // decisions about style changes.\n    const nextText = this._splitTextIntoLines(\n        this.hiddenTextarea.value,\n      ).graphemeText,\n      charCount = this._text.length,\n      nextCharCount = nextText.length,\n      selectionStart = this.selectionStart,\n      selectionEnd = this.selectionEnd,\n      selection = selectionStart !== selectionEnd;\n    let copiedStyle: TextStyleDeclaration[] | undefined,\n      removedText,\n      charDiff = nextCharCount - charCount,\n      removeFrom,\n      removeTo;\n\n    const textareaSelection = this.fromStringToGraphemeSelection(\n      this.hiddenTextarea.selectionStart,\n      this.hiddenTextarea.selectionEnd,\n      this.hiddenTextarea.value,\n    );\n    const backDelete = selectionStart > textareaSelection.selectionStart;\n\n    if (selection) {\n      removedText = this._text.slice(selectionStart, selectionEnd);\n      charDiff += selectionEnd - selectionStart;\n    } else if (nextCharCount < charCount) {\n      if (backDelete) {\n        removedText = this._text.slice(selectionEnd + charDiff, selectionEnd);\n      } else {\n        removedText = this._text.slice(\n          selectionStart,\n          selectionStart - charDiff,\n        );\n      }\n    }\n    const insertedText = nextText.slice(\n      textareaSelection.selectionEnd - charDiff,\n      textareaSelection.selectionEnd,\n    );\n    if (removedText && removedText.length) {\n      if (insertedText.length) {\n        // let's copy some style before deleting.\n        // we want to copy the style before the cursor OR the style at the cursor if selection\n        // is bigger than 0.\n        copiedStyle = this.getSelectionStyles(\n          selectionStart,\n          selectionStart + 1,\n          false,\n        );\n        // now duplicate the style one for each inserted text.\n        copiedStyle = insertedText.map(\n          () =>\n            // this return an array of references, but that is fine since we are\n            // copying the style later.\n            copiedStyle![0],\n        );\n      }\n      if (selection) {\n        removeFrom = selectionStart;\n        removeTo = selectionEnd;\n      } else if (backDelete) {\n        // detect differences between forwardDelete and backDelete\n        removeFrom = selectionEnd - removedText.length;\n        removeTo = selectionEnd;\n      } else {\n        removeFrom = selectionEnd;\n        removeTo = selectionEnd + removedText.length;\n      }\n      this.removeStyleFromTo(removeFrom, removeTo);\n    }\n    if (insertedText.length) {\n      const { copyPasteData } = getEnv();\n      if (\n        fromPaste &&\n        insertedText.join('') === copyPasteData.copiedText &&\n        !config.disableStyleCopyPaste\n      ) {\n        copiedStyle = copyPasteData.copiedTextStyle;\n      }\n      this.insertNewStyleBlock(insertedText, selectionStart, copiedStyle);\n    }\n    updateAndFire();\n  }\n\n  /**\n   * Composition start\n   */\n  onCompositionStart() {\n    this.inCompositionMode = true;\n  }\n\n  /**\n   * Composition end\n   */\n  onCompositionEnd() {\n    this.inCompositionMode = false;\n  }\n\n  onCompositionUpdate({ target }: CompositionEvent) {\n    const { selectionStart, selectionEnd } = target as HTMLTextAreaElement;\n    this.compositionStart = selectionStart;\n    this.compositionEnd = selectionEnd;\n    this.updateTextareaPosition();\n  }\n\n  /**\n   * Copies selected text\n   */\n  copy() {\n    if (this.selectionStart === this.selectionEnd) {\n      //do not cut-copy if no selection\n      return;\n    }\n    const { copyPasteData } = getEnv();\n    copyPasteData.copiedText = this.getSelectedText();\n    if (!config.disableStyleCopyPaste) {\n      copyPasteData.copiedTextStyle = this.getSelectionStyles(\n        this.selectionStart,\n        this.selectionEnd,\n        true,\n      );\n    } else {\n      copyPasteData.copiedTextStyle = undefined;\n    }\n    this._copyDone = true;\n  }\n\n  /**\n   * Pastes text\n   */\n  paste() {\n    this.fromPaste = true;\n  }\n\n  /**\n   * Finds the width in pixels before the cursor on the same line\n   * @private\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {Number} widthBeforeCursor width before cursor\n   */\n  _getWidthBeforeCursor(lineIndex: number, charIndex: number): number {\n    let widthBeforeCursor = this._getLineLeftOffset(lineIndex),\n      bound;\n\n    if (charIndex > 0) {\n      bound = this.__charBounds[lineIndex][charIndex - 1];\n      widthBeforeCursor += bound.left + bound.width;\n    }\n    return widthBeforeCursor;\n  }\n\n  /**\n   * Gets start offset of a selection\n   * @param {KeyboardEvent} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getDownCursorOffset(e: KeyboardEvent, isRight: boolean): number {\n    const selectionProp = this._getSelectionForOffset(e, isRight),\n      cursorLocation = this.get2DCursorLocation(selectionProp),\n      lineIndex = cursorLocation.lineIndex;\n    // if on last line, down cursor goes to end of line\n    if (\n      lineIndex === this._textLines.length - 1 ||\n      e.metaKey ||\n      e.keyCode === 34\n    ) {\n      // move to the end of a text\n      return this._text.length - selectionProp;\n    }\n    const charIndex = cursorLocation.charIndex,\n      widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n      indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\n      textAfterCursor = this._textLines[lineIndex].slice(charIndex);\n    return (\n      textAfterCursor.length +\n      indexOnOtherLine +\n      1 +\n      this.missingNewlineOffset(lineIndex)\n    );\n  }\n\n  /**\n   * private\n   * Helps finding if the offset should be counted from Start or End\n   * @param {KeyboardEvent} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  _getSelectionForOffset(e: KeyboardEvent, isRight: boolean): number {\n    if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\n      return this.selectionEnd;\n    } else {\n      return this.selectionStart;\n    }\n  }\n\n  /**\n   * @param {KeyboardEvent} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getUpCursorOffset(e: KeyboardEvent, isRight: boolean): number {\n    const selectionProp = this._getSelectionForOffset(e, isRight),\n      cursorLocation = this.get2DCursorLocation(selectionProp),\n      lineIndex = cursorLocation.lineIndex;\n    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n      // if on first line, up cursor goes to start of line\n      return -selectionProp;\n    }\n    const charIndex = cursorLocation.charIndex,\n      widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n      indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\n      textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex),\n      missingNewlineOffset = this.missingNewlineOffset(lineIndex - 1);\n    // return a negative offset\n    return (\n      -this._textLines[lineIndex - 1].length +\n      indexOnOtherLine -\n      textBeforeCursor.length +\n      (1 - missingNewlineOffset)\n    );\n  }\n\n  /**\n   * for a given width it founds the matching character.\n   * @private\n   */\n  _getIndexOnLine(lineIndex: number, width: number) {\n    const line = this._textLines[lineIndex],\n      lineLeftOffset = this._getLineLeftOffset(lineIndex);\n    let widthOfCharsOnLine = lineLeftOffset,\n      indexOnLine = 0,\n      charWidth,\n      foundMatch;\n\n    for (let j = 0, jlen = line.length; j < jlen; j++) {\n      charWidth = this.__charBounds[lineIndex][j].width;\n      widthOfCharsOnLine += charWidth;\n      if (widthOfCharsOnLine > width) {\n        foundMatch = true;\n        const leftEdge = widthOfCharsOnLine - charWidth,\n          rightEdge = widthOfCharsOnLine,\n          offsetFromLeftEdge = Math.abs(leftEdge - width),\n          offsetFromRightEdge = Math.abs(rightEdge - width);\n\n        indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : j - 1;\n        break;\n      }\n    }\n\n    // reached end\n    if (!foundMatch) {\n      indexOnLine = line.length - 1;\n    }\n\n    return indexOnLine;\n  }\n\n  /**\n   * Moves cursor down\n   * @param {KeyboardEvent} e Event object\n   */\n  moveCursorDown(e: KeyboardEvent) {\n    if (\n      this.selectionStart >= this._text.length &&\n      this.selectionEnd >= this._text.length\n    ) {\n      return;\n    }\n    this._moveCursorUpOrDown('Down', e);\n  }\n\n  /**\n   * Moves cursor up\n   * @param {KeyboardEvent} e Event object\n   */\n  moveCursorUp(e: KeyboardEvent) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorUpOrDown('Up', e);\n  }\n\n  /**\n   * Moves cursor up or down, fires the events\n   * @param {String} direction 'Up' or 'Down'\n   * @param {KeyboardEvent} e Event object\n   */\n  _moveCursorUpOrDown(direction: 'Up' | 'Down', e: KeyboardEvent) {\n    const offset = this[`get${direction}CursorOffset`](\n      e,\n      this._selectionDirection === RIGHT,\n    );\n    if (e.shiftKey) {\n      this.moveCursorWithShift(offset);\n    } else {\n      this.moveCursorWithoutShift(offset);\n    }\n    if (offset !== 0) {\n      const max = this.text.length;\n      this.selectionStart = capValue(0, this.selectionStart, max);\n      this.selectionEnd = capValue(0, this.selectionEnd, max);\n      // TODO fix: abort and init should be an alternative depending\n      // on selectionStart/End being equal or different\n      this.abortCursorAnimation();\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  }\n\n  /**\n   * Moves cursor with shift\n   * @param {Number} offset\n   */\n  moveCursorWithShift(offset: number) {\n    const newSelection =\n      this._selectionDirection === LEFT\n        ? this.selectionStart + offset\n        : this.selectionEnd + offset;\n    this.setSelectionStartEndWithShift(\n      this.selectionStart,\n      this.selectionEnd,\n      newSelection,\n    );\n    return offset !== 0;\n  }\n\n  /**\n   * Moves cursor up without shift\n   * @param {Number} offset\n   */\n  moveCursorWithoutShift(offset: number) {\n    if (offset < 0) {\n      this.selectionStart += offset;\n      this.selectionEnd = this.selectionStart;\n    } else {\n      this.selectionEnd += offset;\n      this.selectionStart = this.selectionEnd;\n    }\n    return offset !== 0;\n  }\n\n  /**\n   * Moves cursor left\n   * @param {KeyboardEvent} e Event object\n   */\n  moveCursorLeft(e: KeyboardEvent) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Left', e);\n  }\n\n  /**\n   * @private\n   * @return {Boolean} true if a change happened\n   *\n   * @todo refactor not to use method name composition\n   */\n  _move(\n    e: KeyboardEvent,\n    prop: 'selectionStart' | 'selectionEnd',\n    direction: 'Left' | 'Right',\n  ): boolean {\n    let newValue: number | undefined;\n    if (e.altKey) {\n      newValue = this[`findWordBoundary${direction}`](this[prop]);\n    } else if (e.metaKey || e.keyCode === 35 || e.keyCode === 36) {\n      newValue = this[`findLineBoundary${direction}`](this[prop]);\n    } else {\n      this[prop] += direction === 'Left' ? -1 : 1;\n      return true;\n    }\n    if (typeof newValue !== 'undefined' && this[prop] !== newValue) {\n      this[prop] = newValue;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @private\n   */\n  _moveLeft(e: KeyboardEvent, prop: 'selectionStart' | 'selectionEnd') {\n    return this._move(e, prop, 'Left');\n  }\n\n  /**\n   * @private\n   */\n  _moveRight(e: KeyboardEvent, prop: 'selectionStart' | 'selectionEnd') {\n    return this._move(e, prop, 'Right');\n  }\n\n  /**\n   * Moves cursor left without keeping selection\n   * @param {KeyboardEvent} e\n   */\n  moveCursorLeftWithoutShift(e: KeyboardEvent) {\n    let change = true;\n    this._selectionDirection = LEFT;\n\n    // only move cursor when there is no selection,\n    // otherwise we discard it, and leave cursor on same place\n    if (\n      this.selectionEnd === this.selectionStart &&\n      this.selectionStart !== 0\n    ) {\n      change = this._moveLeft(e, 'selectionStart');\n    }\n    this.selectionEnd = this.selectionStart;\n    return change;\n  }\n\n  /**\n   * Moves cursor left while keeping selection\n   * @param {KeyboardEvent} e\n   */\n  moveCursorLeftWithShift(e: KeyboardEvent) {\n    if (\n      this._selectionDirection === RIGHT &&\n      this.selectionStart !== this.selectionEnd\n    ) {\n      return this._moveLeft(e, 'selectionEnd');\n    } else if (this.selectionStart !== 0) {\n      this._selectionDirection = LEFT;\n      return this._moveLeft(e, 'selectionStart');\n    }\n  }\n\n  /**\n   * Moves cursor right\n   * @param {KeyboardEvent} e Event object\n   */\n  moveCursorRight(e: KeyboardEvent) {\n    if (\n      this.selectionStart >= this._text.length &&\n      this.selectionEnd >= this._text.length\n    ) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Right', e);\n  }\n\n  /**\n   * Moves cursor right or Left, fires event\n   * @param {String} direction 'Left', 'Right'\n   * @param {KeyboardEvent} e Event object\n   */\n  _moveCursorLeftOrRight(direction: 'Left' | 'Right', e: KeyboardEvent) {\n    const actionName = `moveCursor${direction}${\n      e.shiftKey ? 'WithShift' : 'WithoutShift'\n    }` as const;\n    this._currentCursorOpacity = 1;\n    if (this[actionName](e)) {\n      // TODO fix: abort and init should be an alternative depending\n      // on selectionStart/End being equal or different\n      this.abortCursorAnimation();\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  }\n\n  /**\n   * Moves cursor right while keeping selection\n   * @param {KeyboardEvent} e\n   */\n  moveCursorRightWithShift(e: KeyboardEvent) {\n    if (\n      this._selectionDirection === LEFT &&\n      this.selectionStart !== this.selectionEnd\n    ) {\n      return this._moveRight(e, 'selectionStart');\n    } else if (this.selectionEnd !== this._text.length) {\n      this._selectionDirection = RIGHT;\n      return this._moveRight(e, 'selectionEnd');\n    }\n  }\n\n  /**\n   * Moves cursor right without keeping selection\n   * @param {KeyboardEvent} e Event object\n   */\n  moveCursorRightWithoutShift(e: KeyboardEvent) {\n    let changed = true;\n    this._selectionDirection = RIGHT;\n\n    if (this.selectionStart === this.selectionEnd) {\n      changed = this._moveRight(e, 'selectionStart');\n      this.selectionEnd = this.selectionStart;\n    } else {\n      this.selectionStart = this.selectionEnd;\n    }\n    return changed;\n  }\n}\n","import type { TPointerEvent, TPointerEventInfo } from '../../EventTypeDefs';\nimport type { XY } from '../../Point';\nimport { Point } from '../../Point';\nimport { stopEvent } from '../../util/dom_event';\nimport { invertTransform } from '../../util/misc/matrix';\nimport { DraggableTextDelegate } from './DraggableTextDelegate';\nimport type { ITextEvents } from './ITextBehavior';\nimport { ITextKeyBehavior } from './ITextKeyBehavior';\nimport type { TOptions } from '../../typedefs';\nimport type { TextProps, SerializedTextProps } from '../Text/Text';\n\n/**\n * `LEFT_CLICK === 0`\n */\nconst notALeftClick = (e: Event) => !!(e as MouseEvent).button;\n\nexport abstract class ITextClickBehavior<\n  Props extends TOptions<TextProps> = Partial<TextProps>,\n  SProps extends SerializedTextProps = SerializedTextProps,\n  EventSpec extends ITextEvents = ITextEvents,\n> extends ITextKeyBehavior<Props, SProps, EventSpec> {\n  private declare __lastSelected: boolean;\n  private declare __lastClickTime: number;\n  private declare __lastLastClickTime: number;\n  private declare __lastPointer: XY | Record<string, never>;\n  private declare __newClickTime: number;\n\n  protected draggableTextDelegate: DraggableTextDelegate;\n\n  initBehavior() {\n    // Initializes event handlers related to cursor or selection\n    this.on('mousedown', this._mouseDownHandler);\n    this.on('mousedown:before', this._mouseDownHandlerBefore);\n    this.on('mouseup', this.mouseUpHandler);\n    this.on('mousedblclick', this.doubleClickHandler);\n    this.on('tripleclick', this.tripleClickHandler);\n\n    // Initializes \"dbclick\" event handler\n    this.__lastClickTime = +new Date();\n    // for triple click\n    this.__lastLastClickTime = +new Date();\n    this.__lastPointer = {};\n    this.on('mousedown', this.onMouseDown);\n\n    // @ts-expect-error in reality it is an IText instance\n    this.draggableTextDelegate = new DraggableTextDelegate(this);\n\n    super.initBehavior();\n  }\n\n  /**\n   * If this method returns true a mouse move operation over a text selection\n   * will not prevent the native mouse event allowing the browser to start a drag operation.\n   * shouldStartDragging can be read 'do not prevent default for mouse move event'\n   * To prevent drag and drop between objects both shouldStartDragging and onDragStart should return false\n   * @returns\n   */\n  shouldStartDragging() {\n    return this.draggableTextDelegate.isActive();\n  }\n\n  /**\n   * @public override this method to control whether instance should/shouldn't become a drag source,\n   * @see also {@link DraggableTextDelegate#isActive}\n   * To prevent drag and drop between objects both shouldStartDragging and onDragStart should return false\n   * @returns {boolean} should handle event\n   */\n  onDragStart(e: DragEvent) {\n    return this.draggableTextDelegate.onDragStart(e);\n  }\n\n  /**\n   * @public override this method to control whether instance should/shouldn't become a drop target\n   */\n  canDrop(e: DragEvent) {\n    return this.draggableTextDelegate.canDrop(e);\n  }\n\n  /**\n   * Default event handler to simulate triple click\n   * @private\n   */\n  onMouseDown(options: TPointerEventInfo) {\n    if (!this.canvas) {\n      return;\n    }\n    this.__newClickTime = +new Date();\n    const newPointer = options.pointer;\n    if (this.isTripleClick(newPointer)) {\n      this.fire('tripleclick', options);\n      stopEvent(options.e);\n    }\n    this.__lastLastClickTime = this.__lastClickTime;\n    this.__lastClickTime = this.__newClickTime;\n    this.__lastPointer = newPointer;\n    this.__lastSelected = this.selected && !this.getActiveControl();\n  }\n\n  isTripleClick(newPointer: XY) {\n    return (\n      this.__newClickTime - this.__lastClickTime < 500 &&\n      this.__lastClickTime - this.__lastLastClickTime < 500 &&\n      this.__lastPointer.x === newPointer.x &&\n      this.__lastPointer.y === newPointer.y\n    );\n  }\n\n  /**\n   * Default handler for double click, select a word\n   */\n  doubleClickHandler(options: TPointerEventInfo) {\n    if (!this.isEditing) {\n      return;\n    }\n    this.selectWord(this.getSelectionStartFromPointer(options.e));\n  }\n\n  /**\n   * Default handler for triple click, select a line\n   */\n  tripleClickHandler(options: TPointerEventInfo) {\n    if (!this.isEditing) {\n      return;\n    }\n    this.selectLine(this.getSelectionStartFromPointer(options.e));\n  }\n\n  /**\n   * Default event handler for the basic functionalities needed on _mouseDown\n   * can be overridden to do something different.\n   * Scope of this implementation is: find the click position, set selectionStart\n   * find selectionEnd, initialize the drawing of either cursor or selection area\n   * initializing a mousedDown on a text area will cancel fabricjs knowledge of\n   * current compositionMode. It will be set to false.\n   */\n  _mouseDownHandler({ e }: TPointerEventInfo) {\n    if (\n      !this.canvas ||\n      !this.editable ||\n      notALeftClick(e) ||\n      this.getActiveControl()\n    ) {\n      return;\n    }\n\n    if (this.draggableTextDelegate.start(e)) {\n      return;\n    }\n\n    this.canvas.textEditingManager.register(this);\n\n    if (this.selected) {\n      this.inCompositionMode = false;\n      this.setCursorByClick(e);\n    }\n\n    if (this.isEditing) {\n      this.__selectionStartOnMouseDown = this.selectionStart;\n      if (this.selectionStart === this.selectionEnd) {\n        this.abortCursorAnimation();\n      }\n      this.renderCursorOrSelection();\n    }\n  }\n\n  /**\n   * Default event handler for the basic functionalities needed on mousedown:before\n   * can be overridden to do something different.\n   * Scope of this implementation is: verify the object is already selected when mousing down\n   */\n  _mouseDownHandlerBefore({ e }: TPointerEventInfo) {\n    if (!this.canvas || !this.editable || notALeftClick(e)) {\n      return;\n    }\n    // we want to avoid that an object that was selected and then becomes unselectable,\n    // may trigger editing mode in some way.\n    this.selected = this === this.canvas._activeObject;\n  }\n\n  /**\n   * standard handler for mouse up, overridable\n   * @private\n   */\n  mouseUpHandler({ e, transform }: TPointerEventInfo) {\n    const didDrag = this.draggableTextDelegate.end(e);\n    if (this.canvas) {\n      this.canvas.textEditingManager.unregister(this);\n\n      const activeObject = this.canvas._activeObject;\n      if (activeObject && activeObject !== this) {\n        // avoid running this logic when there is an active object\n        // this because is possible with shift click and fast clicks,\n        // to rapidly deselect and reselect this object and trigger an enterEdit\n        return;\n      }\n    }\n    if (\n      !this.editable ||\n      (this.group && !this.group.interactive) ||\n      (transform && transform.actionPerformed) ||\n      notALeftClick(e) ||\n      didDrag\n    ) {\n      return;\n    }\n\n    if (this.__lastSelected && !this.getActiveControl()) {\n      this.selected = false;\n      this.__lastSelected = false;\n      this.enterEditing(e);\n      if (this.selectionStart === this.selectionEnd) {\n        this.initDelayedCursor(true);\n      } else {\n        this.renderCursorOrSelection();\n      }\n    } else {\n      this.selected = true;\n    }\n  }\n\n  /**\n   * Changes cursor location in a text depending on passed pointer (x/y) object\n   * @param {TPointerEvent} e Event object\n   */\n  setCursorByClick(e: TPointerEvent) {\n    const newSelection = this.getSelectionStartFromPointer(e),\n      start = this.selectionStart,\n      end = this.selectionEnd;\n    if (e.shiftKey) {\n      this.setSelectionStartEndWithShift(start, end, newSelection);\n    } else {\n      this.selectionStart = newSelection;\n      this.selectionEnd = newSelection;\n    }\n    if (this.isEditing) {\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  }\n\n  /**\n   * Returns index of a character corresponding to where an object was clicked\n   * @param {TPointerEvent} e Event object\n   * @return {Number} Index of a character\n   */\n  getSelectionStartFromPointer(e: TPointerEvent): number {\n    const mouseOffset = this.canvas!.getScenePoint(e)\n      .transform(invertTransform(this.calcTransformMatrix()))\n      .add(new Point(-this._getLeftOffset(), -this._getTopOffset()));\n    let height = 0,\n      charIndex = 0,\n      lineIndex = 0;\n\n    for (let i = 0; i < this._textLines.length; i++) {\n      if (height <= mouseOffset.y) {\n        height += this.getHeightOfLine(i);\n        lineIndex = i;\n        if (i > 0) {\n          charIndex +=\n            this._textLines[i - 1].length + this.missingNewlineOffset(i - 1);\n        }\n      } else {\n        break;\n      }\n    }\n    const lineLeftOffset = Math.abs(this._getLineLeftOffset(lineIndex));\n    let width = lineLeftOffset;\n    const charLength = this._textLines[lineIndex].length;\n    const chars = this.__charBounds[lineIndex];\n    for (let j = 0; j < charLength; j++) {\n      // i removed something about flipX here, check.\n      const charWidth = chars[j].kernedWidth;\n      const widthAfter = width + charWidth;\n      if (mouseOffset.x <= widthAfter) {\n        // if the pointer is closer to the end of the char we increment charIndex\n        // in order to position the cursor after the char\n        if (\n          Math.abs(mouseOffset.x - widthAfter) <=\n          Math.abs(mouseOffset.x - width)\n        ) {\n          charIndex++;\n        }\n        break;\n      }\n      width = widthAfter;\n      charIndex++;\n    }\n\n    return Math.min(\n      // if object is horizontally flipped, mirror cursor location from the end\n      this.flipX ? charLength - charIndex : charIndex,\n      this._text.length,\n    );\n  }\n}\n","export type TKeyMapIText = Record<\n  KeyboardEvent['keyCode'],\n  CursorHandlingMethods\n>;\n\nexport type CursorHandlingMethods =\n  | 'moveCursorUp'\n  | 'moveCursorDown'\n  | 'moveCursorLeft'\n  | 'moveCursorRight'\n  | 'exitEditing'\n  | 'copy'\n  | 'cut'\n  | 'selectAll';\n\nconst MOVE_CURSOR_UP: CursorHandlingMethods = 'moveCursorUp';\nconst MOVE_CURSOR_DOWN: CursorHandlingMethods = 'moveCursorDown';\nconst MOVE_CURSOR_LEFT: CursorHandlingMethods = 'moveCursorLeft';\nconst MOVE_CURSOR_RIGHT: CursorHandlingMethods = 'moveCursorRight';\nconst EXIT_EDITING: CursorHandlingMethods = 'exitEditing';\n\n// @TODO look into import { Key } from 'ts-key-enum';\n// and transition from keyCode to Key\n// also reduce string duplication\nexport const keysMap: TKeyMapIText = {\n  9: EXIT_EDITING,\n  27: EXIT_EDITING,\n  33: MOVE_CURSOR_UP,\n  34: MOVE_CURSOR_DOWN,\n  35: MOVE_CURSOR_RIGHT,\n  36: MOVE_CURSOR_LEFT,\n  37: MOVE_CURSOR_LEFT,\n  38: MOVE_CURSOR_UP,\n  39: MOVE_CURSOR_RIGHT,\n  40: MOVE_CURSOR_DOWN,\n};\n\nexport const keysMapRtl: TKeyMapIText = {\n  9: EXIT_EDITING,\n  27: EXIT_EDITING,\n  33: MOVE_CURSOR_UP,\n  34: MOVE_CURSOR_DOWN,\n  35: MOVE_CURSOR_LEFT,\n  36: MOVE_CURSOR_RIGHT,\n  37: MOVE_CURSOR_RIGHT,\n  38: MOVE_CURSOR_UP,\n  39: MOVE_CURSOR_LEFT,\n  40: MOVE_CURSOR_DOWN,\n};\n\n/**\n * For functionalities on keyUp + ctrl || cmd\n */\nexport const ctrlKeysMapUp: TKeyMapIText = {\n  67: 'copy',\n  // there was a reason this wasn't deleted. for now leave it here\n  88: 'cut',\n};\n\n/**\n * For functionalities on keyDown + ctrl || cmd\n */\nexport const ctrlKeysMapDown: TKeyMapIText = {\n  65: 'selectAll',\n};\n","import { Canvas } from '../../canvas/Canvas';\nimport type { ITextEvents } from './ITextBehavior';\nimport { ITextClickBehavior } from './ITextClickBehavior';\nimport {\n  ctrlKeysMapDown,\n  ctrlKeysMapUp,\n  keysMap,\n  keysMapRtl,\n} from './constants';\nimport type { TClassProperties, TFiller, TOptions } from '../../typedefs';\nimport { classRegistry } from '../../ClassRegistry';\nimport type { SerializedTextProps, TextProps } from '../Text/Text';\nimport {\n  JUSTIFY,\n  JUSTIFY_CENTER,\n  JUSTIFY_LEFT,\n  JUSTIFY_RIGHT,\n} from '../Text/constants';\nimport { CENTER, FILL, LEFT, RIGHT } from '../../constants';\nimport type { ObjectToCanvasElementOptions } from '../Object/Object';\n\nexport type CursorBoundaries = {\n  left: number;\n  top: number;\n  leftOffset: number;\n  topOffset: number;\n};\n\nexport type CursorRenderingData = {\n  color: string;\n  opacity: number;\n  left: number;\n  top: number;\n  width: number;\n  height: number;\n};\n\n// Declare IText protected properties to workaround TS\nconst protectedDefaultValues = {\n  _selectionDirection: null,\n  _reSpace: /\\s|\\r?\\n/,\n  inCompositionMode: false,\n};\n\nexport const iTextDefaultValues: Partial<TClassProperties<IText>> = {\n  selectionStart: 0,\n  selectionEnd: 0,\n  selectionColor: 'rgba(17,119,255,0.3)',\n  isEditing: false,\n  editable: true,\n  editingBorderColor: 'rgba(102,153,255,0.25)',\n  cursorWidth: 2,\n  cursorColor: '',\n  cursorDelay: 1000,\n  cursorDuration: 600,\n  caching: true,\n  hiddenTextareaContainer: null,\n  keysMap,\n  keysMapRtl,\n  ctrlKeysMapDown,\n  ctrlKeysMapUp,\n  ...protectedDefaultValues,\n};\n\n// @TODO this is not complete\ninterface UniqueITextProps {\n  selectionStart: number;\n  selectionEnd: number;\n}\n\nexport interface SerializedITextProps\n  extends SerializedTextProps,\n    UniqueITextProps {}\n\nexport interface ITextProps extends TextProps, UniqueITextProps {}\n\n/**\n * @fires changed\n * @fires selection:changed\n * @fires editing:entered\n * @fires editing:exited\n * @fires dragstart\n * @fires drag drag event firing on the drag source\n * @fires dragend\n * @fires copy\n * @fires cut\n * @fires paste\n *\n * #### Supported key combinations\n * ```\n *   Move cursor:                    left, right, up, down\n *   Select character:               shift + left, shift + right\n *   Select text vertically:         shift + up, shift + down\n *   Move cursor by word:            alt + left, alt + right\n *   Select words:                   shift + alt + left, shift + alt + right\n *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\n *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\n *   Jump to start/end of text:      cmd + up, cmd + down\n *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\n *   Delete character:               backspace\n *   Delete word:                    alt + backspace\n *   Delete line:                    cmd + backspace\n *   Forward delete:                 delete\n *   Copy text:                      ctrl/cmd + c\n *   Paste text:                     ctrl/cmd + v\n *   Cut text:                       ctrl/cmd + x\n *   Select entire text:             ctrl/cmd + a\n *   Quit editing                    tab or esc\n * ```\n *\n * #### Supported mouse/touch combination\n * ```\n *   Position cursor:                click/touch\n *   Create selection:               click/touch & drag\n *   Create selection:               click & shift + click\n *   Select word:                    double click\n *   Select line:                    triple click\n * ```\n */\nexport class IText<\n    Props extends TOptions<ITextProps> = Partial<ITextProps>,\n    SProps extends SerializedITextProps = SerializedITextProps,\n    EventSpec extends ITextEvents = ITextEvents,\n  >\n  extends ITextClickBehavior<Props, SProps, EventSpec>\n  implements UniqueITextProps\n{\n  /**\n   * Index where text selection starts (or where cursor is when there is no selection)\n   * @type Number\n   * @default\n   */\n  declare selectionStart: number;\n\n  /**\n   * Index where text selection ends\n   * @type Number\n   * @default\n   */\n  declare selectionEnd: number;\n\n  declare compositionStart: number;\n\n  declare compositionEnd: number;\n\n  /**\n   * Color of text selection\n   * @type String\n   * @default\n   */\n  declare selectionColor: string;\n\n  /**\n   * Indicates whether text is in editing mode\n   * @type Boolean\n   * @default\n   */\n  declare isEditing: boolean;\n\n  /**\n   * Indicates whether a text can be edited\n   * @type Boolean\n   * @default\n   */\n  declare editable: boolean;\n\n  /**\n   * Border color of text object while it's in editing mode\n   * @type String\n   * @default\n   */\n  declare editingBorderColor: string;\n\n  /**\n   * Width of cursor (in px)\n   * @type Number\n   * @default\n   */\n  declare cursorWidth: number;\n\n  /**\n   * Color of text cursor color in editing mode.\n   * if not set (default) will take color from the text.\n   * if set to a color value that fabric can understand, it will\n   * be used instead of the color of the text at the current position.\n   * @type String\n   * @default\n   */\n  declare cursorColor: string;\n\n  /**\n   * Delay between cursor blink (in ms)\n   * @type Number\n   * @default\n   */\n  declare cursorDelay: number;\n\n  /**\n   * Duration of cursor fade in (in ms)\n   * @type Number\n   * @default\n   */\n  declare cursorDuration: number;\n\n  declare compositionColor: string;\n\n  /**\n   * Indicates whether internal text char widths can be cached\n   * @type Boolean\n   * @default\n   */\n  declare caching: boolean;\n\n  static ownDefaults = iTextDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return { ...super.getDefaults(), ...IText.ownDefaults };\n  }\n\n  static type = 'IText';\n\n  get type() {\n    const type = super.type;\n    // backward compatibility\n    return type === 'itext' ? 'i-text' : type;\n  }\n\n  /**\n   * Constructor\n   * @param {String} text Text string\n   * @param {Object} [options] Options object\n   */\n  constructor(text: string, options?: Props) {\n    super(text, { ...IText.ownDefaults, ...options } as Props);\n    this.initBehavior();\n  }\n\n  /**\n   * While editing handle differently\n   * @private\n   * @param {string} key\n   * @param {*} value\n   */\n  _set(key: string, value: any) {\n    if (this.isEditing && this._savedProps && key in this._savedProps) {\n      // @ts-expect-error irritating TS\n      this._savedProps[key] = value;\n      return this;\n    }\n    if (key === 'canvas') {\n      this.canvas instanceof Canvas &&\n        this.canvas.textEditingManager.remove(this);\n      value instanceof Canvas && value.textEditingManager.add(this);\n    }\n    return super._set(key, value);\n  }\n\n  /**\n   * Sets selection start (left boundary of a selection)\n   * @param {Number} index Index to set selection start to\n   */\n  setSelectionStart(index: number) {\n    index = Math.max(index, 0);\n    this._updateAndFire('selectionStart', index);\n  }\n\n  /**\n   * Sets selection end (right boundary of a selection)\n   * @param {Number} index Index to set selection end to\n   */\n  setSelectionEnd(index: number) {\n    index = Math.min(index, this.text.length);\n    this._updateAndFire('selectionEnd', index);\n  }\n\n  /**\n   * @private\n   * @param {String} property 'selectionStart' or 'selectionEnd'\n   * @param {Number} index new position of property\n   */\n  protected _updateAndFire(\n    property: 'selectionStart' | 'selectionEnd',\n    index: number,\n  ) {\n    if (this[property] !== index) {\n      this._fireSelectionChanged();\n      this[property] = index;\n    }\n    this._updateTextarea();\n  }\n\n  /**\n   * Fires the even of selection changed\n   * @private\n   */\n  _fireSelectionChanged() {\n    this.fire('selection:changed');\n    this.canvas && this.canvas.fire('text:selection:changed', { target: this });\n  }\n\n  /**\n   * Initialize text dimensions. Render all text on given context\n   * or on a offscreen canvas to get the text width with measureText.\n   * Updates this.width and this.height with the proper values.\n   * Does not return dimensions.\n   * @private\n   */\n  initDimensions() {\n    this.isEditing && this.initDelayedCursor();\n    super.initDimensions();\n  }\n\n  /**\n   * Gets style of a current selection/cursor (at the start position)\n   * if startIndex or endIndex are not provided, selectionStart or selectionEnd will be used.\n   * @param {Number} startIndex Start index to get styles at\n   * @param {Number} endIndex End index to get styles at, if not specified selectionEnd or startIndex + 1\n   * @param {Boolean} [complete] get full style or not\n   * @return {Array} styles an array with one, zero or more Style objects\n   */\n  getSelectionStyles(\n    startIndex: number = this.selectionStart || 0,\n    endIndex: number = this.selectionEnd,\n    complete?: boolean,\n  ) {\n    return super.getSelectionStyles(startIndex, endIndex, complete);\n  }\n\n  /**\n   * Sets style of a current selection, if no selection exist, do not set anything.\n   * @param {Object} [styles] Styles object\n   * @param {Number} [startIndex] Start index to get styles at\n   * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n   */\n  setSelectionStyles(\n    styles: object,\n    startIndex: number = this.selectionStart || 0,\n    endIndex: number = this.selectionEnd,\n  ) {\n    return super.setSelectionStyles(styles, startIndex, endIndex);\n  }\n\n  /**\n   * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\n   * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n   * @param {Boolean} [skipWrapping] consider the location for unwrapped lines. useful to manage styles.\n   */\n  get2DCursorLocation(\n    selectionStart = this.selectionStart,\n    skipWrapping?: boolean,\n  ) {\n    return super.get2DCursorLocation(selectionStart, skipWrapping);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  render(ctx: CanvasRenderingContext2D) {\n    super.render(ctx);\n    // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\n    // the correct position but not at every cursor animation.\n    this.cursorOffsetCache = {};\n    this.renderCursorOrSelection();\n  }\n\n  /**\n   * @override block cursor/selection logic while rendering the exported canvas\n   * @todo this workaround should be replaced with a more robust solution\n   */\n  toCanvasElement(options?: ObjectToCanvasElementOptions): HTMLCanvasElement {\n    const isEditing = this.isEditing;\n    this.isEditing = false;\n    const canvas = super.toCanvasElement(options);\n    this.isEditing = isEditing;\n    return canvas;\n  }\n\n  /**\n   * Renders cursor or selection (depending on what exists)\n   * it does on the contextTop. If contextTop is not available, do nothing.\n   */\n  renderCursorOrSelection() {\n    if (!this.isEditing) {\n      return;\n    }\n    const ctx = this.clearContextTop(true);\n    if (!ctx) {\n      return;\n    }\n    const boundaries = this._getCursorBoundaries();\n    if (this.selectionStart === this.selectionEnd && !this.inCompositionMode) {\n      this.renderCursor(ctx, boundaries);\n    } else {\n      this.renderSelection(ctx, boundaries);\n    }\n    this.canvas!.contextTopDirty = true;\n    ctx.restore();\n  }\n\n  /**\n   * Returns cursor boundaries (left, top, leftOffset, topOffset)\n   * left/top are left/top of entire text box\n   * leftOffset/topOffset are offset from that left/top point of a text box\n   * @private\n   * @param {number} [index] index from start\n   * @param {boolean} [skipCaching]\n   */\n  _getCursorBoundaries(\n    index: number = this.selectionStart,\n    skipCaching?: boolean,\n  ): CursorBoundaries {\n    const left = this._getLeftOffset(),\n      top = this._getTopOffset(),\n      offsets = this._getCursorBoundariesOffsets(index, skipCaching);\n    return {\n      left: left,\n      top: top,\n      leftOffset: offsets.left,\n      topOffset: offsets.top,\n    };\n  }\n\n  /**\n   * Caches and returns cursor left/top offset relative to instance's center point\n   * @private\n   * @param {number} index index from start\n   * @param {boolean} [skipCaching]\n   */\n  _getCursorBoundariesOffsets(\n    index: number,\n    skipCaching?: boolean,\n  ): { left: number; top: number } {\n    if (skipCaching) {\n      return this.__getCursorBoundariesOffsets(index);\n    }\n    if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\n      return this.cursorOffsetCache as { left: number; top: number };\n    }\n    return (this.cursorOffsetCache = this.__getCursorBoundariesOffsets(index));\n  }\n\n  /**\n   * Calculates cursor left/top offset relative to instance's center point\n   * @private\n   * @param {number} index index from start\n   */\n  __getCursorBoundariesOffsets(index: number) {\n    let topOffset = 0,\n      leftOffset = 0;\n    const { charIndex, lineIndex } = this.get2DCursorLocation(index);\n\n    for (let i = 0; i < lineIndex; i++) {\n      topOffset += this.getHeightOfLine(i);\n    }\n    const lineLeftOffset = this._getLineLeftOffset(lineIndex);\n    const bound = this.__charBounds[lineIndex][charIndex];\n    bound && (leftOffset = bound.left);\n    if (\n      this.charSpacing !== 0 &&\n      charIndex === this._textLines[lineIndex].length\n    ) {\n      leftOffset -= this._getWidthOfCharSpacing();\n    }\n    const boundaries = {\n      top: topOffset,\n      left: lineLeftOffset + (leftOffset > 0 ? leftOffset : 0),\n    };\n    if (this.direction === 'rtl') {\n      if (\n        this.textAlign === RIGHT ||\n        this.textAlign === JUSTIFY ||\n        this.textAlign === JUSTIFY_RIGHT\n      ) {\n        boundaries.left *= -1;\n      } else if (this.textAlign === LEFT || this.textAlign === JUSTIFY_LEFT) {\n        boundaries.left = lineLeftOffset - (leftOffset > 0 ? leftOffset : 0);\n      } else if (\n        this.textAlign === CENTER ||\n        this.textAlign === JUSTIFY_CENTER\n      ) {\n        boundaries.left = lineLeftOffset - (leftOffset > 0 ? leftOffset : 0);\n      }\n    }\n    return boundaries;\n  }\n\n  /**\n   * Renders cursor on context Top, outside the animation cycle, on request\n   * Used for the drag/drop effect.\n   * If contextTop is not available, do nothing.\n   */\n  renderCursorAt(selectionStart: number) {\n    this._renderCursor(\n      this.canvas!.contextTop,\n      this._getCursorBoundaries(selectionStart, true),\n      selectionStart,\n    );\n  }\n\n  /**\n   * Renders cursor\n   * @param {Object} boundaries\n   * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n   */\n  renderCursor(ctx: CanvasRenderingContext2D, boundaries: CursorBoundaries) {\n    this._renderCursor(ctx, boundaries, this.selectionStart);\n  }\n\n  /**\n   * Return the data needed to render the cursor for given selection start\n   * The left,top are relative to the object, while width and height are prescaled\n   * to look think with canvas zoom and object scaling,\n   * so they depend on canvas and object scaling\n   */\n  getCursorRenderingData(\n    selectionStart: number = this.selectionStart,\n    boundaries: CursorBoundaries = this._getCursorBoundaries(selectionStart),\n  ): CursorRenderingData {\n    const cursorLocation = this.get2DCursorLocation(selectionStart),\n      lineIndex = cursorLocation.lineIndex,\n      charIndex =\n        cursorLocation.charIndex > 0 ? cursorLocation.charIndex - 1 : 0,\n      charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize'),\n      multiplier = this.getObjectScaling().x * this.canvas!.getZoom(),\n      cursorWidth = this.cursorWidth / multiplier,\n      dy = this.getValueOfPropertyAt(lineIndex, charIndex, 'deltaY'),\n      topOffset =\n        boundaries.topOffset +\n        ((1 - this._fontSizeFraction) * this.getHeightOfLine(lineIndex)) /\n          this.lineHeight -\n        charHeight * (1 - this._fontSizeFraction);\n\n    return {\n      color:\n        this.cursorColor ||\n        (this.getValueOfPropertyAt(lineIndex, charIndex, 'fill') as string),\n      opacity: this._currentCursorOpacity,\n      left: boundaries.left + boundaries.leftOffset - cursorWidth / 2,\n      top: topOffset + boundaries.top + dy,\n      width: cursorWidth,\n      height: charHeight,\n    };\n  }\n\n  /**\n   * Render the cursor at the given selectionStart.\n   *\n   */\n  _renderCursor(\n    ctx: CanvasRenderingContext2D,\n    boundaries: CursorBoundaries,\n    selectionStart: number,\n  ) {\n    const { color, opacity, left, top, width, height } =\n      this.getCursorRenderingData(selectionStart, boundaries);\n    ctx.fillStyle = color;\n    ctx.globalAlpha = opacity;\n    ctx.fillRect(left, top, width, height);\n  }\n\n  /**\n   * Renders text selection\n   * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n   * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n   */\n  renderSelection(ctx: CanvasRenderingContext2D, boundaries: CursorBoundaries) {\n    const selection = {\n      selectionStart: this.inCompositionMode\n        ? this.hiddenTextarea!.selectionStart\n        : this.selectionStart,\n      selectionEnd: this.inCompositionMode\n        ? this.hiddenTextarea!.selectionEnd\n        : this.selectionEnd,\n    };\n    this._renderSelection(ctx, selection, boundaries);\n  }\n\n  /**\n   * Renders drag start text selection\n   */\n  renderDragSourceEffect() {\n    const dragStartSelection =\n      this.draggableTextDelegate.getDragStartSelection()!;\n    this._renderSelection(\n      this.canvas!.contextTop,\n      dragStartSelection,\n      this._getCursorBoundaries(dragStartSelection.selectionStart, true),\n    );\n  }\n\n  renderDropTargetEffect(e: DragEvent) {\n    const dragSelection = this.getSelectionStartFromPointer(e);\n    this.renderCursorAt(dragSelection);\n  }\n\n  /**\n   * Renders text selection\n   * @private\n   * @param {{ selectionStart: number, selectionEnd: number }} selection\n   * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n   * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n   */\n  _renderSelection(\n    ctx: CanvasRenderingContext2D,\n    selection: { selectionStart: number; selectionEnd: number },\n    boundaries: CursorBoundaries,\n  ) {\n    const selectionStart = selection.selectionStart,\n      selectionEnd = selection.selectionEnd,\n      isJustify = this.textAlign.includes(JUSTIFY),\n      start = this.get2DCursorLocation(selectionStart),\n      end = this.get2DCursorLocation(selectionEnd),\n      startLine = start.lineIndex,\n      endLine = end.lineIndex,\n      startChar = start.charIndex < 0 ? 0 : start.charIndex,\n      endChar = end.charIndex < 0 ? 0 : end.charIndex;\n\n    for (let i = startLine; i <= endLine; i++) {\n      const lineOffset = this._getLineLeftOffset(i) || 0;\n      let lineHeight = this.getHeightOfLine(i),\n        realLineHeight = 0,\n        boxStart = 0,\n        boxEnd = 0;\n\n      if (i === startLine) {\n        boxStart = this.__charBounds[startLine][startChar].left;\n      }\n      if (i >= startLine && i < endLine) {\n        boxEnd =\n          isJustify && !this.isEndOfWrapping(i)\n            ? this.width\n            : this.getLineWidth(i) || 5; // WTF is this 5?\n      } else if (i === endLine) {\n        if (endChar === 0) {\n          boxEnd = this.__charBounds[endLine][endChar].left;\n        } else {\n          const charSpacing = this._getWidthOfCharSpacing();\n          boxEnd =\n            this.__charBounds[endLine][endChar - 1].left +\n            this.__charBounds[endLine][endChar - 1].width -\n            charSpacing;\n        }\n      }\n      realLineHeight = lineHeight;\n      if (this.lineHeight < 1 || (i === endLine && this.lineHeight > 1)) {\n        lineHeight /= this.lineHeight;\n      }\n      let drawStart = boundaries.left + lineOffset + boxStart,\n        drawHeight = lineHeight,\n        extraTop = 0;\n      const drawWidth = boxEnd - boxStart;\n      if (this.inCompositionMode) {\n        ctx.fillStyle = this.compositionColor || 'black';\n        drawHeight = 1;\n        extraTop = lineHeight;\n      } else {\n        ctx.fillStyle = this.selectionColor;\n      }\n      if (this.direction === 'rtl') {\n        if (\n          this.textAlign === RIGHT ||\n          this.textAlign === JUSTIFY ||\n          this.textAlign === JUSTIFY_RIGHT\n        ) {\n          drawStart = this.width - drawStart - drawWidth;\n        } else if (this.textAlign === LEFT || this.textAlign === JUSTIFY_LEFT) {\n          drawStart = boundaries.left + lineOffset - boxEnd;\n        } else if (\n          this.textAlign === CENTER ||\n          this.textAlign === JUSTIFY_CENTER\n        ) {\n          drawStart = boundaries.left + lineOffset - boxEnd;\n        }\n      }\n      ctx.fillRect(\n        drawStart,\n        boundaries.top + boundaries.topOffset + extraTop,\n        drawWidth,\n        drawHeight,\n      );\n      boundaries.topOffset += realLineHeight;\n    }\n  }\n\n  /**\n   * High level function to know the height of the cursor.\n   * the currentChar is the one that precedes the cursor\n   * Returns fontSize of char at the current cursor\n   * Unused from the library, is for the end user\n   * @return {Number} Character font size\n   */\n  getCurrentCharFontSize(): number {\n    const cp = this._getCurrentCharIndex();\n    return this.getValueOfPropertyAt(cp.l, cp.c, 'fontSize');\n  }\n\n  /**\n   * High level function to know the color of the cursor.\n   * the currentChar is the one that precedes the cursor\n   * Returns color (fill) of char at the current cursor\n   * if the text object has a pattern or gradient for filler, it will return that.\n   * Unused by the library, is for the end user\n   * @return {String | TFiller} Character color (fill)\n   */\n  getCurrentCharColor(): string | TFiller | null {\n    const cp = this._getCurrentCharIndex();\n    return this.getValueOfPropertyAt(cp.l, cp.c, FILL);\n  }\n\n  /**\n   * Returns the cursor position for the getCurrent.. functions\n   * @private\n   */\n  _getCurrentCharIndex() {\n    const cursorPosition = this.get2DCursorLocation(this.selectionStart, true),\n      charIndex =\n        cursorPosition.charIndex > 0 ? cursorPosition.charIndex - 1 : 0;\n    return { l: cursorPosition.lineIndex, c: charIndex };\n  }\n\n  dispose() {\n    this.exitEditingImpl();\n    this.draggableTextDelegate.dispose();\n    super.dispose();\n  }\n}\n\nclassRegistry.setClass(IText);\n// legacy\nclassRegistry.setClass(IText, 'i-text');\n","import type { TClassProperties, TOptions } from '../typedefs';\nimport { IText } from './IText/IText';\nimport { classRegistry } from '../ClassRegistry';\nimport { createTextboxDefaultControls } from '../controls/commonControls';\nimport { JUSTIFY } from './Text/constants';\nimport type { TextStyleDeclaration } from './Text/StyledText';\nimport type { SerializedITextProps, ITextProps } from './IText/IText';\nimport type { ITextEvents } from './IText/ITextBehavior';\nimport type { TextLinesInfo } from './Text/Text';\nimport type { Control } from '../controls/Control';\n\n// @TODO: Many things here are configuration related and shouldn't be on the class nor prototype\n// regexes, list of properties that are not suppose to change by instances, magic consts.\n// this will be a separated effort\nexport const textboxDefaultValues: Partial<TClassProperties<Textbox>> = {\n  minWidth: 20,\n  dynamicMinWidth: 2,\n  lockScalingFlip: true,\n  noScaleCache: false,\n  _wordJoiners: /[ \\t\\r]/,\n  splitByGrapheme: false,\n};\n\nexport type GraphemeData = {\n  wordsData: {\n    word: string[];\n    width: number;\n  }[][];\n  largestWordWidth: number;\n};\n\nexport type StyleMap = Record<string, { line: number; offset: number }>;\n\n// @TODO this is not complete\ninterface UniqueTextboxProps {\n  minWidth: number;\n  splitByGrapheme: boolean;\n  dynamicMinWidth: number;\n  _wordJoiners: RegExp;\n}\n\nexport interface SerializedTextboxProps\n  extends SerializedITextProps,\n    Pick<UniqueTextboxProps, 'minWidth' | 'splitByGrapheme'> {}\n\nexport interface TextboxProps extends ITextProps, UniqueTextboxProps {}\n\n/**\n * Textbox class, based on IText, allows the user to resize the text rectangle\n * and wraps lines automatically. Textboxes have their Y scaling locked, the\n * user can only change width. Height is adjusted automatically based on the\n * wrapping of lines.\n */\nexport class Textbox<\n    Props extends TOptions<TextboxProps> = Partial<TextboxProps>,\n    SProps extends SerializedTextboxProps = SerializedTextboxProps,\n    EventSpec extends ITextEvents = ITextEvents,\n  >\n  extends IText<Props, SProps, EventSpec>\n  implements UniqueTextboxProps\n{\n  /**\n   * Minimum width of textbox, in pixels.\n   * @type Number\n   * @default\n   */\n  declare minWidth: number;\n\n  /**\n   * Minimum calculated width of a textbox, in pixels.\n   * fixed to 2 so that an empty textbox cannot go to 0\n   * and is still selectable without text.\n   * @type Number\n   * @default\n   */\n  declare dynamicMinWidth: number;\n\n  /**\n   * Use this boolean property in order to split strings that have no white space concept.\n   * this is a cheap way to help with chinese/japanese\n   * @type Boolean\n   * @since 2.6.0\n   */\n  declare splitByGrapheme: boolean;\n\n  declare _wordJoiners: RegExp;\n\n  declare _styleMap: StyleMap;\n\n  declare isWrapping: boolean;\n\n  static type = 'Textbox';\n\n  static textLayoutProperties = [...IText.textLayoutProperties, 'width'];\n\n  static ownDefaults = textboxDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...Textbox.ownDefaults,\n    };\n  }\n\n  /**\n   * Constructor\n   * @param {String} text Text string\n   * @param {Object} [options] Options object\n   */\n  constructor(text: string, options?: Props) {\n    super(text, { ...Textbox.ownDefaults, ...options } as Props);\n  }\n\n  /**\n   * Creates the default control object.\n   * If you prefer to have on instance of controls shared among all objects\n   * make this function return an empty object and add controls to the ownDefaults object\n   */\n  static createControls(): { controls: Record<string, Control> } {\n    return { controls: createTextboxDefaultControls() };\n  }\n\n  /**\n   * Unlike superclass's version of this function, Textbox does not update\n   * its width.\n   * @private\n   * @override\n   */\n  initDimensions() {\n    if (!this.initialized) {\n      return;\n    }\n    this.isEditing && this.initDelayedCursor();\n    this._clearCache();\n    // clear dynamicMinWidth as it will be different after we re-wrap line\n    this.dynamicMinWidth = 0;\n    // wrap lines\n    this._styleMap = this._generateStyleMap(this._splitText());\n    // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\n    if (this.dynamicMinWidth > this.width) {\n      this._set('width', this.dynamicMinWidth);\n    }\n    if (this.textAlign.includes(JUSTIFY)) {\n      // once text is measured we need to make space fatter to make justified text.\n      this.enlargeSpaces();\n    }\n    // clear cache and re-calculate height\n    this.height = this.calcTextHeight();\n  }\n\n  /**\n   * Generate an object that translates the style object so that it is\n   * broken up by visual lines (new lines and automatic wrapping).\n   * The original text styles object is broken up by actual lines (new lines only),\n   * which is only sufficient for Text / IText\n   * @private\n   */\n  _generateStyleMap(textInfo: TextLinesInfo): StyleMap {\n    let realLineCount = 0,\n      realLineCharCount = 0,\n      charCount = 0;\n    const map: StyleMap = {};\n\n    for (let i = 0; i < textInfo.graphemeLines.length; i++) {\n      if (textInfo.graphemeText[charCount] === '\\n' && i > 0) {\n        realLineCharCount = 0;\n        charCount++;\n        realLineCount++;\n      } else if (\n        !this.splitByGrapheme &&\n        this._reSpaceAndTab.test(textInfo.graphemeText[charCount]) &&\n        i > 0\n      ) {\n        // this case deals with space's that are removed from end of lines when wrapping\n        realLineCharCount++;\n        charCount++;\n      }\n\n      map[i] = { line: realLineCount, offset: realLineCharCount };\n\n      charCount += textInfo.graphemeLines[i].length;\n      realLineCharCount += textInfo.graphemeLines[i].length;\n    }\n\n    return map;\n  }\n\n  /**\n   * Returns true if object has a style property or has it on a specified line\n   * @param {Number} lineIndex\n   * @return {Boolean}\n   */\n  styleHas(property: keyof TextStyleDeclaration, lineIndex: number): boolean {\n    if (this._styleMap && !this.isWrapping) {\n      const map = this._styleMap[lineIndex];\n      if (map) {\n        lineIndex = map.line;\n      }\n    }\n    return super.styleHas(property, lineIndex);\n  }\n\n  /**\n   * Returns true if object has no styling or no styling in a line\n   * @param {Number} lineIndex , lineIndex is on wrapped lines.\n   * @return {Boolean}\n   */\n  isEmptyStyles(lineIndex: number): boolean {\n    if (!this.styles) {\n      return true;\n    }\n    let offset = 0,\n      nextLineIndex = lineIndex + 1,\n      nextOffset: number,\n      shouldLimit = false;\n    const map = this._styleMap[lineIndex],\n      mapNextLine = this._styleMap[lineIndex + 1];\n    if (map) {\n      lineIndex = map.line;\n      offset = map.offset;\n    }\n    if (mapNextLine) {\n      nextLineIndex = mapNextLine.line;\n      shouldLimit = nextLineIndex === lineIndex;\n      nextOffset = mapNextLine.offset;\n    }\n    const obj =\n      typeof lineIndex === 'undefined'\n        ? this.styles\n        : { line: this.styles[lineIndex] };\n    for (const p1 in obj) {\n      for (const p2 in obj[p1]) {\n        const p2Number = parseInt(p2, 10);\n        if (p2Number >= offset && (!shouldLimit || p2Number < nextOffset!)) {\n          // eslint-disable-next-line no-unused-vars\n          for (const p3 in obj[p1][p2]) {\n            return false;\n          }\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @protected\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {TextStyleDeclaration} a style object reference to the existing one or a new empty object when undefined\n   */\n  _getStyleDeclaration(\n    lineIndex: number,\n    charIndex: number,\n  ): TextStyleDeclaration {\n    if (this._styleMap && !this.isWrapping) {\n      const map = this._styleMap[lineIndex];\n      if (!map) {\n        return {};\n      }\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n    }\n    return super._getStyleDeclaration(lineIndex, charIndex);\n  }\n\n  /**\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @param {Object} style\n   * @private\n   */\n  protected _setStyleDeclaration(\n    lineIndex: number,\n    charIndex: number,\n    style: object,\n  ) {\n    const map = this._styleMap[lineIndex];\n    super._setStyleDeclaration(map.line, map.offset + charIndex, style);\n  }\n\n  /**\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @private\n   */\n  protected _deleteStyleDeclaration(lineIndex: number, charIndex: number) {\n    const map = this._styleMap[lineIndex];\n    super._deleteStyleDeclaration(map.line, map.offset + charIndex);\n  }\n\n  /**\n   * probably broken need a fix\n   * Returns the real style line that correspond to the wrapped lineIndex line\n   * Used just to verify if the line does exist or not.\n   * @param {Number} lineIndex\n   * @returns {Boolean} if the line exists or not\n   * @private\n   */\n  protected _getLineStyle(lineIndex: number): boolean {\n    const map = this._styleMap[lineIndex];\n    return !!this.styles[map.line];\n  }\n\n  /**\n   * Set the line style to an empty object so that is initialized\n   * @param {Number} lineIndex\n   * @param {Object} style\n   * @private\n   */\n  protected _setLineStyle(lineIndex: number) {\n    const map = this._styleMap[lineIndex];\n    super._setLineStyle(map.line);\n  }\n\n  /**\n   * Wraps text using the 'width' property of Textbox. First this function\n   * splits text on newlines, so we preserve newlines entered by the user.\n   * Then it wraps each line using the width of the Textbox by calling\n   * _wrapLine().\n   * @param {Array} lines The string array of text that is split into lines\n   * @param {Number} desiredWidth width you want to wrap to\n   * @returns {Array} Array of lines\n   */\n  _wrapText(lines: string[], desiredWidth: number): string[][] {\n    this.isWrapping = true;\n    // extract all thewords and the widths to optimally wrap lines.\n    const data = this.getGraphemeDataForRender(lines);\n    const wrapped: string[][] = [];\n    for (let i = 0; i < data.wordsData.length; i++) {\n      wrapped.push(...this._wrapLine(i, desiredWidth, data));\n    }\n    this.isWrapping = false;\n    return wrapped;\n  }\n\n  /**\n   * For each line of text terminated by an hard line stop,\n   * measure each word width and extract the largest word from all.\n   * The returned words here are the one that at the end will be rendered.\n   * @param {string[]} lines the lines we need to measure\n   *\n   */\n  getGraphemeDataForRender(lines: string[]): GraphemeData {\n    const splitByGrapheme = this.splitByGrapheme,\n      infix = splitByGrapheme ? '' : ' ';\n\n    let largestWordWidth = 0;\n\n    const data = lines.map((line, lineIndex) => {\n      let offset = 0;\n      const wordsOrGraphemes = splitByGrapheme\n        ? this.graphemeSplit(line)\n        : this.wordSplit(line);\n\n      if (wordsOrGraphemes.length === 0) {\n        return [{ word: [], width: 0 }];\n      }\n\n      return wordsOrGraphemes.map((word: string) => {\n        // if using splitByGrapheme words are already in graphemes.\n        const graphemeArray = splitByGrapheme\n          ? [word]\n          : this.graphemeSplit(word);\n        const width = this._measureWord(graphemeArray, lineIndex, offset);\n        largestWordWidth = Math.max(width, largestWordWidth);\n        offset += graphemeArray.length + infix.length;\n        return { word: graphemeArray, width };\n      });\n    });\n\n    return {\n      wordsData: data,\n      largestWordWidth,\n    };\n  }\n\n  /**\n   * Helper function to measure a string of text, given its lineIndex and charIndex offset\n   * It gets called when charBounds are not available yet.\n   * Override if necessary\n   * Use with {@link Textbox#wordSplit}\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {String} text\n   * @param {number} lineIndex\n   * @param {number} charOffset\n   * @returns {number}\n   */\n  _measureWord(word: string[], lineIndex: number, charOffset = 0): number {\n    let width = 0,\n      prevGrapheme;\n    const skipLeft = true;\n    for (let i = 0, len = word.length; i < len; i++) {\n      const box = this._getGraphemeBox(\n        word[i],\n        lineIndex,\n        i + charOffset,\n        prevGrapheme,\n        skipLeft,\n      );\n      width += box.kernedWidth;\n      prevGrapheme = word[i];\n    }\n    return width;\n  }\n\n  /**\n   * Override this method to customize word splitting\n   * Use with {@link Textbox#_measureWord}\n   * @param {string} value\n   * @returns {string[]} array of words\n   */\n  wordSplit(value: string): string[] {\n    return value.split(this._wordJoiners);\n  }\n\n  /**\n   * Wraps a line of text using the width of the Textbox as desiredWidth\n   * and leveraging the known width o words from GraphemeData\n   * @private\n   * @param {Number} lineIndex\n   * @param {Number} desiredWidth width you want to wrap the line to\n   * @param {GraphemeData} graphemeData an object containing all the lines' words width.\n   * @param {Number} reservedSpace space to remove from wrapping for custom functionalities\n   * @returns {Array} Array of line(s) into which the given text is wrapped\n   * to.\n   */\n  _wrapLine(\n    lineIndex: number,\n    desiredWidth: number,\n    { largestWordWidth, wordsData }: GraphemeData,\n    reservedSpace = 0,\n  ): string[][] {\n    const additionalSpace = this._getWidthOfCharSpacing(),\n      splitByGrapheme = this.splitByGrapheme,\n      graphemeLines = [],\n      infix = splitByGrapheme ? '' : ' ';\n\n    let lineWidth = 0,\n      line: string[] = [],\n      // spaces in different languages?\n      offset = 0,\n      infixWidth = 0,\n      lineJustStarted = true;\n\n    desiredWidth -= reservedSpace;\n\n    const maxWidth = Math.max(\n      desiredWidth,\n      largestWordWidth,\n      this.dynamicMinWidth,\n    );\n    // layout words\n    const data = wordsData[lineIndex];\n    offset = 0;\n    let i;\n    for (i = 0; i < data.length; i++) {\n      const { word, width: wordWidth } = data[i];\n      offset += word.length;\n\n      lineWidth += infixWidth + wordWidth - additionalSpace;\n      if (lineWidth > maxWidth && !lineJustStarted) {\n        graphemeLines.push(line);\n        line = [];\n        lineWidth = wordWidth;\n        lineJustStarted = true;\n      } else {\n        lineWidth += additionalSpace;\n      }\n\n      if (!lineJustStarted && !splitByGrapheme) {\n        line.push(infix);\n      }\n      line = line.concat(word);\n\n      infixWidth = splitByGrapheme\n        ? 0\n        : this._measureWord([infix], lineIndex, offset);\n      offset++;\n      lineJustStarted = false;\n    }\n\n    i && graphemeLines.push(line);\n\n    // TODO: this code is probably not necessary anymore.\n    // it can be moved out of this function since largestWordWidth is now\n    // known in advance\n    if (largestWordWidth + reservedSpace > this.dynamicMinWidth) {\n      this.dynamicMinWidth = largestWordWidth - additionalSpace + reservedSpace;\n    }\n    return graphemeLines;\n  }\n\n  /**\n   * Detect if the text line is ended with an hard break\n   * text and itext do not have wrapping, return false\n   * @param {Number} lineIndex text to split\n   * @return {Boolean}\n   */\n  isEndOfWrapping(lineIndex: number): boolean {\n    if (!this._styleMap[lineIndex + 1]) {\n      // is last line, return true;\n      return true;\n    }\n    if (this._styleMap[lineIndex + 1].line !== this._styleMap[lineIndex].line) {\n      // this is last line before a line break, return true;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Detect if a line has a linebreak and so we need to account for it when moving\n   * and counting style.\n   * This is important only for splitByGrapheme at the end of wrapping.\n   * If we are not wrapping the offset is always 1\n   * @return Number\n   */\n  missingNewlineOffset(lineIndex: number, skipWrapping?: boolean): 0 | 1 {\n    if (this.splitByGrapheme && !skipWrapping) {\n      return this.isEndOfWrapping(lineIndex) ? 1 : 0;\n    }\n    return 1;\n  }\n\n  /**\n   * Gets lines of text to render in the Textbox. This function calculates\n   * text wrapping on the fly every time it is called.\n   * @param {String} text text to split\n   * @returns {Array} Array of lines in the Textbox.\n   * @override\n   */\n  _splitTextIntoLines(text: string) {\n    const newText = super._splitTextIntoLines(text),\n      graphemeLines = this._wrapText(newText.lines, this.width),\n      lines = new Array(graphemeLines.length);\n    for (let i = 0; i < graphemeLines.length; i++) {\n      lines[i] = graphemeLines[i].join('');\n    }\n    newText.lines = lines;\n    newText.graphemeLines = graphemeLines;\n    return newText;\n  }\n\n  getMinWidth() {\n    return Math.max(this.minWidth, this.dynamicMinWidth);\n  }\n\n  _removeExtraneousStyles() {\n    const linesToKeep = new Map();\n    for (const prop in this._styleMap) {\n      const propNumber = parseInt(prop, 10);\n      if (this._textLines[propNumber]) {\n        const lineIndex = this._styleMap[prop].line;\n        linesToKeep.set(`${lineIndex}`, true);\n      }\n    }\n    for (const prop in this.styles) {\n      if (!linesToKeep.has(prop)) {\n        delete this.styles[prop];\n      }\n    }\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @method toObject\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return super.toObject<T, K>([\n      'minWidth',\n      'splitByGrapheme',\n      ...propertiesToInclude,\n    ] as K[]) as Pick<T, K> & SProps;\n  }\n}\n\nclassRegistry.setClass(Textbox);\n","import { Point } from '../../Point';\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\nimport { makeBoundingBoxFromPoints } from '../../util/misc/boundingBoxFromPoints';\nimport { sendPointToPlane } from '../../util/misc/planeChange';\nimport type { LayoutStrategyResult, StrictLayoutContext } from '../types';\nimport { LayoutStrategy } from './LayoutStrategy';\nimport { getObjectBounds } from './utils';\nimport { classRegistry } from '../../ClassRegistry';\n\n/**\n * Layout will adjust the bounding box to match the clip path bounding box.\n */\nexport class ClipPathLayout extends LayoutStrategy {\n  static readonly type = 'clip-path';\n\n  shouldPerformLayout(context: StrictLayoutContext): boolean {\n    return !!context.target.clipPath && super.shouldPerformLayout(context);\n  }\n\n  shouldLayoutClipPath() {\n    return false;\n  }\n\n  calcLayoutResult(\n    context: StrictLayoutContext,\n    objects: FabricObject[],\n  ): LayoutStrategyResult | undefined {\n    const { target } = context;\n    const { clipPath, group } = target;\n    if (!clipPath || !this.shouldPerformLayout(context)) {\n      return;\n    }\n    // TODO: remove stroke calculation from this case\n    const { width, height } = makeBoundingBoxFromPoints(\n      getObjectBounds(target, clipPath as FabricObject),\n    );\n    const size = new Point(width, height);\n    if (clipPath.absolutePositioned) {\n      //  we want the center point to exist in group's containing plane\n      const clipPathCenter = sendPointToPlane(\n        clipPath.getRelativeCenterPoint(),\n        undefined,\n        group ? group.calcTransformMatrix() : undefined,\n      );\n      return {\n        center: clipPathCenter,\n        size,\n      };\n    } else {\n      //  we want the center point to exist in group's containing plane, so we send it upwards\n      const clipPathCenter = clipPath\n        .getRelativeCenterPoint()\n        .transform(target.calcOwnMatrix(), true);\n      if (this.shouldPerformLayout(context)) {\n        // the clip path is positioned relative to the group's center which is affected by the bbox\n        // so we first calculate the bbox\n        const { center = new Point(), correction = new Point() } =\n          this.calcBoundingBox(objects, context) || {};\n        return {\n          center: center.add(clipPathCenter),\n          correction: correction.subtract(clipPathCenter),\n          size,\n        };\n      } else {\n        return {\n          center: target.getRelativeCenterPoint().add(clipPathCenter),\n          size,\n        };\n      }\n    }\n  }\n}\n\nclassRegistry.setClass(ClipPathLayout);\n","import { Point } from '../../Point';\nimport type {\n  InitializationLayoutContext,\n  LayoutStrategyResult,\n  StrictLayoutContext,\n} from '../types';\nimport { LayoutStrategy } from './LayoutStrategy';\nimport { classRegistry } from '../../ClassRegistry';\n\n/**\n * Layout will keep target's initial size.\n */\nexport class FixedLayout extends LayoutStrategy {\n  static readonly type = 'fixed';\n\n  /**\n   * @override respect target's initial size\n   */\n  getInitialSize(\n    { target }: StrictLayoutContext & InitializationLayoutContext,\n    { size }: Pick<LayoutStrategyResult, 'center' | 'size'>,\n  ): Point {\n    return new Point(target.width || size.x, target.height || size.y);\n  }\n}\n\nclassRegistry.setClass(FixedLayout);\n","import { LayoutManager } from './LayoutManager';\nimport type { RegistrationContext, StrictLayoutContext } from './types';\nimport type { Group } from '../shapes/Group';\n\n/**\n * Today the LayoutManager class also takes care of subscribing event handlers\n * to update the group layout when the group is interactive and a transform is applied\n * to a child object.\n * The ActiveSelection is never interactive, but it could contain objects from\n * groups that are.\n * The standard LayoutManager would subscribe the children of the activeSelection to\n * perform layout changes to the active selection itself, what we need instead is that\n * the transformation applied to the active selection will trigger changes to the\n * original group of the children ( the one referenced under the parent property )\n * This subclass of the LayoutManager has a single duty to fill the gap of this difference.`\n */\nexport class ActiveSelectionLayoutManager extends LayoutManager {\n  subscribeTargets(\n    context: RegistrationContext & Partial<StrictLayoutContext>,\n  ): void {\n    const activeSelection = context.target;\n    const parents = context.targets.reduce((parents, target) => {\n      target.parent && parents.add(target.parent);\n      return parents;\n    }, new Set<Group>());\n    parents.forEach((parent) => {\n      parent.layoutManager.subscribeTargets({\n        target: parent,\n        targets: [activeSelection],\n      });\n    });\n  }\n\n  /**\n   * unsubscribe from parent only if all its children were deselected\n   */\n  unsubscribeTargets(\n    context: RegistrationContext & Partial<StrictLayoutContext>,\n  ): void {\n    const activeSelection = context.target;\n    const selectedObjects = activeSelection.getObjects();\n    const parents = context.targets.reduce((parents, target) => {\n      target.parent && parents.add(target.parent);\n      return parents;\n    }, new Set<Group>());\n    parents.forEach((parent) => {\n      !selectedObjects.some((object) => object.parent === parent) &&\n        parent.layoutManager.unsubscribeTargets({\n          target: parent,\n          targets: [activeSelection],\n        });\n    });\n  }\n}\n","import type { ControlRenderingStyleOverride } from '../controls/controlRendering';\nimport { classRegistry } from '../ClassRegistry';\nimport type { GroupProps } from './Group';\nimport { Group } from './Group';\nimport type { FabricObject } from './Object/FabricObject';\nimport {\n  LAYOUT_TYPE_ADDED,\n  LAYOUT_TYPE_REMOVED,\n} from '../LayoutManager/constants';\nimport type { TClassProperties } from '../typedefs';\nimport { log } from '../util/internals/console';\nimport { ActiveSelectionLayoutManager } from '../LayoutManager/ActiveSelectionLayoutManager';\n\nexport type MultiSelectionStacking = 'canvas-stacking' | 'selection-order';\n\nexport interface ActiveSelectionOptions extends GroupProps {\n  multiSelectionStacking: MultiSelectionStacking;\n}\n\nconst activeSelectionDefaultValues: Partial<TClassProperties<ActiveSelection>> =\n  {\n    multiSelectionStacking: 'canvas-stacking',\n  };\n\n/**\n * Used by Canvas to manage selection.\n *\n * @example\n * class MyActiveSelection extends ActiveSelection {\n *   ...\n * }\n *\n * // override the default `ActiveSelection` class\n * classRegistry.setClass(MyActiveSelection)\n */\nexport class ActiveSelection extends Group {\n  static type = 'ActiveSelection';\n\n  static ownDefaults: Record<string, any> = activeSelectionDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return { ...super.getDefaults(), ...ActiveSelection.ownDefaults };\n  }\n\n  /**\n   * The ActiveSelection needs to use the ActiveSelectionLayoutManager\n   * or selections on interactive groups may be broken\n   */\n  declare layoutManager: ActiveSelectionLayoutManager;\n\n  /**\n   * controls how selected objects are added during a multiselection event\n   * - `canvas-stacking` adds the selected object to the active selection while respecting canvas object stacking order\n   * - `selection-order` adds the selected object to the top of the stack,\n   * meaning that the stack is ordered by the order in which objects were selected\n   * @default `canvas-stacking`\n   */\n  declare multiSelectionStacking: MultiSelectionStacking;\n\n  constructor(\n    objects: FabricObject[] = [],\n    options: Partial<ActiveSelectionOptions> = {},\n  ) {\n    super();\n    Object.assign(this, ActiveSelection.ownDefaults);\n    this.setOptions(options);\n    const { left, top, layoutManager } = options;\n    this.groupInit(objects, {\n      left,\n      top,\n      layoutManager: layoutManager ?? new ActiveSelectionLayoutManager(),\n    });\n  }\n\n  /**\n   * @private\n   */\n  _shouldSetNestedCoords() {\n    return true;\n  }\n\n  /**\n   * @private\n   * @override we don't want the selection monitor to be active\n   */\n  __objectSelectionMonitor() {\n    //  noop\n  }\n\n  /**\n   * Adds objects with respect to {@link multiSelectionStacking}\n   * @param targets object to add to selection\n   */\n  multiSelectAdd(...targets: FabricObject[]) {\n    if (this.multiSelectionStacking === 'selection-order') {\n      this.add(...targets);\n    } else {\n      //  respect object stacking as it is on canvas\n      //  perf enhancement for large ActiveSelection: consider a binary search of `isInFrontOf`\n      targets.forEach((target) => {\n        const index = this._objects.findIndex((obj) => obj.isInFrontOf(target));\n        const insertAt =\n          index === -1\n            ? //  `target` is in front of all other objects\n              this.size()\n            : index;\n        this.insertAt(insertAt, target);\n      });\n    }\n  }\n\n  /**\n   * @override block ancestors/descendants of selected objects from being selected to prevent a circular object tree\n   */\n  canEnterGroup(object: FabricObject) {\n    if (\n      this.getObjects().some(\n        (o) => o.isDescendantOf(object) || object.isDescendantOf(o),\n      )\n    ) {\n      //  prevent circular object tree\n      log(\n        'error',\n        'ActiveSelection: circular object trees are not supported, this call has no effect',\n      );\n      return false;\n    }\n\n    return super.canEnterGroup(object);\n  }\n\n  /**\n   * Change an object so that it can be part of an active selection.\n   * this method is called by multiselectAdd from canvas code.\n   * @private\n   * @param {FabricObject} object\n   * @param {boolean} [removeParentTransform] true if object is in canvas coordinate plane\n   */\n  enterGroup(object: FabricObject, removeParentTransform?: boolean) {\n    // This condition check that the object has currently a group, and the group\n    // is also its parent, meaning that is not in an active selection, but is\n    // in a normal group.\n    if (object.parent && object.parent === object.group) {\n      // Disconnect the object from the group functionalities, but keep the ref parent intact\n      // for later re-enter\n      object.parent._exitGroup(object);\n      // in this case the object is probably inside an active selection.\n    } else if (object.group && object.parent !== object.group) {\n      // in this case group.remove will also clear the old parent reference.\n      object.group.remove(object);\n    }\n    // enter the active selection from a render perspective\n    // the object will be in the objects array of both the ActiveSelection and the Group\n    // but referenced in the group's _activeObjects so that it won't be rendered twice.\n    this._enterGroup(object, removeParentTransform);\n  }\n\n  /**\n   * we want objects to retain their canvas ref when exiting instance\n   * @private\n   * @param {FabricObject} object\n   * @param {boolean} [removeParentTransform] true if object should exit group without applying group's transform to it\n   */\n  exitGroup(object: FabricObject, removeParentTransform?: boolean) {\n    this._exitGroup(object, removeParentTransform);\n    // return to parent\n    object.parent && object.parent._enterGroup(object, true);\n  }\n\n  /**\n   * @private\n   * @param {'added'|'removed'} type\n   * @param {FabricObject[]} targets\n   */\n  _onAfterObjectsChange(type: 'added' | 'removed', targets: FabricObject[]) {\n    super._onAfterObjectsChange(type, targets);\n    const groups = new Set<Group>();\n    targets.forEach((object) => {\n      const { parent } = object;\n      parent && groups.add(parent);\n    });\n    if (type === LAYOUT_TYPE_REMOVED) {\n      //  invalidate groups' layout and mark as dirty\n      groups.forEach((group) => {\n        group._onAfterObjectsChange(LAYOUT_TYPE_ADDED, targets);\n      });\n    } else {\n      //  mark groups as dirty\n      groups.forEach((group) => {\n        group._set('dirty', true);\n      });\n    }\n  }\n\n  /**\n   * @override remove all objects\n   */\n  onDeselect() {\n    this.removeAll();\n    return false;\n  }\n\n  /**\n   * Returns string representation of a group\n   * @return {String}\n   */\n  toString() {\n    return `#<ActiveSelection: (${this.complexity()})>`;\n  }\n\n  /**\n   * Decide if the object should cache or not. Create its own cache level\n   * objectCaching is a global flag, wins over everything\n   * needsItsOwnCache should be used when the object drawing method requires\n   * a cache step. None of the fabric classes requires it.\n   * Generally you do not cache objects in groups because the group outside is cached.\n   * @return {Boolean}\n   */\n  shouldCache() {\n    return false;\n  }\n\n  /**\n   * Check if this group or its parent group are caching, recursively up\n   * @return {Boolean}\n   */\n  isOnACache() {\n    return false;\n  }\n\n  /**\n   * Renders controls and borders for the object\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {Object} [styleOverride] properties to override the object style\n   * @param {Object} [childrenOverride] properties to override the children overrides\n   */\n  _renderControls(\n    ctx: CanvasRenderingContext2D,\n    styleOverride?: ControlRenderingStyleOverride,\n    childrenOverride?: ControlRenderingStyleOverride,\n  ) {\n    ctx.save();\n    ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n    const options = {\n      hasControls: false,\n      ...childrenOverride,\n      forActiveSelection: true,\n    };\n    for (let i = 0; i < this._objects.length; i++) {\n      this._objects[i]._renderControls(ctx, options);\n    }\n    super._renderControls(ctx, styleOverride);\n    ctx.restore();\n  }\n}\n\nclassRegistry.setClass(ActiveSelection);\nclassRegistry.setClass(ActiveSelection, 'activeSelection');\n","/**\n * Canvas 2D filter backend.\n */\nimport type { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TPipelineResources } from './typedefs';\n\nexport class Canvas2dFilterBackend {\n  /**\n   * Experimental. This object is a sort of repository of help layers used to avoid\n   * of recreating them during frequent filtering. If you are previewing a filter with\n   * a slider you probably do not want to create help layers every filter step.\n   * in this object there will be appended some canvases, created once, resized sometimes\n   * cleared never. Clearing is left to the developer.\n   **/\n  resources: TPipelineResources = {};\n\n  /**\n   * Apply a set of filters against a source image and draw the filtered output\n   * to the provided destination canvas.\n   *\n   * @param {EnhancedFilter} filters The filter to apply.\n   * @param {HTMLImageElement|HTMLCanvasElement} sourceElement The source to be filtered.\n   * @param {Number} sourceWidth The width of the source input.\n   * @param {Number} sourceHeight The height of the source input.\n   * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n   */\n  applyFilters(\n    filters: BaseFilter<string, Record<string, any>>[],\n    sourceElement: CanvasImageSource,\n    sourceWidth: number,\n    sourceHeight: number,\n    targetCanvas: HTMLCanvasElement,\n  ): T2DPipelineState | void {\n    const ctx = targetCanvas.getContext('2d');\n    if (!ctx) {\n      return;\n    }\n    ctx.drawImage(sourceElement, 0, 0, sourceWidth, sourceHeight);\n    const imageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n    const originalImageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n    const pipelineState: T2DPipelineState = {\n      sourceWidth,\n      sourceHeight,\n      imageData,\n      originalEl: sourceElement,\n      originalImageData,\n      canvasEl: targetCanvas,\n      ctx,\n      filterBackend: this,\n    };\n    filters.forEach((filter) => {\n      filter.applyTo(pipelineState);\n    });\n    const { imageData: imageDataPostFilter } = pipelineState;\n    if (\n      imageDataPostFilter.width !== sourceWidth ||\n      imageDataPostFilter.height !== sourceHeight\n    ) {\n      targetCanvas.width = imageDataPostFilter.width;\n      targetCanvas.height = imageDataPostFilter.height;\n    }\n    ctx.putImageData(imageDataPostFilter, 0, 0);\n    return pipelineState;\n  }\n}\n","import { config } from '../config';\nimport { createCanvasElementFor } from '../util/misc/dom';\nimport type {\n  TWebGLPipelineState,\n  TProgramCache,\n  TTextureCache,\n  TPipelineResources,\n} from './typedefs';\nimport type { BaseFilter } from './BaseFilter';\n\nexport class WebGLFilterBackend {\n  declare tileSize: number;\n\n  /**\n   * Define ...\n   **/\n  aPosition: Float32Array = new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]);\n\n  /**\n   * If GLPut data is the fastest operation, or if forced, this buffer will be used\n   * to transfer the data back in the 2d logic\n   **/\n  declare imageBuffer?: ArrayBuffer;\n\n  declare canvas: HTMLCanvasElement;\n\n  /**\n   * The Webgl context that will execute the operations for filtering\n   **/\n  declare gl: WebGLRenderingContext;\n\n  /**\n   * Keyed map for shader cache\n   **/\n  declare programCache: TProgramCache;\n\n  /**\n   * Keyed map for texture cache\n   **/\n  declare textureCache: TTextureCache;\n\n  /**\n   * Contains GPU info for debug\n   **/\n  declare gpuInfo: any;\n\n  /**\n   * Experimental. This object is a sort of repository of help layers used to avoid\n   * of recreating them during frequent filtering. If you are previewing a filter with\n   * a slider you probably do not want to create help layers every filter step.\n   * in this object there will be appended some canvases, created once, resized sometimes\n   * cleared never. Clearing is left to the developer.\n   **/\n  resources: TPipelineResources = {};\n\n  constructor({ tileSize = config.textureSize } = {}) {\n    this.tileSize = tileSize;\n    this.setupGLContext(tileSize, tileSize);\n    this.captureGPUInfo();\n  }\n\n  /**\n   * Setup a WebGL context suitable for filtering, and bind any needed event handlers.\n   */\n  setupGLContext(width: number, height: number): void {\n    this.dispose();\n    this.createWebGLCanvas(width, height);\n  }\n\n  /**\n   * Create a canvas element and associated WebGL context and attaches them as\n   * class properties to the GLFilterBackend class.\n   */\n  createWebGLCanvas(width: number, height: number): void {\n    const canvas = createCanvasElementFor({ width, height });\n    const glOptions = {\n        alpha: true,\n        premultipliedAlpha: false,\n        depth: false,\n        stencil: false,\n        antialias: false,\n      },\n      gl = canvas.getContext('webgl', glOptions) as WebGLRenderingContext;\n\n    if (!gl) {\n      return;\n    }\n    gl.clearColor(0, 0, 0, 0);\n    // this canvas can fire webglcontextlost and webglcontextrestored\n    this.canvas = canvas;\n    this.gl = gl;\n  }\n\n  /**\n   * Attempts to apply the requested filters to the source provided, drawing the filtered output\n   * to the provided target canvas.\n   *\n   * @param {Array} filters The filters to apply.\n   * @param {TexImageSource} source The source to be filtered.\n   * @param {Number} width The width of the source input.\n   * @param {Number} height The height of the source input.\n   * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n   * @param {String|undefined} cacheKey A key used to cache resources related to the source. If\n   * omitted, caching will be skipped.\n   */\n  applyFilters(\n    filters: BaseFilter<string, Record<string, any>>[],\n    source: TexImageSource,\n    width: number,\n    height: number,\n    targetCanvas: HTMLCanvasElement,\n    cacheKey?: string,\n  ): TWebGLPipelineState | undefined {\n    const gl = this.gl;\n    const ctx = targetCanvas.getContext('2d');\n    if (!gl || !ctx) {\n      return;\n    }\n    let cachedTexture;\n    if (cacheKey) {\n      cachedTexture = this.getCachedTexture(cacheKey, source);\n    }\n    const pipelineState: TWebGLPipelineState = {\n      originalWidth:\n        (source as HTMLImageElement).width ||\n        // @ts-expect-error is this a bug? should this be naturalWidth? or is this the pipeline state?\n        (source as HTMLImageElement).originalWidth ||\n        0,\n      originalHeight:\n        (source as HTMLImageElement).height ||\n        // @ts-expect-error is this a bug? should this be naturalHeight? or is this the pipeline state?\n        (source as HTMLImageElement).originalHeight ||\n        0,\n      sourceWidth: width,\n      sourceHeight: height,\n      destinationWidth: width,\n      destinationHeight: height,\n      context: gl,\n      sourceTexture: this.createTexture(\n        gl,\n        width,\n        height,\n        !cachedTexture ? source : undefined,\n      ),\n      targetTexture: this.createTexture(gl, width, height),\n      originalTexture:\n        cachedTexture ||\n        this.createTexture(\n          gl,\n          width,\n          height,\n          !cachedTexture ? source : undefined,\n        )!,\n      passes: filters.length,\n      webgl: true,\n      aPosition: this.aPosition,\n      programCache: this.programCache,\n      pass: 0,\n      filterBackend: this,\n      targetCanvas: targetCanvas,\n    };\n    const tempFbo = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, tempFbo);\n    filters.forEach((filter: any) => {\n      filter && filter.applyTo(pipelineState);\n    });\n    resizeCanvasIfNeeded(pipelineState);\n    this.copyGLTo2D(gl, pipelineState);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.deleteTexture(pipelineState.sourceTexture);\n    gl.deleteTexture(pipelineState.targetTexture);\n    gl.deleteFramebuffer(tempFbo);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    return pipelineState;\n  }\n\n  /**\n   * Detach event listeners, remove references, and clean up caches.\n   */\n  dispose() {\n    if (this.canvas) {\n      // we are disposing, we don't care about the fact\n      // that the canvas shouldn't be null.\n      // @ts-expect-error disposing\n      this.canvas = null;\n      // @ts-expect-error disposing\n      this.gl = null;\n    }\n    this.clearWebGLCaches();\n  }\n\n  /**\n   * Wipe out WebGL-related caches.\n   */\n  clearWebGLCaches() {\n    this.programCache = {};\n    this.textureCache = {};\n  }\n\n  /**\n   * Create a WebGL texture object.\n   *\n   * Accepts specific dimensions to initialize the texture to or a source image.\n   *\n   * @param {WebGLRenderingContext} gl The GL context to use for creating the texture.\n   * @param {number} width The width to initialize the texture at.\n   * @param {number} height The height to initialize the texture.\n   * @param {TexImageSource} textureImageSource A source for the texture data.\n   * @param {number} filter gl.NEAREST default or gl.LINEAR filters for the texture.\n   * This filter is very useful for LUTs filters. If you need interpolation use gl.LINEAR\n   * @returns {WebGLTexture}\n   */\n  createTexture(\n    gl: WebGLRenderingContext,\n    width: number,\n    height: number,\n    textureImageSource?: TexImageSource,\n    filter?:\n      | WebGLRenderingContextBase['NEAREST']\n      | WebGLRenderingContextBase['LINEAR'],\n  ) {\n    const {\n      NEAREST,\n      TEXTURE_2D,\n      RGBA,\n      UNSIGNED_BYTE,\n      CLAMP_TO_EDGE,\n      TEXTURE_MAG_FILTER,\n      TEXTURE_MIN_FILTER,\n      TEXTURE_WRAP_S,\n      TEXTURE_WRAP_T,\n    } = gl;\n    const texture = gl.createTexture();\n    gl.bindTexture(TEXTURE_2D, texture);\n    gl.texParameteri(TEXTURE_2D, TEXTURE_MAG_FILTER, filter || NEAREST);\n    gl.texParameteri(TEXTURE_2D, TEXTURE_MIN_FILTER, filter || NEAREST);\n    gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_S, CLAMP_TO_EDGE);\n    gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_T, CLAMP_TO_EDGE);\n    if (textureImageSource) {\n      gl.texImage2D(\n        TEXTURE_2D,\n        0,\n        RGBA,\n        RGBA,\n        UNSIGNED_BYTE,\n        textureImageSource,\n      );\n    } else {\n      gl.texImage2D(\n        TEXTURE_2D,\n        0,\n        RGBA,\n        width,\n        height,\n        0,\n        RGBA,\n        UNSIGNED_BYTE,\n        null,\n      );\n    }\n    return texture;\n  }\n\n  /**\n   * Can be optionally used to get a texture from the cache array\n   *\n   * If an existing texture is not found, a new texture is created and cached.\n   *\n   * @param {String} uniqueId A cache key to use to find an existing texture.\n   * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source to use to create the\n   * texture cache entry if one does not already exist.\n   */\n  getCachedTexture(\n    uniqueId: string,\n    textureImageSource: TexImageSource,\n    filter?:\n      | WebGLRenderingContextBase['NEAREST']\n      | WebGLRenderingContextBase['LINEAR'],\n  ): WebGLTexture | null {\n    const { textureCache } = this;\n    if (textureCache[uniqueId]) {\n      return textureCache[uniqueId];\n    } else {\n      const texture = this.createTexture(\n        this.gl,\n        (textureImageSource as HTMLImageElement).width,\n        (textureImageSource as HTMLImageElement).height,\n        textureImageSource,\n        filter,\n      );\n      if (texture) {\n        textureCache[uniqueId] = texture;\n      }\n      return texture;\n    }\n  }\n\n  /**\n   * Clear out cached resources related to a source image that has been\n   * filtered previously.\n   *\n   * @param {String} cacheKey The cache key provided when the source image was filtered.\n   */\n  evictCachesForKey(cacheKey: string) {\n    if (this.textureCache[cacheKey]) {\n      this.gl.deleteTexture(this.textureCache[cacheKey]);\n      delete this.textureCache[cacheKey];\n    }\n  }\n\n  /**\n   * Copy an input WebGL canvas on to an output 2D canvas.\n   *\n   * The WebGL canvas is assumed to be upside down, with the top-left pixel of the\n   * desired output image appearing in the bottom-left corner of the WebGL canvas.\n   *\n   * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n   * @param {Object} pipelineState The 2D target canvas to copy on to.\n   */\n  copyGLTo2D(gl: WebGLRenderingContext, pipelineState: TWebGLPipelineState) {\n    const glCanvas = gl.canvas,\n      targetCanvas = pipelineState.targetCanvas,\n      ctx = targetCanvas.getContext('2d');\n    if (!ctx) {\n      return;\n    }\n    ctx.translate(0, targetCanvas.height); // move it down again\n    ctx.scale(1, -1); // vertical flip\n    // where is my image on the big glcanvas?\n    const sourceY = glCanvas.height - targetCanvas.height;\n    ctx.drawImage(\n      glCanvas,\n      0,\n      sourceY,\n      targetCanvas.width,\n      targetCanvas.height,\n      0,\n      0,\n      targetCanvas.width,\n      targetCanvas.height,\n    );\n  }\n\n  /**\n   * Copy an input WebGL canvas on to an output 2D canvas using 2d canvas' putImageData\n   * API. Measurably faster than using ctx.drawImage in Firefox (version 54 on OSX Sierra).\n   *\n   * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n   * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n   * @param {Object} pipelineState The 2D target canvas to copy on to.\n   */\n  copyGLTo2DPutImageData(\n    this: Required<WebGLFilterBackend>,\n    gl: WebGLRenderingContext,\n    pipelineState: TWebGLPipelineState,\n  ) {\n    const targetCanvas = pipelineState.targetCanvas,\n      ctx = targetCanvas.getContext('2d'),\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight,\n      numBytes = dWidth * dHeight * 4;\n    if (!ctx) {\n      return;\n    }\n    const u8 = new Uint8Array(this.imageBuffer, 0, numBytes);\n    const u8Clamped = new Uint8ClampedArray(this.imageBuffer, 0, numBytes);\n\n    gl.readPixels(0, 0, dWidth, dHeight, gl.RGBA, gl.UNSIGNED_BYTE, u8);\n    const imgData = new ImageData(u8Clamped, dWidth, dHeight);\n    ctx.putImageData(imgData, 0, 0);\n  }\n\n  /**\n   * Attempt to extract GPU information strings from a WebGL context.\n   *\n   * Useful information when debugging or blacklisting specific GPUs.\n   *\n   * @returns {Object} A GPU info object with renderer and vendor strings.\n   */\n  captureGPUInfo() {\n    if (this.gpuInfo) {\n      return this.gpuInfo;\n    }\n    const gl = this.gl,\n      gpuInfo = { renderer: '', vendor: '' };\n    if (!gl) {\n      return gpuInfo;\n    }\n    const ext = gl.getExtension('WEBGL_debug_renderer_info');\n    if (ext) {\n      const renderer = gl.getParameter(ext.UNMASKED_RENDERER_WEBGL);\n      const vendor = gl.getParameter(ext.UNMASKED_VENDOR_WEBGL);\n      if (renderer) {\n        gpuInfo.renderer = renderer.toLowerCase();\n      }\n      if (vendor) {\n        gpuInfo.vendor = vendor.toLowerCase();\n      }\n    }\n    this.gpuInfo = gpuInfo;\n    return gpuInfo;\n  }\n}\n\nfunction resizeCanvasIfNeeded(pipelineState: TWebGLPipelineState): void {\n  const targetCanvas = pipelineState.targetCanvas,\n    width = targetCanvas.width,\n    height = targetCanvas.height,\n    dWidth = pipelineState.destinationWidth,\n    dHeight = pipelineState.destinationHeight;\n\n  if (width !== dWidth || height !== dHeight) {\n    targetCanvas.width = dWidth;\n    targetCanvas.height = dHeight;\n  }\n}\n","import { config } from '../config';\nimport { getEnv } from '../env';\nimport { createCanvasElement } from '../util/misc/dom';\nimport { Canvas2dFilterBackend } from './Canvas2dFilterBackend';\nimport { WebGLFilterBackend } from './WebGLFilterBackend';\n\nexport type FilterBackend = WebGLFilterBackend | Canvas2dFilterBackend;\n\nlet filterBackend: FilterBackend;\n\n/**\n * Verifies if it is possible to initialize webgl or fallback on a canvas2d filtering backend\n */\nexport function initFilterBackend(): FilterBackend {\n  const { WebGLProbe } = getEnv();\n  WebGLProbe.queryWebGL(createCanvasElement());\n  if (config.enableGLFiltering && WebGLProbe.isSupported(config.textureSize)) {\n    return new WebGLFilterBackend({ tileSize: config.textureSize });\n  } else {\n    return new Canvas2dFilterBackend();\n  }\n}\n\n/**\n * Get the current fabricJS filter backend  or initialize one if not available yet\n * @param [strict] pass `true` to create the backend if it wasn't created yet (default behavior),\n * pass `false` to get the backend ref without mutating it\n */\nexport function getFilterBackend(strict = true): FilterBackend {\n  if (!filterBackend && strict) {\n    filterBackend = initFilterBackend();\n  }\n  return filterBackend;\n}\n\nexport function setFilterBackend(backend: FilterBackend) {\n  filterBackend = backend;\n}\n","import { getFabricDocument, getEnv } from '../env';\nimport type { BaseFilter } from '../filters/BaseFilter';\nimport { getFilterBackend } from '../filters/FilterBackend';\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport type {\n  TClassProperties,\n  TCrossOrigin,\n  TSize,\n  Abortable,\n  TOptions,\n} from '../typedefs';\nimport { uid } from '../util/internals/uid';\nimport { createCanvasElementFor } from '../util/misc/dom';\nimport { findScaleToCover, findScaleToFit } from '../util/misc/findScaleTo';\nimport type { LoadImageOptions } from '../util/misc/objectEnlive';\nimport {\n  enlivenObjectEnlivables,\n  enlivenObjects,\n  loadImage,\n} from '../util/misc/objectEnlive';\nimport { parsePreserveAspectRatioAttribute } from '../util/misc/svgParsing';\nimport { classRegistry } from '../ClassRegistry';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { ObjectEvents } from '../EventTypeDefs';\nimport { WebGLFilterBackend } from '../filters/WebGLFilterBackend';\nimport { FILL, NONE } from '../constants';\nimport { getDocumentFromElement } from '../util/dom_misc';\nimport type { CSSRules } from '../parser/typedefs';\nimport type { Resize } from '../filters/Resize';\nimport type { TCachedFabricObject } from './Object/Object';\nimport { log } from '../util/internals/console';\n\n// @todo Would be nice to have filtering code not imported directly.\n\nexport type ImageSource =\n  | HTMLImageElement\n  | HTMLVideoElement\n  | HTMLCanvasElement;\n\ninterface UniqueImageProps {\n  srcFromAttribute: boolean;\n  minimumScaleTrigger: number;\n  cropX: number;\n  cropY: number;\n  imageSmoothing: boolean;\n  filters: BaseFilter<string, Record<string, any>>[];\n  resizeFilter?: Resize;\n}\n\nexport const imageDefaultValues: Partial<TClassProperties<FabricImage>> = {\n  strokeWidth: 0,\n  srcFromAttribute: false,\n  minimumScaleTrigger: 0.5,\n  cropX: 0,\n  cropY: 0,\n  imageSmoothing: true,\n};\n\nexport interface SerializedImageProps extends SerializedObjectProps {\n  src: string;\n  crossOrigin: TCrossOrigin;\n  filters: any[];\n  resizeFilter?: any;\n  cropX: number;\n  cropY: number;\n}\n\nexport interface ImageProps extends FabricObjectProps, UniqueImageProps {}\n\nconst IMAGE_PROPS = ['cropX', 'cropY'] as const;\n\n/**\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\n */\nexport class FabricImage<\n    Props extends TOptions<ImageProps> = Partial<ImageProps>,\n    SProps extends SerializedImageProps = SerializedImageProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends FabricObject<Props, SProps, EventSpec>\n  implements ImageProps\n{\n  /**\n   * When calling {@link FabricImage.getSrc}, return value from element src with `element.getAttribute('src')`.\n   * This allows for relative urls as image src.\n   * @since 2.7.0\n   * @type Boolean\n   * @default false\n   */\n  declare srcFromAttribute: boolean;\n\n  /**\n   * private\n   * contains last value of scaleX to detect\n   * if the Image got resized after the last Render\n   * @type Number\n   */\n  protected _lastScaleX = 1;\n\n  /**\n   * private\n   * contains last value of scaleY to detect\n   * if the Image got resized after the last Render\n   * @type Number\n   */\n  protected _lastScaleY = 1;\n\n  /**\n   * private\n   * contains last value of scaling applied by the apply filter chain\n   * @type Number\n   */\n  protected _filterScalingX = 1;\n\n  /**\n   * private\n   * contains last value of scaling applied by the apply filter chain\n   * @type Number\n   */\n  protected _filterScalingY = 1;\n\n  /**\n   * minimum scale factor under which any resizeFilter is triggered to resize the image\n   * 0 will disable the automatic resize. 1 will trigger automatically always.\n   * number bigger than 1 are not implemented yet.\n   * @type Number\n   */\n  declare minimumScaleTrigger: number;\n\n  /**\n   * key used to retrieve the texture representing this image\n   * @since 2.0.0\n   * @type String\n   * @default\n   */\n  declare cacheKey: string;\n\n  /**\n   * Image crop in pixels from original image size.\n   * @since 2.0.0\n   * @type Number\n   * @default\n   */\n  declare cropX: number;\n\n  /**\n   * Image crop in pixels from original image size.\n   * @since 2.0.0\n   * @type Number\n   * @default\n   */\n  declare cropY: number;\n\n  /**\n   * Indicates whether this canvas will use image smoothing when painting this image.\n   * Also influence if the cacheCanvas for this image uses imageSmoothing\n   * @since 4.0.0-beta.11\n   * @type Boolean\n   * @default\n   */\n  declare imageSmoothing: boolean;\n\n  declare preserveAspectRatio: string;\n\n  protected declare src: string;\n\n  declare filters: BaseFilter<string, Record<string, any>>[];\n  declare resizeFilter: Resize;\n\n  declare _element: ImageSource;\n  declare _filteredEl?: HTMLCanvasElement;\n  declare _originalElement: ImageSource;\n\n  static type = 'Image';\n\n  static cacheProperties = [...cacheProperties, ...IMAGE_PROPS];\n\n  static ownDefaults = imageDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...FabricImage.ownDefaults,\n    };\n  }\n  /**\n   * Constructor\n   * Image can be initialized with any canvas drawable or a string.\n   * The string should be a url and will be loaded as an image.\n   * Canvas and Image element work out of the box, while videos require extra code to work.\n   * Please check video element events for seeking.\n   * @param {ImageSource | string} element Image element\n   * @param {Object} [options] Options object\n   */\n  constructor(elementId: string, options?: Props);\n  constructor(element: ImageSource, options?: Props);\n  constructor(arg0: ImageSource | string, options?: Props) {\n    super();\n    this.filters = [];\n    Object.assign(this, FabricImage.ownDefaults);\n    this.setOptions(options);\n    this.cacheKey = `texture${uid()}`;\n    this.setElement(\n      typeof arg0 === 'string'\n        ? ((\n            (this.canvas && getDocumentFromElement(this.canvas.getElement())) ||\n            getFabricDocument()\n          ).getElementById(arg0) as ImageSource)\n        : arg0,\n      options,\n    );\n  }\n\n  /**\n   * Returns image element which this instance if based on\n   */\n  getElement() {\n    return this._element;\n  }\n\n  /**\n   * Sets image element for this instance to a specified one.\n   * If filters defined they are applied to new image.\n   * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n   * @param {HTMLImageElement} element\n   * @param {Partial<TSize>} [size] Options object\n   */\n  setElement(element: ImageSource, size: Partial<TSize> = {}) {\n    this.removeTexture(this.cacheKey);\n    this.removeTexture(`${this.cacheKey}_filtered`);\n    this._element = element;\n    this._originalElement = element;\n    this._setWidthHeight(size);\n    element.classList.add(FabricImage.CSS_CANVAS);\n    if (this.filters.length !== 0) {\n      this.applyFilters();\n    }\n    // resizeFilters work on the already filtered copy.\n    // we need to apply resizeFilters AFTER normal filters.\n    // applyResizeFilters is run more often than normal filters\n    // and is triggered by user interactions rather than dev code\n    if (this.resizeFilter) {\n      this.applyResizeFilters();\n    }\n  }\n\n  /**\n   * Delete a single texture if in webgl mode\n   */\n  removeTexture(key: string) {\n    const backend = getFilterBackend(false);\n    if (backend instanceof WebGLFilterBackend) {\n      backend.evictCachesForKey(key);\n    }\n  }\n\n  /**\n   * Delete textures, reference to elements and eventually JSDOM cleanup\n   */\n  dispose() {\n    super.dispose();\n    this.removeTexture(this.cacheKey);\n    this.removeTexture(`${this.cacheKey}_filtered`);\n    this._cacheContext = null;\n    (\n      ['_originalElement', '_element', '_filteredEl', '_cacheCanvas'] as const\n    ).forEach((elementKey) => {\n      const el = this[elementKey];\n      el && getEnv().dispose(el);\n      // @ts-expect-error disposing\n      this[elementKey] = undefined;\n    });\n  }\n\n  /**\n   * Get the crossOrigin value (of the corresponding image element)\n   */\n  getCrossOrigin(): string | null {\n    return (\n      this._originalElement &&\n      ((this._originalElement as any).crossOrigin || null)\n    );\n  }\n\n  /**\n   * Returns original size of an image\n   */\n  getOriginalSize() {\n    const element = this.getElement() as any;\n    if (!element) {\n      return {\n        width: 0,\n        height: 0,\n      };\n    }\n    return {\n      width: element.naturalWidth || element.width,\n      height: element.naturalHeight || element.height,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _stroke(ctx: CanvasRenderingContext2D) {\n    if (!this.stroke || this.strokeWidth === 0) {\n      return;\n    }\n    const w = this.width / 2,\n      h = this.height / 2;\n    ctx.beginPath();\n    ctx.moveTo(-w, -h);\n    ctx.lineTo(w, -h);\n    ctx.lineTo(w, h);\n    ctx.lineTo(-w, h);\n    ctx.lineTo(-w, -h);\n    ctx.closePath();\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} Object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    const filters: Record<string, any>[] = [];\n    this.filters.forEach((filterObj) => {\n      filterObj && filters.push(filterObj.toObject());\n    });\n    return {\n      ...super.toObject([...IMAGE_PROPS, ...propertiesToInclude]),\n      src: this.getSrc(),\n      crossOrigin: this.getCrossOrigin(),\n      filters,\n      ...(this.resizeFilter\n        ? { resizeFilter: this.resizeFilter.toObject() }\n        : {}),\n    };\n  }\n\n  /**\n   * Returns true if an image has crop applied, inspecting values of cropX,cropY,width,height.\n   * @return {Boolean}\n   */\n  hasCrop() {\n    return (\n      !!this.cropX ||\n      !!this.cropY ||\n      this.width < this._element.width ||\n      this.height < this._element.height\n    );\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @return {string[]} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG() {\n    const imageMarkup: string[] = [],\n      element = this._element,\n      x = -this.width / 2,\n      y = -this.height / 2;\n    let svgString: string[] = [],\n      strokeSvg: string[] = [],\n      clipPath = '',\n      imageRendering = '';\n    if (!element) {\n      return [];\n    }\n    if (this.hasCrop()) {\n      const clipPathId = uid();\n      svgString.push(\n        '<clipPath id=\"imageCrop_' + clipPathId + '\">\\n',\n        '\\t<rect x=\"' +\n          x +\n          '\" y=\"' +\n          y +\n          '\" width=\"' +\n          this.width +\n          '\" height=\"' +\n          this.height +\n          '\" />\\n',\n        '</clipPath>\\n',\n      );\n      clipPath = ' clip-path=\"url(#imageCrop_' + clipPathId + ')\" ';\n    }\n    if (!this.imageSmoothing) {\n      imageRendering = ' image-rendering=\"optimizeSpeed\"';\n    }\n    imageMarkup.push(\n      '\\t<image ',\n      'COMMON_PARTS',\n      `xlink:href=\"${this.getSvgSrc(true)}\" x=\"${x - this.cropX}\" y=\"${\n        y - this.cropY\n        // we're essentially moving origin of transformation from top/left corner to the center of the shape\n        // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n        // so that object's center aligns with container's left/top\n      }\" width=\"${\n        element.width || (element as HTMLImageElement).naturalWidth\n      }\" height=\"${\n        element.height || (element as HTMLImageElement).naturalHeight\n      }\"${imageRendering}${clipPath}></image>\\n`,\n    );\n\n    if (this.stroke || this.strokeDashArray) {\n      const origFill = this.fill;\n      this.fill = null;\n      strokeSvg = [\n        `\\t<rect x=\"${x}\" y=\"${y}\" width=\"${this.width}\" height=\"${\n          this.height\n        }\" style=\"${this.getSvgStyles()}\" />\\n`,\n      ];\n      this.fill = origFill;\n    }\n    if (this.paintFirst !== FILL) {\n      svgString = svgString.concat(strokeSvg, imageMarkup);\n    } else {\n      svgString = svgString.concat(imageMarkup, strokeSvg);\n    }\n    return svgString;\n  }\n\n  /**\n   * Returns source of an image\n   * @param {Boolean} filtered indicates if the src is needed for svg\n   * @return {String} Source of an image\n   */\n  getSrc(filtered?: boolean): string {\n    const element = filtered ? this._element : this._originalElement;\n    if (element) {\n      if ((element as HTMLCanvasElement).toDataURL) {\n        return (element as HTMLCanvasElement).toDataURL();\n      }\n\n      if (this.srcFromAttribute) {\n        return element.getAttribute('src') || '';\n      } else {\n        return (element as HTMLImageElement).src;\n      }\n    } else {\n      return this.src || '';\n    }\n  }\n\n  /**\n   * Alias for getSrc\n   * @param filtered\n   * @deprecated\n   */\n  getSvgSrc(filtered?: boolean) {\n    return this.getSrc(filtered);\n  }\n\n  /**\n   * Loads and sets source of an image\\\n   * **IMPORTANT**: It is recommended to abort loading tasks before calling this method to prevent race conditions and unnecessary networking\n   * @param {String} src Source string (URL)\n   * @param {LoadImageOptions} [options] Options object\n   */\n  setSrc(src: string, { crossOrigin, signal }: LoadImageOptions = {}) {\n    return loadImage(src, { crossOrigin, signal }).then((img) => {\n      typeof crossOrigin !== 'undefined' && this.set({ crossOrigin });\n      this.setElement(img);\n    });\n  }\n\n  /**\n   * Returns string representation of an instance\n   * @return {String} String representation of an instance\n   */\n  toString() {\n    return `#<Image: { src: \"${this.getSrc()}\" }>`;\n  }\n\n  applyResizeFilters() {\n    const filter = this.resizeFilter,\n      minimumScale = this.minimumScaleTrigger,\n      objectScale = this.getTotalObjectScaling(),\n      scaleX = objectScale.x,\n      scaleY = objectScale.y,\n      elementToFilter = this._filteredEl || this._originalElement;\n    if (this.group) {\n      this.set('dirty', true);\n    }\n    if (!filter || (scaleX > minimumScale && scaleY > minimumScale)) {\n      this._element = elementToFilter;\n      this._filterScalingX = 1;\n      this._filterScalingY = 1;\n      this._lastScaleX = scaleX;\n      this._lastScaleY = scaleY;\n      return;\n    }\n    const canvasEl = createCanvasElementFor(elementToFilter),\n      { width, height } = elementToFilter;\n    this._element = canvasEl;\n    this._lastScaleX = filter.scaleX = scaleX;\n    this._lastScaleY = filter.scaleY = scaleY;\n    getFilterBackend().applyFilters(\n      [filter],\n      elementToFilter,\n      width,\n      height,\n      this._element,\n    );\n    this._filterScalingX = canvasEl.width / this._originalElement.width;\n    this._filterScalingY = canvasEl.height / this._originalElement.height;\n  }\n\n  /**\n   * Applies filters assigned to this image (from \"filters\" array) or from filter param\n   * @method applyFilters\n   * @param {Array} filters to be applied\n   * @param {Boolean} forResizing specify if the filter operation is a resize operation\n   */\n  applyFilters(\n    filters: BaseFilter<string, Record<string, any>>[] = this.filters || [],\n  ) {\n    filters = filters.filter((filter) => filter && !filter.isNeutralState());\n    this.set('dirty', true);\n\n    // needs to clear out or WEBGL will not resize correctly\n    this.removeTexture(`${this.cacheKey}_filtered`);\n\n    if (filters.length === 0) {\n      this._element = this._originalElement;\n      // this is unsafe and needs to be rethinkend\n      this._filteredEl = undefined;\n      this._filterScalingX = 1;\n      this._filterScalingY = 1;\n      return;\n    }\n\n    const imgElement = this._originalElement,\n      sourceWidth =\n        (imgElement as HTMLImageElement).naturalWidth || imgElement.width,\n      sourceHeight =\n        (imgElement as HTMLImageElement).naturalHeight || imgElement.height;\n\n    if (this._element === this._originalElement) {\n      // if the _element a reference to _originalElement\n      // we need to create a new element to host the filtered pixels\n      const canvasEl = createCanvasElementFor({\n        width: sourceWidth,\n        height: sourceHeight,\n      });\n      this._element = canvasEl;\n      this._filteredEl = canvasEl;\n    } else if (this._filteredEl) {\n      // if the _element is it own element,\n      // and we also have a _filteredEl, then we clean up _filteredEl\n      // and we assign it to _element.\n      // in this way we invalidate the eventual old resize filtered element\n      this._element = this._filteredEl;\n      this._filteredEl\n        .getContext('2d')!\n        .clearRect(0, 0, sourceWidth, sourceHeight);\n      // we also need to resize again at next renderAll, so remove saved _lastScaleX/Y\n      this._lastScaleX = 1;\n      this._lastScaleY = 1;\n    }\n    getFilterBackend().applyFilters(\n      filters,\n      this._originalElement,\n      sourceWidth,\n      sourceHeight,\n      this._element as HTMLCanvasElement,\n    );\n    if (\n      this._originalElement.width !== this._element.width ||\n      this._originalElement.height !== this._element.height\n    ) {\n      this._filterScalingX = this._element.width / this._originalElement.width;\n      this._filterScalingY =\n        this._element.height / this._originalElement.height;\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    ctx.imageSmoothingEnabled = this.imageSmoothing;\n    if (this.isMoving !== true && this.resizeFilter && this._needsResize()) {\n      this.applyResizeFilters();\n    }\n    this._stroke(ctx);\n    this._renderPaintInOrder(ctx);\n  }\n\n  /**\n   * Paint the cached copy of the object on the target context.\n   * it will set the imageSmoothing for the draw operation\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  drawCacheOnCanvas(\n    this: TCachedFabricObject<FabricImage>,\n    ctx: CanvasRenderingContext2D,\n  ) {\n    ctx.imageSmoothingEnabled = this.imageSmoothing;\n    super.drawCacheOnCanvas(ctx);\n  }\n\n  /**\n   * Decide if the object should cache or not. Create its own cache level\n   * needsItsOwnCache should be used when the object drawing method requires\n   * a cache step. None of the fabric classes requires it.\n   * Generally you do not cache objects in groups because the group outside is cached.\n   * This is the special image version where we would like to avoid caching where possible.\n   * Essentially images do not benefit from caching. They may require caching, and in that\n   * case we do it. Also caching an image usually ends in a loss of details.\n   * A full performance audit should be done.\n   * @return {Boolean}\n   */\n  shouldCache() {\n    return this.needsItsOwnCache();\n  }\n\n  _renderFill(ctx: CanvasRenderingContext2D) {\n    const elementToDraw = this._element;\n    if (!elementToDraw) {\n      return;\n    }\n    const scaleX = this._filterScalingX,\n      scaleY = this._filterScalingY,\n      w = this.width,\n      h = this.height,\n      // crop values cannot be lesser than 0.\n      cropX = Math.max(this.cropX, 0),\n      cropY = Math.max(this.cropY, 0),\n      elWidth =\n        (elementToDraw as HTMLImageElement).naturalWidth || elementToDraw.width,\n      elHeight =\n        (elementToDraw as HTMLImageElement).naturalHeight ||\n        elementToDraw.height,\n      sX = cropX * scaleX,\n      sY = cropY * scaleY,\n      // the width height cannot exceed element width/height, starting from the crop offset.\n      sW = Math.min(w * scaleX, elWidth - sX),\n      sH = Math.min(h * scaleY, elHeight - sY),\n      x = -w / 2,\n      y = -h / 2,\n      maxDestW = Math.min(w, elWidth / scaleX - cropX),\n      maxDestH = Math.min(h, elHeight / scaleY - cropY);\n\n    elementToDraw &&\n      ctx.drawImage(elementToDraw, sX, sY, sW, sH, x, y, maxDestW, maxDestH);\n  }\n\n  /**\n   * needed to check if image needs resize\n   * @private\n   */\n  _needsResize() {\n    const scale = this.getTotalObjectScaling();\n    return scale.x !== this._lastScaleX || scale.y !== this._lastScaleY;\n  }\n\n  /**\n   * @private\n   * @deprecated unused\n   */\n  _resetWidthHeight() {\n    this.set(this.getOriginalSize());\n  }\n\n  /**\n   * @private\n   * Set the width and the height of the image object, using the element or the\n   * options.\n   */\n  _setWidthHeight({ width, height }: Partial<TSize> = {}) {\n    const size = this.getOriginalSize();\n    this.width = width || size.width;\n    this.height = height || size.height;\n  }\n\n  /**\n   * Calculate offset for center and scale factor for the image in order to respect\n   * the preserveAspectRatio attribute\n   * @private\n   */\n  parsePreserveAspectRatioAttribute() {\n    const pAR = parsePreserveAspectRatioAttribute(\n        this.preserveAspectRatio || '',\n      ),\n      pWidth = this.width,\n      pHeight = this.height,\n      parsedAttributes = { width: pWidth, height: pHeight };\n    let rWidth = this._element.width,\n      rHeight = this._element.height,\n      scaleX = 1,\n      scaleY = 1,\n      offsetLeft = 0,\n      offsetTop = 0,\n      cropX = 0,\n      cropY = 0,\n      offset;\n\n    if (pAR && (pAR.alignX !== NONE || pAR.alignY !== NONE)) {\n      if (pAR.meetOrSlice === 'meet') {\n        scaleX = scaleY = findScaleToFit(this._element, parsedAttributes);\n        offset = (pWidth - rWidth * scaleX) / 2;\n        if (pAR.alignX === 'Min') {\n          offsetLeft = -offset;\n        }\n        if (pAR.alignX === 'Max') {\n          offsetLeft = offset;\n        }\n        offset = (pHeight - rHeight * scaleY) / 2;\n        if (pAR.alignY === 'Min') {\n          offsetTop = -offset;\n        }\n        if (pAR.alignY === 'Max') {\n          offsetTop = offset;\n        }\n      }\n      if (pAR.meetOrSlice === 'slice') {\n        scaleX = scaleY = findScaleToCover(this._element, parsedAttributes);\n        offset = rWidth - pWidth / scaleX;\n        if (pAR.alignX === 'Mid') {\n          cropX = offset / 2;\n        }\n        if (pAR.alignX === 'Max') {\n          cropX = offset;\n        }\n        offset = rHeight - pHeight / scaleY;\n        if (pAR.alignY === 'Mid') {\n          cropY = offset / 2;\n        }\n        if (pAR.alignY === 'Max') {\n          cropY = offset;\n        }\n        rWidth = pWidth / scaleX;\n        rHeight = pHeight / scaleY;\n      }\n    } else {\n      scaleX = pWidth / rWidth;\n      scaleY = pHeight / rHeight;\n    }\n    return {\n      width: rWidth,\n      height: rHeight,\n      scaleX,\n      scaleY,\n      offsetLeft,\n      offsetTop,\n      cropX,\n      cropY,\n    };\n  }\n\n  /**\n   * Default CSS class name for canvas\n   * @static\n   * @type String\n   * @default\n   */\n  static CSS_CANVAS = 'canvas-img';\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link FabricImage.fromElement})\n   * @static\n   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n   */\n  static ATTRIBUTE_NAMES = [\n    ...SHARED_ATTRIBUTES,\n    'x',\n    'y',\n    'width',\n    'height',\n    'preserveAspectRatio',\n    'xlink:href',\n    'crossOrigin',\n    'image-rendering',\n  ];\n\n  /**\n   * Creates an instance of FabricImage from its object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {object} [options] Options object\n   * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @returns {Promise<FabricImage>}\n   */\n  static fromObject<T extends TOptions<SerializedImageProps>>(\n    { filters: f, resizeFilter: rf, src, crossOrigin, type, ...object }: T,\n    options?: Abortable,\n  ) {\n    return Promise.all([\n      loadImage(src!, { ...options, crossOrigin }),\n      f && enlivenObjects<BaseFilter<string>>(f, options),\n      // TODO: redundant - handled by enlivenObjectEnlivables\n      rf && enlivenObjects<BaseFilter<'Resize'>>([rf], options),\n      enlivenObjectEnlivables(object, options),\n    ]).then(([el, filters = [], [resizeFilter] = [], hydratedProps = {}]) => {\n      return new this(el, {\n        ...object,\n        // TODO: this creates a difference between image creation and restoring from JSON\n        src,\n        filters,\n        resizeFilter,\n        ...hydratedProps,\n      });\n    });\n  }\n\n  /**\n   * Creates an instance of Image from an URL string\n   * @static\n   * @param {String} url URL to create an image from\n   * @param {LoadImageOptions} [options] Options object\n   * @returns {Promise<FabricImage>}\n   */\n  static fromURL<T extends TOptions<ImageProps>>(\n    url: string,\n    { crossOrigin = null, signal }: LoadImageOptions = {},\n    imageOptions?: T,\n  ): Promise<FabricImage> {\n    return loadImage(url, { crossOrigin, signal }).then(\n      (img) => new this(img, imageOptions),\n    );\n  }\n\n  /**\n   * Returns {@link FabricImage} instance from an SVG element\n   * @static\n   * @param {HTMLElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @param {Function} callback Callback to execute when Image object is created\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable = {},\n    cssRules?: CSSRules,\n  ) {\n    const parsedAttributes = parseAttributes(\n      element,\n      this.ATTRIBUTE_NAMES,\n      cssRules,\n    );\n    return this.fromURL(\n      parsedAttributes['xlink:href'],\n      options,\n      parsedAttributes,\n    ).catch((err) => {\n      log('log', 'Unable to parse Image', err);\n      return null;\n    });\n  }\n}\n\nclassRegistry.setClass(FabricImage);\nclassRegistry.setSVGClass(FabricImage);\n","import { svgNS } from './constants';\nimport {\n  parsePreserveAspectRatioAttribute,\n  parseUnit,\n} from '../util/misc/svgParsing';\nimport { svgViewBoxElementsRegEx, reViewBoxAttrValue } from './constants';\nimport { NONE } from '../constants';\n\nexport type ParsedViewboxTransform = Partial<{\n  width: number;\n  height: number;\n  minX: number;\n  minY: number;\n  viewBoxWidth: number;\n  viewBoxHeight: number;\n}>;\n\n/**\n * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\n */\nexport function applyViewboxTransform(\n  element: Element,\n): ParsedViewboxTransform {\n  if (!svgViewBoxElementsRegEx.test(element.nodeName)) {\n    return {};\n  }\n  const viewBoxAttr: string | null = element.getAttribute('viewBox');\n  let scaleX = 1;\n  let scaleY = 1;\n  let minX = 0;\n  let minY = 0;\n  let matrix;\n  let el;\n  const widthAttr = element.getAttribute('width');\n  const heightAttr = element.getAttribute('height');\n  const x = element.getAttribute('x') || 0;\n  const y = element.getAttribute('y') || 0;\n  const goodViewbox = viewBoxAttr && reViewBoxAttrValue.test(viewBoxAttr);\n  const missingViewBox = !goodViewbox;\n  const missingDimAttr =\n    !widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%';\n\n  let translateMatrix = '';\n  let widthDiff = 0;\n  let heightDiff = 0;\n\n  if (missingViewBox) {\n    if (\n      (x || y) &&\n      element.parentNode &&\n      element.parentNode.nodeName !== '#document'\n    ) {\n      translateMatrix =\n        ' translate(' + parseUnit(x || '0') + ' ' + parseUnit(y || '0') + ') ';\n      matrix = (element.getAttribute('transform') || '') + translateMatrix;\n      element.setAttribute('transform', matrix);\n      element.removeAttribute('x');\n      element.removeAttribute('y');\n    }\n  }\n\n  if (missingViewBox && missingDimAttr) {\n    return {\n      width: 0,\n      height: 0,\n    };\n  }\n\n  const parsedDim: ParsedViewboxTransform = {\n    width: 0,\n    height: 0,\n  };\n\n  if (missingViewBox) {\n    parsedDim.width = parseUnit(widthAttr!);\n    parsedDim.height = parseUnit(heightAttr!);\n    // set a transform for elements that have x y and are inner(only) SVGs\n    return parsedDim;\n  }\n\n  const pasedViewBox = viewBoxAttr.match(reViewBoxAttrValue)!;\n  minX = -parseFloat(pasedViewBox[1]);\n  minY = -parseFloat(pasedViewBox[2]);\n  const viewBoxWidth = parseFloat(pasedViewBox[3]);\n  const viewBoxHeight = parseFloat(pasedViewBox[4]);\n  parsedDim.minX = minX;\n  parsedDim.minY = minY;\n  parsedDim.viewBoxWidth = viewBoxWidth;\n  parsedDim.viewBoxHeight = viewBoxHeight;\n  if (!missingDimAttr) {\n    parsedDim.width = parseUnit(widthAttr);\n    parsedDim.height = parseUnit(heightAttr);\n    scaleX = parsedDim.width / viewBoxWidth;\n    scaleY = parsedDim.height / viewBoxHeight;\n  } else {\n    parsedDim.width = viewBoxWidth;\n    parsedDim.height = viewBoxHeight;\n  }\n\n  // default is to preserve aspect ratio\n  const preserveAspectRatio = parsePreserveAspectRatioAttribute(\n    element.getAttribute('preserveAspectRatio') || '',\n  );\n  if (preserveAspectRatio.alignX !== NONE) {\n    //translate all container for the effect of Mid, Min, Max\n    if (preserveAspectRatio.meetOrSlice === 'meet') {\n      scaleY = scaleX = scaleX > scaleY ? scaleY : scaleX;\n      // calculate additional translation to move the viewbox\n    }\n    if (preserveAspectRatio.meetOrSlice === 'slice') {\n      scaleY = scaleX = scaleX > scaleY ? scaleX : scaleY;\n      // calculate additional translation to move the viewbox\n    }\n    widthDiff = parsedDim.width - viewBoxWidth * scaleX;\n    heightDiff = parsedDim.height - viewBoxHeight * scaleX;\n    if (preserveAspectRatio.alignX === 'Mid') {\n      widthDiff /= 2;\n    }\n    if (preserveAspectRatio.alignY === 'Mid') {\n      heightDiff /= 2;\n    }\n    if (preserveAspectRatio.alignX === 'Min') {\n      widthDiff = 0;\n    }\n    if (preserveAspectRatio.alignY === 'Min') {\n      heightDiff = 0;\n    }\n  }\n\n  if (\n    scaleX === 1 &&\n    scaleY === 1 &&\n    minX === 0 &&\n    minY === 0 &&\n    x === 0 &&\n    y === 0\n  ) {\n    return parsedDim;\n  }\n  if ((x || y) && element.parentNode!.nodeName !== '#document') {\n    translateMatrix =\n      ' translate(' + parseUnit(x || '0') + ' ' + parseUnit(y || '0') + ') ';\n  }\n\n  matrix =\n    translateMatrix +\n    ' matrix(' +\n    scaleX +\n    ' 0' +\n    ' 0 ' +\n    scaleY +\n    ' ' +\n    (minX * scaleX + widthDiff) +\n    ' ' +\n    (minY * scaleY + heightDiff) +\n    ') ';\n  // seems unused.\n  // parsedDim.viewboxTransform = parseTransformAttribute(matrix);\n  if (element.nodeName === 'svg') {\n    el = element.ownerDocument.createElementNS(svgNS, 'g');\n    // element.firstChild != null\n    while (element.firstChild) {\n      el.appendChild(element.firstChild);\n    }\n    element.appendChild(el);\n  } else {\n    el = element;\n    el.removeAttribute('x');\n    el.removeAttribute('y');\n    matrix = el.getAttribute('transform') + matrix;\n  }\n  el.setAttribute('transform', matrix);\n  return parsedDim;\n}\n","export const getTagName = (node: Element) => node.tagName.replace('svg:', '');\n","import { svgInvalidAncestors } from './constants';\nimport { getSvgRegex } from './getSvgRegex';\nimport { getTagName } from './getTagName';\n\nconst svgInvalidAncestorsRegEx = getSvgRegex(svgInvalidAncestors);\n\nexport function hasInvalidAncestor(element: Element) {\n  let _element: Element | null = element;\n  while (_element && (_element = _element.parentElement)) {\n    if (\n      _element &&\n      _element.nodeName &&\n      svgInvalidAncestorsRegEx.test(getTagName(_element)) &&\n      !_element.getAttribute('instantiated_by_use')\n    ) {\n      return true;\n    }\n  }\n  return false;\n}\n","export function getMultipleNodes(\n  doc: Document,\n  nodeNames: string[],\n): Element[] {\n  let nodeName,\n    nodeArray: Element[] = [],\n    nodeList,\n    i,\n    len;\n  for (i = 0, len = nodeNames.length; i < len; i++) {\n    nodeName = nodeNames[i];\n    nodeList = doc.getElementsByTagNameNS(\n      'http://www.w3.org/2000/svg',\n      nodeName,\n    );\n    nodeArray = nodeArray.concat(Array.from(nodeList));\n  }\n  return nodeArray;\n}\n","const gradientsAttrs = [\n  'gradientTransform',\n  'x1',\n  'x2',\n  'y1',\n  'y2',\n  'gradientUnits',\n  'cx',\n  'cy',\n  'r',\n  'fx',\n  'fy',\n];\nconst xlinkAttr = 'xlink:href';\n\nexport function recursivelyParseGradientsXlink(\n  doc: Document,\n  gradient: Element,\n) {\n  const xLink = gradient.getAttribute(xlinkAttr)?.slice(1) || '',\n    referencedGradient = doc.getElementById(xLink);\n  if (referencedGradient && referencedGradient.getAttribute(xlinkAttr)) {\n    recursivelyParseGradientsXlink(doc, referencedGradient as Element);\n  }\n  if (referencedGradient) {\n    gradientsAttrs.forEach((attr) => {\n      const value = referencedGradient.getAttribute(attr);\n      if (!gradient.hasAttribute(attr) && value) {\n        gradient.setAttribute(attr, value);\n      }\n    });\n    if (!gradient.children.length) {\n      const referenceClone = referencedGradient.cloneNode(true);\n      while (referenceClone.firstChild) {\n        gradient.appendChild(referenceClone.firstChild);\n      }\n    }\n  }\n  gradient.removeAttribute(xlinkAttr);\n}\n","import { getMultipleNodes } from './getMultipleNodes';\nimport { recursivelyParseGradientsXlink } from './recursivelyParseGradientsXlink';\n\nconst tagArray = [\n  'linearGradient',\n  'radialGradient',\n  'svg:linearGradient',\n  'svg:radialGradient',\n];\n\n/**\n * Parses an SVG document, returning all of the gradient declarations found in it\n * @param {SVGDocument} doc SVG document to parse\n * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\n */\nexport function getGradientDefs(\n  doc: Document,\n): Record<string, SVGGradientElement> {\n  const elList = getMultipleNodes(doc, tagArray);\n  const gradientDefs: Record<string, SVGGradientElement> = {};\n  let j = elList.length;\n  while (j--) {\n    const el = elList[j];\n    if (el.getAttribute('xlink:href')) {\n      recursivelyParseGradientsXlink(doc, el);\n    }\n    const id = el.getAttribute('id');\n    if (id) {\n      gradientDefs[id] = el as SVGGradientElement;\n    }\n  }\n  return gradientDefs;\n}\n","import type { CSSRules } from './typedefs';\n\n/**\n * Returns CSS rules for a given SVG document\n * @param {HTMLElement} doc SVG document to parse\n * @return {Object} CSS rules of this document\n */\nexport function getCSSRules(doc: Document) {\n  const styles = doc.getElementsByTagName('style');\n  let i;\n  let len;\n  const allRules: CSSRules = {};\n\n  // very crude parsing of style contents\n  for (i = 0, len = styles.length; i < len; i++) {\n    const styleContents = (styles[i].textContent || '').replace(\n      // remove comments\n      /\\/\\*[\\s\\S]*?\\*\\//g,\n      '',\n    );\n\n    if (styleContents.trim() === '') {\n      continue;\n    }\n    // recovers all the rule in this form `body { style code... }`\n    // rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n    styleContents\n      .split('}')\n      // remove empty rules and remove everything if we didn't split in at least 2 pieces\n      .filter((rule, index, array) => array.length > 1 && rule.trim())\n      // at this point we have hopefully an array of rules `body { style code... `\n      .forEach((rule) => {\n        // if there is more than one opening bracket and the rule starts with '@', it is likely\n        // a nested at-rule like @media, @supports, @scope, etc. Ignore these as the code below\n        // can not handle it.\n        if (\n          (rule.match(/{/g) || []).length > 1 &&\n          rule.trim().startsWith('@')\n        ) {\n          return;\n        }\n\n        const match = rule.split('{'),\n          ruleObj: Record<string, string> = {},\n          declaration = match[1].trim(),\n          propertyValuePairs = declaration.split(';').filter(function (pair) {\n            return pair.trim();\n          });\n\n        for (i = 0, len = propertyValuePairs.length; i < len; i++) {\n          const pair = propertyValuePairs[i].split(':'),\n            property = pair[0].trim(),\n            value = pair[1].trim();\n          ruleObj[property] = value;\n        }\n        rule = match[0].trim();\n        rule.split(',').forEach((_rule) => {\n          _rule = _rule.replace(/^svg/i, '').trim();\n          if (_rule === '') {\n            return;\n          }\n          allRules[_rule] = {\n            ...(allRules[_rule] || {}),\n            ...ruleObj,\n          };\n        });\n      });\n  }\n  return allRules;\n}\n","import { Gradient } from '../gradient/Gradient';\nimport { Group } from '../shapes/Group';\nimport { FabricImage } from '../shapes/Image';\nimport { classRegistry } from '../ClassRegistry';\nimport {\n  invertTransform,\n  multiplyTransformMatrices,\n  qrDecompose,\n} from '../util/misc/matrix';\nimport { removeTransformMatrixForSvgParsing } from '../util/transform_matrix_removal';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport { Point } from '../Point';\nimport { CENTER, FILL, STROKE } from '../constants';\nimport { getGradientDefs } from './getGradientDefs';\nimport { getCSSRules } from './getCSSRules';\nimport type { LoadImageOptions } from '../util';\nimport type { CSSRules, TSvgReviverCallback } from './typedefs';\nimport type { ParsedViewboxTransform } from './applyViewboxTransform';\nimport type { SVGOptions } from '../gradient';\nimport { getTagName } from './getTagName';\nimport { parseTransformAttribute } from './parseTransformAttribute';\n\nconst findTag = (el: Element) =>\n  classRegistry.getSVGClass(getTagName(el).toLowerCase());\n\ntype StorageType = {\n  fill: SVGGradientElement;\n  stroke: SVGGradientElement;\n  clipPath: Element[];\n};\n\ntype NotParsedFabricObject = FabricObject & {\n  fill: string;\n  stroke: string;\n  clipPath?: string;\n  clipRule?: CanvasFillRule;\n};\n\nexport class ElementsParser {\n  declare elements: Element[];\n  declare options: LoadImageOptions & ParsedViewboxTransform;\n  declare reviver?: TSvgReviverCallback;\n  declare regexUrl: RegExp;\n  declare doc: Document;\n  declare clipPaths: Record<string, Element[]>;\n  declare gradientDefs: Record<string, SVGGradientElement>;\n  declare cssRules: CSSRules;\n\n  constructor(\n    elements: Element[],\n    options: LoadImageOptions & ParsedViewboxTransform,\n    reviver: TSvgReviverCallback | undefined,\n    doc: Document,\n    clipPaths: Record<string, Element[]>,\n  ) {\n    this.elements = elements;\n    this.options = options;\n    this.reviver = reviver;\n    this.regexUrl = /^url\\(['\"]?#([^'\"]+)['\"]?\\)/g;\n    this.doc = doc;\n    this.clipPaths = clipPaths;\n    this.gradientDefs = getGradientDefs(doc);\n    this.cssRules = getCSSRules(doc);\n  }\n\n  parse(): Promise<Array<FabricObject | null>> {\n    return Promise.all(\n      this.elements.map((element) => this.createObject(element)),\n    );\n  }\n\n  async createObject(el: Element): Promise<FabricObject | null> {\n    const klass = findTag(el);\n    if (klass) {\n      const obj: NotParsedFabricObject = await klass.fromElement(\n        el,\n        this.options,\n        this.cssRules,\n      );\n      this.resolveGradient(obj, el, FILL);\n      this.resolveGradient(obj, el, STROKE);\n      if (obj instanceof FabricImage && obj._originalElement) {\n        removeTransformMatrixForSvgParsing(\n          obj,\n          obj.parsePreserveAspectRatioAttribute(),\n        );\n      } else {\n        removeTransformMatrixForSvgParsing(obj);\n      }\n      await this.resolveClipPath(obj, el);\n      this.reviver && this.reviver(el, obj);\n      return obj;\n    }\n    return null;\n  }\n\n  extractPropertyDefinition(\n    obj: NotParsedFabricObject,\n    property: 'fill' | 'stroke' | 'clipPath',\n    storage: Record<string, StorageType[typeof property]>,\n  ): StorageType[typeof property] | undefined {\n    const value = obj[property]!,\n      regex = this.regexUrl;\n    if (!regex.test(value)) {\n      return undefined;\n    }\n    // verify: can we remove the 'g' flag? and remove lastIndex changes?\n    regex.lastIndex = 0;\n    // we passed the regex test, so we know is not null;\n    const id = regex.exec(value)![1];\n    regex.lastIndex = 0;\n    // @todo fix this\n    return storage[id];\n  }\n\n  resolveGradient(\n    obj: NotParsedFabricObject,\n    el: Element,\n    property: 'fill' | 'stroke',\n  ) {\n    const gradientDef = this.extractPropertyDefinition(\n      obj,\n      property,\n      this.gradientDefs,\n    ) as SVGGradientElement;\n    if (gradientDef) {\n      const opacityAttr = el.getAttribute(property + '-opacity');\n      const gradient = Gradient.fromElement(gradientDef, obj, {\n        ...this.options,\n        opacity: opacityAttr,\n      } as SVGOptions);\n      obj.set(property, gradient);\n    }\n  }\n\n  // TODO: resolveClipPath could be run once per clippath with minor work per object.\n  // is a refactor that i m not sure is worth on this code\n  async resolveClipPath(\n    obj: NotParsedFabricObject,\n    usingElement: Element,\n    exactOwner?: Element,\n  ) {\n    const clipPathElements = this.extractPropertyDefinition(\n      obj,\n      'clipPath',\n      this.clipPaths,\n    ) as Element[];\n    if (clipPathElements) {\n      const objTransformInv = invertTransform(obj.calcTransformMatrix());\n      const clipPathTag = clipPathElements[0].parentElement!;\n      let clipPathOwner = usingElement;\n      while (\n        !exactOwner &&\n        clipPathOwner.parentElement &&\n        clipPathOwner.getAttribute('clip-path') !== obj.clipPath\n      ) {\n        clipPathOwner = clipPathOwner.parentElement;\n      }\n      // move the clipPath tag as sibling to the real element that is using it\n      clipPathOwner.parentElement!.appendChild(clipPathTag!);\n\n      // this multiplication order could be opposite.\n      // but i don't have an svg to test it\n      // at the first SVG that has a transform on both places and is misplaced\n      // try to invert this multiplication order\n      const finalTransform = parseTransformAttribute(\n        `${clipPathOwner.getAttribute('transform') || ''} ${\n          clipPathTag.getAttribute('originalTransform') || ''\n        }`,\n      );\n\n      clipPathTag.setAttribute(\n        'transform',\n        `matrix(${finalTransform.join(',')})`,\n      );\n\n      const container = await Promise.all(\n        clipPathElements.map((clipPathElement) => {\n          return findTag(clipPathElement)\n            .fromElement(clipPathElement, this.options, this.cssRules)\n            .then((enlivedClippath: NotParsedFabricObject) => {\n              removeTransformMatrixForSvgParsing(enlivedClippath);\n              enlivedClippath.fillRule = enlivedClippath.clipRule!;\n              delete enlivedClippath.clipRule;\n              return enlivedClippath;\n            });\n        }),\n      );\n      const clipPath =\n        container.length === 1 ? container[0] : new Group(container);\n      const gTransform = multiplyTransformMatrices(\n        objTransformInv,\n        clipPath.calcTransformMatrix(),\n      );\n      if (clipPath.clipPath) {\n        await this.resolveClipPath(\n          clipPath,\n          clipPathOwner,\n          // this is tricky.\n          // it tries to differentiate from when clipPaths are inherited by outside groups\n          // or when are really clipPaths referencing other clipPaths\n          clipPathTag.getAttribute('clip-path') ? clipPathOwner : undefined,\n        );\n      }\n      const { scaleX, scaleY, angle, skewX, translateX, translateY } =\n        qrDecompose(gTransform);\n      clipPath.set({\n        flipX: false,\n        flipY: false,\n      });\n      clipPath.set({\n        scaleX,\n        scaleY,\n        angle,\n        skewX,\n        skewY: 0,\n      });\n      clipPath.setPositionByOrigin(\n        new Point(translateX, translateY),\n        CENTER,\n        CENTER,\n      );\n      obj.clipPath = clipPath;\n    } else {\n      // if clip-path does not resolve to any element, delete the property.\n      delete obj.clipPath;\n      return;\n    }\n  }\n}\n","import { applyViewboxTransform } from './applyViewboxTransform';\nimport { svgValidTagNamesRegEx } from './constants';\nimport { hasInvalidAncestor } from './hasInvalidAncestor';\nimport { parseUseDirectives } from './parseUseDirectives';\nimport type { SVGParsingOutput, TSvgReviverCallback } from './typedefs';\nimport type { LoadImageOptions } from '../util/misc/objectEnlive';\nimport { ElementsParser } from './elements_parser';\nimport { log, SignalAbortedError } from '../util/internals/console';\nimport { getTagName } from './getTagName';\n\nconst isValidSvgTag = (el: Element) =>\n  svgValidTagNamesRegEx.test(getTagName(el));\n\nexport const createEmptyResponse = (): SVGParsingOutput => ({\n  objects: [],\n  elements: [],\n  options: {},\n  allElements: [],\n});\n\n/**\n * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\n * @static\n * @function\n * @memberOf fabric\n * @param {HTMLElement} doc SVG document to parse\n * @param {TSvgParsedCallback} callback Invoked when the parsing is done, with null if parsing wasn't possible with the list of svg nodes.\n * @param {TSvgReviverCallback} [reviver] Extra callback for further parsing of SVG elements, called after each fabric object has been created.\n * Takes as input the original svg element and the generated `FabricObject` as arguments. Used to inspect extra properties not parsed by fabric,\n * or extra custom manipulation\n * @param {Object} [options] Object containing options for parsing\n * @param {String} [options.crossOrigin] crossOrigin setting to use for external resources\n * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n * @return {SVGParsingOutput}\n * {@link SVGParsingOutput} also receives `allElements` array as the last argument. This is the full list of svg nodes available in the document.\n * You may want to use it if you are trying to regroup the objects as they were originally grouped in the SVG. ( This was the reason why it was added )\n */\nexport async function parseSVGDocument(\n  doc: Document,\n  reviver?: TSvgReviverCallback,\n  { crossOrigin, signal }: LoadImageOptions = {},\n): Promise<SVGParsingOutput> {\n  if (signal && signal.aborted) {\n    log('log', new SignalAbortedError('parseSVGDocument'));\n    // this is an unhappy path, we dont care about speed\n    return createEmptyResponse();\n  }\n  const documentElement = doc.documentElement;\n  parseUseDirectives(doc);\n\n  const descendants = Array.from(documentElement.getElementsByTagName('*')),\n    options = {\n      ...applyViewboxTransform(documentElement),\n      crossOrigin,\n      signal,\n    };\n  const elements = descendants.filter((el) => {\n    applyViewboxTransform(el);\n    return isValidSvgTag(el) && !hasInvalidAncestor(el); // http://www.w3.org/TR/SVG/struct.html#DefsElement\n  });\n  if (!elements || (elements && !elements.length)) {\n    return {\n      ...createEmptyResponse(),\n      options,\n      allElements: descendants,\n    };\n  }\n  const localClipPaths: Record<string, Element[]> = {};\n  descendants\n    .filter((el) => getTagName(el) === 'clipPath')\n    .forEach((el) => {\n      el.setAttribute('originalTransform', el.getAttribute('transform') || '');\n      const id = el.getAttribute('id')!;\n      localClipPaths[id] = Array.from(el.getElementsByTagName('*')).filter(\n        (el) => isValidSvgTag(el),\n      );\n    });\n\n  // Precedence of rules:   style > class > attribute\n  const elementParser = new ElementsParser(\n    elements,\n    options,\n    reviver,\n    doc,\n    localClipPaths,\n  );\n\n  const instances = await elementParser.parse();\n\n  return {\n    objects: instances,\n    elements,\n    options,\n    allElements: descendants,\n  };\n}\n","import { svgNS } from './constants';\nimport { getMultipleNodes } from './getMultipleNodes';\nimport { applyViewboxTransform } from './applyViewboxTransform';\nimport { parseStyleString } from './parseStyleString';\n\nexport function parseUseDirectives(doc: Document) {\n  const nodelist = getMultipleNodes(doc, ['use', 'svg:use']);\n  const skipAttributes = ['x', 'y', 'xlink:href', 'href', 'transform'];\n\n  for (const useElement of nodelist) {\n    const useAttributes: NamedNodeMap = useElement.attributes;\n\n    const useAttrMap: Record<string, string> = {};\n    for (const attr of useAttributes) {\n      attr.value && (useAttrMap[attr.name] = attr.value);\n    }\n\n    const xlink = (useAttrMap['xlink:href'] || useAttrMap.href || '').slice(1);\n\n    if (xlink === '') {\n      return;\n    }\n    const referencedElement = doc.getElementById(xlink);\n    if (referencedElement === null) {\n      // if we can't find the target of the xlink, consider this use tag bad, similar to no xlink\n      return;\n    }\n    let clonedOriginal = referencedElement.cloneNode(true) as Element;\n\n    const originalAttributes: NamedNodeMap = clonedOriginal.attributes;\n\n    const originalAttrMap: Record<string, string> = {};\n    for (const attr of originalAttributes) {\n      attr.value && (originalAttrMap[attr.name] = attr.value);\n    }\n\n    // Transform attribute needs to be merged in a particular way\n    const { x = 0, y = 0, transform = '' } = useAttrMap;\n    const currentTrans = `${transform} ${\n      originalAttrMap.transform || ''\n    } translate(${x}, ${y})`;\n\n    applyViewboxTransform(clonedOriginal);\n\n    if (/^svg$/i.test(clonedOriginal.nodeName)) {\n      // if is an SVG, create a group and apply all the attributes on top of it\n      const el3 = clonedOriginal.ownerDocument.createElementNS(svgNS, 'g');\n      Object.entries(originalAttrMap).forEach(([name, value]) =>\n        el3.setAttributeNS(svgNS, name, value),\n      );\n      el3.append(...clonedOriginal.childNodes);\n      clonedOriginal = el3;\n    }\n\n    for (const attr of useAttributes) {\n      if (!attr) {\n        continue;\n      }\n      const { name, value } = attr;\n      if (skipAttributes.includes(name)) {\n        continue;\n      }\n\n      if (name === 'style') {\n        // when use has a style, merge the two styles, with the ref being priority (not use)\n        // priority is by feature. an attribute for fill on the original element\n        // will overwrite the fill in style or attribute for tha use\n        const styleRecord: Record<string, any> = {};\n        parseStyleString(value!, styleRecord);\n        // cleanup styleRecord from attributes of original\n        Object.entries(originalAttrMap).forEach(([name, value]) => {\n          styleRecord[name] = value;\n        });\n        // now we can put in the style of the original that will overwrite the original attributes\n        parseStyleString(originalAttrMap.style || '', styleRecord);\n        const mergedStyles = Object.entries(styleRecord)\n          .map((entry) => entry.join(':'))\n          .join(';');\n        clonedOriginal.setAttribute(name, mergedStyles);\n      } else {\n        // set the attribute from use element only if the original does not have it already\n        !originalAttrMap[name] && clonedOriginal.setAttribute(name, value!);\n      }\n    }\n\n    clonedOriginal.setAttribute('transform', currentTrans);\n    clonedOriginal.setAttribute('instantiated_by_use', '1');\n    clonedOriginal.removeAttribute('id');\n    useElement.parentNode!.replaceChild(clonedOriginal, useElement);\n  }\n}\n","import { Point } from '../Point';\nimport { Control } from './Control';\nimport type { TMat2D } from '../typedefs';\nimport type { Polyline } from '../shapes/Polyline';\nimport { multiplyTransformMatrices } from '../util/misc/matrix';\nimport type {\n  TModificationEvents,\n  TPointerEvent,\n  Transform,\n  TransformActionHandler,\n} from '../EventTypeDefs';\nimport { wrapWithFireEvent } from './wrapWithFireEvent';\nimport { sendPointToPlane } from '../util/misc/planeChange';\nimport { MODIFY_POLY } from '../constants';\n\nconst ACTION_NAME: TModificationEvents = MODIFY_POLY;\n\ntype TTransformAnchor = Transform & { pointIndex: number };\n\n/**\n * This function locates the controls.\n * It'll be used both for drawing and for interaction.\n */\nexport const createPolyPositionHandler = (pointIndex: number) => {\n  return function (dim: Point, finalMatrix: TMat2D, polyObject: Polyline) {\n    const { points, pathOffset } = polyObject;\n    return new Point(points[pointIndex])\n      .subtract(pathOffset)\n      .transform(\n        multiplyTransformMatrices(\n          polyObject.getViewportTransform(),\n          polyObject.calcTransformMatrix(),\n        ),\n      );\n  };\n};\n\n/**\n * This function defines what the control does.\n * It'll be called on every mouse move after a control has been clicked and is being dragged.\n * The function receives as argument the mouse event, the current transform object\n * and the current position in canvas coordinate `transform.target` is a reference to the\n * current object being transformed.\n */\nexport const polyActionHandler = (\n  eventData: TPointerEvent,\n  transform: TTransformAnchor,\n  x: number,\n  y: number,\n) => {\n  const { target, pointIndex } = transform;\n  const poly = target as Polyline;\n  const mouseLocalPosition = sendPointToPlane(\n    new Point(x, y),\n    undefined,\n    poly.calcOwnMatrix(),\n  );\n\n  poly.points[pointIndex] = mouseLocalPosition.add(poly.pathOffset);\n  poly.setDimensions();\n\n  return true;\n};\n\n/**\n * Keep the polygon in the same position when we change its `width`/`height`/`top`/`left`.\n */\nexport const factoryPolyActionHandler = (\n  pointIndex: number,\n  fn: TransformActionHandler<TTransformAnchor>,\n) => {\n  return function (\n    eventData: TPointerEvent,\n    transform: Transform,\n    x: number,\n    y: number,\n  ) {\n    const poly = transform.target as Polyline,\n      anchorPoint = new Point(\n        poly.points[(pointIndex > 0 ? pointIndex : poly.points.length) - 1],\n      ),\n      anchorPointInParentPlane = anchorPoint\n        .subtract(poly.pathOffset)\n        .transform(poly.calcOwnMatrix()),\n      actionPerformed = fn(eventData, { ...transform, pointIndex }, x, y);\n\n    const newAnchorPointInParentPlane = anchorPoint\n      .subtract(poly.pathOffset)\n      .transform(poly.calcOwnMatrix());\n\n    const diff = newAnchorPointInParentPlane.subtract(anchorPointInParentPlane);\n    poly.left -= diff.x;\n    poly.top -= diff.y;\n\n    return actionPerformed;\n  };\n};\n\nexport const createPolyActionHandler = (pointIndex: number) =>\n  wrapWithFireEvent(\n    ACTION_NAME,\n    factoryPolyActionHandler(pointIndex, polyActionHandler),\n  );\n\nexport function createPolyControls(\n  poly: Polyline,\n  options?: Partial<Control>,\n): Record<string, Control>;\nexport function createPolyControls(\n  numOfControls: number,\n  options?: Partial<Control>,\n): Record<string, Control>;\nexport function createPolyControls(\n  arg0: number | Polyline,\n  options: Partial<Control> = {},\n) {\n  const controls = {} as Record<string, Control>;\n  for (\n    let idx = 0;\n    idx < (typeof arg0 === 'number' ? arg0 : arg0.points.length);\n    idx++\n  ) {\n    controls[`p${idx}`] = new Control({\n      actionName: ACTION_NAME,\n      positionHandler: createPolyPositionHandler(idx),\n      actionHandler: createPolyActionHandler(idx),\n      ...options,\n    });\n  }\n  return controls;\n}\n","import { Point } from '../Point';\nimport { Control } from './Control';\nimport type { TMat2D } from '../typedefs';\nimport type { Path } from '../shapes/Path';\nimport { multiplyTransformMatrices } from '../util/misc/matrix';\nimport type {\n  TModificationEvents,\n  TPointerEvent,\n  Transform,\n} from '../EventTypeDefs';\nimport { sendPointToPlane } from '../util/misc/planeChange';\nimport type { TSimpleParseCommandType } from '../util/path/typedefs';\nimport type { ControlRenderingStyleOverride } from './controlRendering';\nimport { fireEvent } from './fireEvent';\nimport { commonEventInfo } from './util';\n\nconst ACTION_NAME: TModificationEvents = 'modifyPath' as const;\n\ntype TTransformAnchor = Transform;\n\nexport type PathPointControlStyle = {\n  controlFill?: string;\n  controlStroke?: string;\n  connectionDashArray?: number[];\n};\n\nconst calcPathPointPosition = (\n  pathObject: Path,\n  commandIndex: number,\n  pointIndex: number,\n) => {\n  const { path, pathOffset } = pathObject;\n  const command = path[commandIndex];\n  return new Point(\n    (command[pointIndex] as number) - pathOffset.x,\n    (command[pointIndex + 1] as number) - pathOffset.y,\n  ).transform(\n    multiplyTransformMatrices(\n      pathObject.getViewportTransform(),\n      pathObject.calcTransformMatrix(),\n    ),\n  );\n};\n\nconst movePathPoint = (\n  pathObject: Path,\n  x: number,\n  y: number,\n  commandIndex: number,\n  pointIndex: number,\n) => {\n  const { path, pathOffset } = pathObject;\n\n  const anchorCommand =\n    path[(commandIndex > 0 ? commandIndex : path.length) - 1];\n  const anchorPoint = new Point(\n    anchorCommand[pointIndex] as number,\n    anchorCommand[pointIndex + 1] as number,\n  );\n\n  const anchorPointInParentPlane = anchorPoint\n    .subtract(pathOffset)\n    .transform(pathObject.calcOwnMatrix());\n\n  const mouseLocalPosition = sendPointToPlane(\n    new Point(x, y),\n    undefined,\n    pathObject.calcOwnMatrix(),\n  );\n\n  path[commandIndex][pointIndex] = mouseLocalPosition.x + pathOffset.x;\n  path[commandIndex][pointIndex + 1] = mouseLocalPosition.y + pathOffset.y;\n  pathObject.setDimensions();\n\n  const newAnchorPointInParentPlane = anchorPoint\n    .subtract(pathObject.pathOffset)\n    .transform(pathObject.calcOwnMatrix());\n\n  const diff = newAnchorPointInParentPlane.subtract(anchorPointInParentPlane);\n  pathObject.left -= diff.x;\n  pathObject.top -= diff.y;\n  pathObject.set('dirty', true);\n  return true;\n};\n\n/**\n * This function locates the controls.\n * It'll be used both for drawing and for interaction.\n */\nfunction pathPositionHandler(\n  this: PathPointControl,\n  dim: Point,\n  finalMatrix: TMat2D,\n  pathObject: Path,\n) {\n  const { commandIndex, pointIndex } = this;\n  return calcPathPointPosition(pathObject, commandIndex, pointIndex);\n}\n\n/**\n * This function defines what the control does.\n * It'll be called on every mouse move after a control has been clicked and is being dragged.\n * The function receives as argument the mouse event, the current transform object\n * and the current position in canvas coordinate `transform.target` is a reference to the\n * current object being transformed.\n */\nfunction pathActionHandler(\n  this: PathPointControl,\n  eventData: TPointerEvent,\n  transform: TTransformAnchor,\n  x: number,\n  y: number,\n) {\n  const { target } = transform;\n  const { commandIndex, pointIndex } = this;\n  const actionPerformed = movePathPoint(\n    target as Path,\n    x,\n    y,\n    commandIndex,\n    pointIndex,\n  );\n  if (actionPerformed) {\n    fireEvent(this.actionName as TModificationEvents, {\n      ...commonEventInfo(eventData, transform, x, y),\n      commandIndex,\n      pointIndex,\n    });\n  }\n  return actionPerformed;\n}\n\nconst indexFromPrevCommand = (previousCommandType: TSimpleParseCommandType) =>\n  previousCommandType === 'C' ? 5 : previousCommandType === 'Q' ? 3 : 1;\n\nclass PathPointControl extends Control {\n  declare commandIndex: number;\n  declare pointIndex: number;\n  declare controlFill: string;\n  declare controlStroke: string;\n  constructor(options?: Partial<PathPointControl>) {\n    super(options);\n  }\n\n  render(\n    ctx: CanvasRenderingContext2D,\n    left: number,\n    top: number,\n    styleOverride: ControlRenderingStyleOverride | undefined,\n    fabricObject: Path,\n  ) {\n    const overrides: ControlRenderingStyleOverride = {\n      ...styleOverride,\n      cornerColor: this.controlFill,\n      cornerStrokeColor: this.controlStroke,\n      transparentCorners: !this.controlFill,\n    };\n    super.render(ctx, left, top, overrides, fabricObject);\n  }\n}\n\nclass PathControlPointControl extends PathPointControl {\n  declare connectionDashArray?: number[];\n  declare connectToCommandIndex: number;\n  declare connectToPointIndex: number;\n  constructor(options?: Partial<PathControlPointControl>) {\n    super(options);\n  }\n\n  render(\n    this: PathControlPointControl,\n    ctx: CanvasRenderingContext2D,\n    left: number,\n    top: number,\n    styleOverride: ControlRenderingStyleOverride | undefined,\n    fabricObject: Path,\n  ) {\n    const { path } = fabricObject;\n    const {\n      commandIndex,\n      pointIndex,\n      connectToCommandIndex,\n      connectToPointIndex,\n    } = this;\n    ctx.save();\n    ctx.strokeStyle = this.controlStroke;\n    if (this.connectionDashArray) {\n      ctx.setLineDash(this.connectionDashArray);\n    }\n    const [commandType] = path[commandIndex];\n    const point = calcPathPointPosition(\n      fabricObject,\n      connectToCommandIndex,\n      connectToPointIndex,\n    );\n\n    if (commandType === 'Q') {\n      // one control point connects to 2 points\n      const point2 = calcPathPointPosition(\n        fabricObject,\n        commandIndex,\n        pointIndex + 2,\n      );\n      ctx.moveTo(point2.x, point2.y);\n      ctx.lineTo(left, top);\n    } else {\n      ctx.moveTo(left, top);\n    }\n    ctx.lineTo(point.x, point.y);\n    ctx.stroke();\n    ctx.restore();\n\n    super.render(ctx, left, top, styleOverride, fabricObject);\n  }\n}\n\nconst createControl = (\n  commandIndexPos: number,\n  pointIndexPos: number,\n  isControlPoint: boolean,\n  options: Partial<Control> & {\n    controlPointStyle?: PathPointControlStyle;\n    pointStyle?: PathPointControlStyle;\n  },\n  connectToCommandIndex?: number,\n  connectToPointIndex?: number,\n) =>\n  new (isControlPoint ? PathControlPointControl : PathPointControl)({\n    commandIndex: commandIndexPos,\n    pointIndex: pointIndexPos,\n    actionName: ACTION_NAME,\n    positionHandler: pathPositionHandler,\n    actionHandler: pathActionHandler,\n    connectToCommandIndex,\n    connectToPointIndex,\n    ...options,\n    ...(isControlPoint ? options.controlPointStyle : options.pointStyle),\n  } as Partial<PathControlPointControl>);\n\nexport function createPathControls(\n  path: Path,\n  options: Partial<Control> & {\n    controlPointStyle?: PathPointControlStyle;\n    pointStyle?: PathPointControlStyle;\n  } = {},\n): Record<string, Control> {\n  const controls = {} as Record<string, Control>;\n  let previousCommandType: TSimpleParseCommandType = 'M';\n  path.path.forEach((command, commandIndex) => {\n    const commandType = command[0];\n\n    if (commandType !== 'Z') {\n      controls[`c_${commandIndex}_${commandType}`] = createControl(\n        commandIndex,\n        command.length - 2,\n        false,\n        options,\n      );\n    }\n    switch (commandType) {\n      case 'C':\n        controls[`c_${commandIndex}_C_CP_1`] = createControl(\n          commandIndex,\n          1,\n          true,\n          options,\n          commandIndex - 1,\n          indexFromPrevCommand(previousCommandType),\n        );\n        controls[`c_${commandIndex}_C_CP_2`] = createControl(\n          commandIndex,\n          3,\n          true,\n          options,\n          commandIndex,\n          5,\n        );\n        break;\n      case 'Q':\n        controls[`c_${commandIndex}_Q_CP_1`] = createControl(\n          commandIndex,\n          1,\n          true,\n          options,\n          commandIndex,\n          3,\n        );\n        break;\n    }\n    previousCommandType = commandType;\n  });\n  return controls;\n}\n","import { getFabricWindow } from '../env';\nimport { createCanvasElement, createCanvasElementFor } from '../util/misc/dom';\nimport { WebGLFilterBackend } from './WebGLFilterBackend';\nimport type { TWebGLPipelineState, T2DPipelineState } from './typedefs';\n\nexport const isWebGLPipelineState = (\n  options: TWebGLPipelineState | T2DPipelineState,\n): options is TWebGLPipelineState => {\n  return (options as TWebGLPipelineState).webgl !== undefined;\n};\n\n/**\n * Pick a method to copy data from GL context to 2d canvas.  In some browsers using\n * drawImage should be faster, but is also bugged for a small combination of old hardware\n * and drivers.\n * putImageData is faster than drawImage for that specific operation.\n */\nexport const isPutImageFaster = (width: number, height: number): boolean => {\n  const targetCanvas = createCanvasElementFor({ width, height });\n  const sourceCanvas = createCanvasElement();\n  const gl = sourceCanvas.getContext('webgl')!;\n  // eslint-disable-next-line no-undef\n  const imageBuffer = new ArrayBuffer(width * height * 4);\n\n  const testContext = {\n    imageBuffer: imageBuffer,\n  } as unknown as Required<WebGLFilterBackend>;\n  const testPipelineState = {\n    destinationWidth: width,\n    destinationHeight: height,\n    targetCanvas: targetCanvas,\n  } as unknown as TWebGLPipelineState;\n  let startTime;\n\n  startTime = getFabricWindow().performance.now();\n  WebGLFilterBackend.prototype.copyGLTo2D.call(\n    testContext,\n    gl,\n    testPipelineState,\n  );\n  const drawImageTime = getFabricWindow().performance.now() - startTime;\n\n  startTime = getFabricWindow().performance.now();\n  WebGLFilterBackend.prototype.copyGLTo2DPutImageData.call(\n    testContext,\n    gl,\n    testPipelineState,\n  );\n  const putImageDataTime = getFabricWindow().performance.now() - startTime;\n\n  return drawImageTime > putImageDataTime;\n};\n","export const highPsourceCode = `precision highp float`;\n\nexport const identityFragmentShader = `\n    ${highPsourceCode};\n    varying vec2 vTexCoord;\n    uniform sampler2D uTexture;\n    void main() {\n      gl_FragColor = texture2D(uTexture, vTexCoord);\n    }`;\n\nexport const vertexSource = `\n    attribute vec2 aPosition;\n    varying vec2 vTexCoord;\n    void main() {\n      vTexCoord = aPosition;\n      gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\n    }`;\n","import { getEnv } from '../env';\nimport type {\n  T2DPipelineState,\n  TWebGLAttributeLocationMap,\n  TWebGLPipelineState,\n  TWebGLProgramCacheItem,\n  TWebGLUniformLocationMap,\n} from './typedefs';\nimport { isWebGLPipelineState } from './utils';\nimport {\n  highPsourceCode,\n  identityFragmentShader,\n  vertexSource,\n} from './shaders/baseFilter';\nimport type { Abortable } from '../typedefs';\nimport { FabricError } from '../util/internals/console';\nimport { createCanvasElementFor } from '../util/misc/dom';\n\nconst regex = new RegExp(highPsourceCode, 'g');\n\nexport class BaseFilter<\n  Name extends string,\n  OwnProps extends Record<string, any> = object,\n> {\n  /**\n   * Filter type\n   * @param {String} type\n   * @default\n   */\n  get type(): Name {\n    return (this.constructor as typeof BaseFilter).type as Name;\n  }\n\n  /**\n   * The class type. Used to identify which class this is.\n   * This is used for serialization purposes and internally it can be used\n   * to identify classes. As a developer you could use `instance of Class`\n   * but to avoid importing all the code and blocking tree shaking we try\n   * to avoid doing that.\n   */\n  static type = 'BaseFilter';\n\n  /**\n   * Contains the uniform locations for the fragment shader.\n   * uStepW and uStepH are handled by the BaseFilter, each filter class\n   * needs to specify all the one that are needed\n   */\n  static uniformLocations: string[] = [];\n\n  declare static defaults: Record<string, unknown>;\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  constructor({\n    type,\n    ...options\n  }: { type?: never } & Partial<OwnProps> & Record<string, any> = {}) {\n    Object.assign(\n      this,\n      (this.constructor as typeof BaseFilter).defaults,\n      options,\n    );\n  }\n\n  protected getFragmentSource(): string {\n    return identityFragmentShader;\n  }\n\n  getVertexSource(): string {\n    return vertexSource;\n  }\n\n  /**\n   * Compile this filter's shader program.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context to use for shader compilation.\n   * @param {String} fragmentSource fragmentShader source for compilation\n   * @param {String} vertexSource vertexShader source for compilation\n   */\n  createProgram(\n    gl: WebGLRenderingContext,\n    fragmentSource: string = this.getFragmentSource(),\n    vertexSource: string = this.getVertexSource(),\n  ) {\n    const {\n      WebGLProbe: { GLPrecision = 'highp' },\n    } = getEnv();\n    if (GLPrecision !== 'highp') {\n      fragmentSource = fragmentSource.replace(\n        regex,\n        highPsourceCode.replace('highp', GLPrecision),\n      );\n    }\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    const program = gl.createProgram();\n\n    if (!vertexShader || !fragmentShader || !program) {\n      throw new FabricError(\n        'Vertex, fragment shader or program creation error',\n      );\n    }\n    gl.shaderSource(vertexShader, vertexSource);\n    gl.compileShader(vertexShader);\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      throw new FabricError(\n        `Vertex shader compile error for ${this.type}: ${gl.getShaderInfoLog(\n          vertexShader,\n        )}`,\n      );\n    }\n\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      throw new FabricError(\n        `Fragment shader compile error for ${this.type}: ${gl.getShaderInfoLog(\n          fragmentShader,\n        )}`,\n      );\n    }\n\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      throw new FabricError(\n        `Shader link error for \"${this.type}\" ${gl.getProgramInfoLog(program)}`,\n      );\n    }\n\n    const uniformLocations = this.getUniformLocations(gl, program) || {};\n    uniformLocations.uStepW = gl.getUniformLocation(program, 'uStepW');\n    uniformLocations.uStepH = gl.getUniformLocation(program, 'uStepH');\n\n    return {\n      program,\n      attributeLocations: this.getAttributeLocations(gl, program),\n      uniformLocations,\n    };\n  }\n\n  /**\n   * Return a map of attribute names to WebGLAttributeLocation objects.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take attribute locations.\n   * @returns {Object} A map of attribute names to attribute locations.\n   */\n  getAttributeLocations(\n    gl: WebGLRenderingContext,\n    program: WebGLProgram,\n  ): TWebGLAttributeLocationMap {\n    return {\n      aPosition: gl.getAttribLocation(program, 'aPosition'),\n    };\n  }\n\n  /**\n   * Return a map of uniform names to WebGLUniformLocation objects.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take uniform locations.\n   * @returns {Object} A map of uniform names to uniform locations.\n   */\n  getUniformLocations(\n    gl: WebGLRenderingContext,\n    program: WebGLProgram,\n  ): TWebGLUniformLocationMap {\n    const locations = (this.constructor as unknown as typeof BaseFilter<string>)\n      .uniformLocations;\n\n    const uniformLocations: Record<string, WebGLUniformLocation | null> = {};\n    for (let i = 0; i < locations.length; i++) {\n      uniformLocations[locations[i]] = gl.getUniformLocation(\n        program,\n        locations[i],\n      );\n    }\n    return uniformLocations;\n  }\n\n  /**\n   * Send attribute data from this filter to its shader program on the GPU.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} attributeLocations A map of shader attribute names to their locations.\n   */\n  sendAttributeData(\n    gl: WebGLRenderingContext,\n    attributeLocations: Record<string, number>,\n    aPositionData: Float32Array,\n  ) {\n    const attributeLocation = attributeLocations.aPosition;\n    const buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.enableVertexAttribArray(attributeLocation);\n    gl.vertexAttribPointer(attributeLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, aPositionData, gl.STATIC_DRAW);\n  }\n\n  _setupFrameBuffer(options: TWebGLPipelineState) {\n    const gl = options.context;\n    if (options.passes > 1) {\n      const width = options.destinationWidth;\n      const height = options.destinationHeight;\n      if (options.sourceWidth !== width || options.sourceHeight !== height) {\n        gl.deleteTexture(options.targetTexture);\n        options.targetTexture = options.filterBackend.createTexture(\n          gl,\n          width,\n          height,\n        );\n      }\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        options.targetTexture,\n        0,\n      );\n    } else {\n      // draw last filter on canvas and not to framebuffer.\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.finish();\n    }\n  }\n\n  _swapTextures(options: TWebGLPipelineState) {\n    options.passes--;\n    options.pass++;\n    const temp = options.targetTexture;\n    options.targetTexture = options.sourceTexture;\n    options.sourceTexture = temp;\n  }\n\n  /**\n   * Generic isNeutral implementation for one parameter based filters.\n   * Used only in image applyFilters to discard filters that will not have an effect\n   * on the image\n   * Other filters may need their own version ( ColorMatrix, HueRotation, gamma, ComposedFilter )\n   * @param {Object} options\n   **/\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  isNeutralState(options?: any): boolean {\n    return false;\n  }\n\n  /**\n   * Apply this filter to the input image data provided.\n   *\n   * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyTo(options: TWebGLPipelineState | T2DPipelineState) {\n    if (isWebGLPipelineState(options)) {\n      this._setupFrameBuffer(options);\n      this.applyToWebGL(options);\n      this._swapTextures(options);\n    } else {\n      this.applyTo2d(options);\n    }\n  }\n\n  applyTo2d(_options: T2DPipelineState): void {\n    // override by subclass\n  }\n\n  /**\n   * Returns a string that represent the current selected shader code for the filter.\n   * Used to force recompilation when parameters change or to retrieve the shader from cache\n   * @type string\n   **/\n  getCacheKey(): string {\n    return this.type;\n  }\n\n  /**\n   * Retrieves the cached shader.\n   * @param {Object} options\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   * @return {WebGLProgram} the compiled program shader\n   */\n  retrieveShader(options: TWebGLPipelineState): TWebGLProgramCacheItem {\n    const key = this.getCacheKey();\n    if (!options.programCache[key]) {\n      options.programCache[key] = this.createProgram(options.context);\n    }\n    return options.programCache[key];\n  }\n\n  /**\n   * Apply this filter using webgl.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.originalTexture The texture of the original input image.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyToWebGL(options: TWebGLPipelineState) {\n    const gl = options.context;\n    const shader = this.retrieveShader(options);\n    if (options.pass === 0 && options.originalTexture) {\n      gl.bindTexture(gl.TEXTURE_2D, options.originalTexture);\n    } else {\n      gl.bindTexture(gl.TEXTURE_2D, options.sourceTexture);\n    }\n    gl.useProgram(shader.program);\n    this.sendAttributeData(gl, shader.attributeLocations, options.aPosition);\n\n    gl.uniform1f(shader.uniformLocations.uStepW, 1 / options.sourceWidth);\n    gl.uniform1f(shader.uniformLocations.uStepH, 1 / options.sourceHeight);\n\n    this.sendUniformData(gl, shader.uniformLocations);\n    gl.viewport(0, 0, options.destinationWidth, options.destinationHeight);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  }\n\n  bindAdditionalTexture(\n    gl: WebGLRenderingContext,\n    texture: WebGLTexture,\n    textureUnit: number,\n  ) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    // reset active texture to 0 as usual\n    gl.activeTexture(gl.TEXTURE0);\n  }\n\n  unbindAdditionalTexture(gl: WebGLRenderingContext, textureUnit: number) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.activeTexture(gl.TEXTURE0);\n  }\n\n  /**\n   * Send uniform data from this filter to its shader program on the GPU.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} _gl The canvas context used to compile the shader program.\n   * @param {Object} _uniformLocations A map of shader uniform names to their locations.\n   */\n  sendUniformData(\n    _gl: WebGLRenderingContext,\n    _uniformLocations: TWebGLUniformLocationMap,\n  ): void {\n    // override by subclass\n  }\n\n  /**\n   * If needed by a 2d filter, this functions can create an helper canvas to be used\n   * remember that options.targetCanvas is available for use till end of chain.\n   */\n  createHelpLayer(options: T2DPipelineState) {\n    if (!options.helpLayer) {\n      const { sourceWidth, sourceHeight } = options;\n      const helpLayer = createCanvasElementFor({\n        width: sourceWidth,\n        height: sourceHeight,\n      });\n      options.helpLayer = helpLayer;\n    }\n  }\n\n  /**\n   * Returns object representation of an instance\n   * It will automatically export the default values of a filter,\n   * stored in the static defaults property.\n   * @return {Object} Object representation of an instance\n   */\n  toObject(): { type: Name } & OwnProps {\n    const defaultKeys = Object.keys(\n      (this.constructor as typeof BaseFilter).defaults || {},\n    ) as (keyof OwnProps)[];\n\n    return {\n      type: this.type,\n      ...defaultKeys.reduce<OwnProps>((acc, key) => {\n        acc[key] = this[\n          key as keyof this\n        ] as unknown as (typeof acc)[typeof key];\n        return acc;\n      }, {} as OwnProps),\n    };\n  }\n\n  /**\n   * Returns a JSON representation of an instance\n   * @return {Object} JSON\n   */\n  toJSON() {\n    // delegate, not alias\n    return this.toObject();\n  }\n\n  static async fromObject(\n    { type, ...filterOptions }: Record<string, any>,\n    _options: Abortable,\n  ): Promise<BaseFilter<string, object>> {\n    return new this(filterOptions);\n  }\n}\n","export const blendColorFragmentSource = {\n  multiply: 'gl_FragColor.rgb *= uColor.rgb;\\n',\n  screen:\n    'gl_FragColor.rgb = 1.0 - (1.0 - gl_FragColor.rgb) * (1.0 - uColor.rgb);\\n',\n  add: 'gl_FragColor.rgb += uColor.rgb;\\n',\n  difference: 'gl_FragColor.rgb = abs(gl_FragColor.rgb - uColor.rgb);\\n',\n  subtract: 'gl_FragColor.rgb -= uColor.rgb;\\n',\n  lighten: 'gl_FragColor.rgb = max(gl_FragColor.rgb, uColor.rgb);\\n',\n  darken: 'gl_FragColor.rgb = min(gl_FragColor.rgb, uColor.rgb);\\n',\n  exclusion:\n    'gl_FragColor.rgb += uColor.rgb - 2.0 * (uColor.rgb * gl_FragColor.rgb);\\n',\n  overlay: `\n    if (uColor.r < 0.5) {\n      gl_FragColor.r *= 2.0 * uColor.r;\n    } else {\n      gl_FragColor.r = 1.0 - 2.0 * (1.0 - gl_FragColor.r) * (1.0 - uColor.r);\n    }\n    if (uColor.g < 0.5) {\n      gl_FragColor.g *= 2.0 * uColor.g;\n    } else {\n      gl_FragColor.g = 1.0 - 2.0 * (1.0 - gl_FragColor.g) * (1.0 - uColor.g);\n    }\n    if (uColor.b < 0.5) {\n      gl_FragColor.b *= 2.0 * uColor.b;\n    } else {\n      gl_FragColor.b = 1.0 - 2.0 * (1.0 - gl_FragColor.b) * (1.0 - uColor.b);\n    }\n    `,\n  tint: `\n    gl_FragColor.rgb *= (1.0 - uColor.a);\n    gl_FragColor.rgb += uColor.rgb;\n    `,\n} as const;\n","import { Color } from '../color/Color';\nimport { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { blendColorFragmentSource } from './shaders/blendColor';\n\nexport type TBlendMode =\n  | 'multiply'\n  | 'add'\n  | 'difference'\n  | 'screen'\n  | 'subtract'\n  | 'darken'\n  | 'lighten'\n  | 'overlay'\n  | 'exclusion'\n  | 'tint';\n\ntype BlendColorOwnProps = {\n  color: string;\n  mode: TBlendMode;\n  alpha: number;\n};\n\nexport const blendColorDefaultValues: BlendColorOwnProps = {\n  color: '#F95C63',\n  mode: 'multiply',\n  alpha: 1,\n};\n\n/**\n * Color Blend filter class\n * @example\n * const filter = new BlendColor({\n *  color: '#000',\n *  mode: 'multiply'\n * });\n *\n * const filter = new BlendImage({\n *  image: fabricImageObject,\n *  mode: 'multiply'\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n */\nexport class BlendColor extends BaseFilter<'BlendColor', BlendColorOwnProps> {\n  /**\n   * Color to make the blend operation with. default to a reddish color since black or white\n   * gives always strong result.\n   * @type String\n   * @default\n   **/\n  declare color: BlendColorOwnProps['color'];\n\n  /**\n   * Blend mode for the filter: one of multiply, add, difference, screen, subtract,\n   * darken, lighten, overlay, exclusion, tint.\n   * @type String\n   * @default\n   **/\n  declare mode: BlendColorOwnProps['mode'];\n  /**\n   * alpha value. represent the strength of the blend color operation.\n   * @type Number\n   * @default\n   **/\n  declare alpha: BlendColorOwnProps['alpha'];\n\n  static defaults = blendColorDefaultValues;\n\n  static type = 'BlendColor';\n\n  static uniformLocations = ['uColor'];\n\n  getCacheKey() {\n    return `${this.type}_${this.mode}`;\n  }\n\n  protected getFragmentSource(): string {\n    return `\n      precision highp float;\n      uniform sampler2D uTexture;\n      uniform vec4 uColor;\n      varying vec2 vTexCoord;\n      void main() {\n        vec4 color = texture2D(uTexture, vTexCoord);\n        gl_FragColor = color;\n        if (color.a > 0.0) {\n          ${blendColorFragmentSource[this.mode]}\n        }\n      }\n      `;\n  }\n\n  /**\n   * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const source = new Color(this.color).getSource();\n    const tr = source[0] * this.alpha;\n    const tg = source[1] * this.alpha;\n    const tb = source[2] * this.alpha;\n    const alpha1 = 1 - this.alpha;\n\n    for (let i = 0; i < data.length; i += 4) {\n      const r = data[i];\n      const g = data[i + 1];\n      const b = data[i + 2];\n\n      switch (this.mode) {\n        case 'multiply':\n          data[i] = (r * tr) / 255;\n          data[i + 1] = (g * tg) / 255;\n          data[i + 2] = (b * tb) / 255;\n          break;\n        case 'screen':\n          data[i] = 255 - ((255 - r) * (255 - tr)) / 255;\n          data[i + 1] = 255 - ((255 - g) * (255 - tg)) / 255;\n          data[i + 2] = 255 - ((255 - b) * (255 - tb)) / 255;\n          break;\n        case 'add':\n          data[i] = r + tr;\n          data[i + 1] = g + tg;\n          data[i + 2] = b + tb;\n          break;\n        case 'difference':\n          data[i] = Math.abs(r - tr);\n          data[i + 1] = Math.abs(g - tg);\n          data[i + 2] = Math.abs(b - tb);\n          break;\n        case 'subtract':\n          data[i] = r - tr;\n          data[i + 1] = g - tg;\n          data[i + 2] = b - tb;\n          break;\n        case 'darken':\n          data[i] = Math.min(r, tr);\n          data[i + 1] = Math.min(g, tg);\n          data[i + 2] = Math.min(b, tb);\n          break;\n        case 'lighten':\n          data[i] = Math.max(r, tr);\n          data[i + 1] = Math.max(g, tg);\n          data[i + 2] = Math.max(b, tb);\n          break;\n        case 'overlay':\n          data[i] =\n            tr < 128\n              ? (2 * r * tr) / 255\n              : 255 - (2 * (255 - r) * (255 - tr)) / 255;\n          data[i + 1] =\n            tg < 128\n              ? (2 * g * tg) / 255\n              : 255 - (2 * (255 - g) * (255 - tg)) / 255;\n          data[i + 2] =\n            tb < 128\n              ? (2 * b * tb) / 255\n              : 255 - (2 * (255 - b) * (255 - tb)) / 255;\n          break;\n        case 'exclusion':\n          data[i] = tr + r - (2 * tr * r) / 255;\n          data[i + 1] = tg + g - (2 * tg * g) / 255;\n          data[i + 2] = tb + b - (2 * tb * b) / 255;\n          break;\n        case 'tint':\n          data[i] = tr + r * alpha1;\n          data[i + 1] = tg + g * alpha1;\n          data[i + 2] = tb + b * alpha1;\n      }\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    const source = new Color(this.color).getSource();\n    source[0] = (this.alpha * source[0]) / 255;\n    source[1] = (this.alpha * source[1]) / 255;\n    source[2] = (this.alpha * source[2]) / 255;\n    source[3] = this.alpha;\n    gl.uniform4fv(uniformLocations.uColor, source);\n  }\n}\n\nclassRegistry.setClass(BlendColor);\n","import type { TBlendImageMode } from '../BlendImage';\n\nexport const fragmentSource: Record<TBlendImageMode, string> = {\n  multiply: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform sampler2D uImage;\n    uniform vec4 uColor;\n    varying vec2 vTexCoord;\n    varying vec2 vTexCoord2;\n    void main() {\n      vec4 color = texture2D(uTexture, vTexCoord);\n      vec4 color2 = texture2D(uImage, vTexCoord2);\n      color.rgba *= color2.rgba;\n      gl_FragColor = color;\n    }\n    `,\n  mask: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform sampler2D uImage;\n    uniform vec4 uColor;\n    varying vec2 vTexCoord;\n    varying vec2 vTexCoord2;\n    void main() {\n      vec4 color = texture2D(uTexture, vTexCoord);\n      vec4 color2 = texture2D(uImage, vTexCoord2);\n      color.a = color2.a;\n      gl_FragColor = color;\n    }\n    `,\n} as const;\n\nexport const vertexSource = `\n    attribute vec2 aPosition;\n    varying vec2 vTexCoord;\n    varying vec2 vTexCoord2;\n    uniform mat3 uTransformMatrix;\n    void main() {\n      vTexCoord = aPosition;\n      vTexCoord2 = (uTransformMatrix * vec3(aPosition, 1.0)).xy;\n      gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\n    }\n    ` as const;\n","import { FabricImage } from '../shapes/Image';\nimport { createCanvasElement } from '../util/misc/dom';\nimport { BaseFilter } from './BaseFilter';\nimport type {\n  T2DPipelineState,\n  TWebGLPipelineState,\n  TWebGLUniformLocationMap,\n} from './typedefs';\nimport type { WebGLFilterBackend } from './WebGLFilterBackend';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource, vertexSource } from './shaders/blendImage';\n\nexport type TBlendImageMode = 'multiply' | 'mask';\n\ntype BlendImageOwnProps = {\n  mode: TBlendImageMode;\n  alpha: number;\n};\n\nexport const blendImageDefaultValues: BlendImageOwnProps = {\n  mode: 'multiply',\n  alpha: 1,\n};\n\n/**\n * Image Blend filter class\n * @example\n * const filter = new filters.BlendColor({\n *  color: '#000',\n *  mode: 'multiply'\n * });\n *\n * const filter = new BlendImage({\n *  image: fabricImageObject,\n *  mode: 'multiply'\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n */\nexport class BlendImage extends BaseFilter<'BlendImage', BlendImageOwnProps> {\n  /**\n   * Image to make the blend operation with.\n   **/\n  declare image: FabricImage;\n\n  /**\n   * Blend mode for the filter: either 'multiply' or 'mask'. 'multiply' will\n   * multiply the values of each channel (R, G, B, and A) of the filter image by\n   * their corresponding values in the base image. 'mask' will only look at the\n   * alpha channel of the filter image, and apply those values to the base\n   * image's alpha channel.\n   * @type String\n   * @default\n   **/\n  declare mode: BlendImageOwnProps['mode'];\n\n  /**\n   * alpha value. represent the strength of the blend image operation.\n   * not implemented.\n   **/\n  declare alpha: BlendImageOwnProps['alpha'];\n\n  static type = 'BlendImage';\n\n  static defaults = blendImageDefaultValues;\n\n  static uniformLocations = ['uTransformMatrix', 'uImage'];\n\n  getCacheKey() {\n    return `${this.type}_${this.mode}`;\n  }\n\n  getFragmentSource(): string {\n    return fragmentSource[this.mode];\n  }\n\n  getVertexSource(): string {\n    return vertexSource;\n  }\n\n  applyToWebGL(options: TWebGLPipelineState) {\n    const gl = options.context,\n      texture = this.createTexture(options.filterBackend, this.image);\n    this.bindAdditionalTexture(gl, texture!, gl.TEXTURE1);\n    super.applyToWebGL(options);\n    this.unbindAdditionalTexture(gl, gl.TEXTURE1);\n  }\n\n  createTexture(backend: WebGLFilterBackend, image: FabricImage) {\n    return backend.getCachedTexture(image.cacheKey, image.getElement());\n  }\n\n  /**\n   * Calculate a transformMatrix to adapt the image to blend over\n   * @param {Object} options\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  calculateMatrix() {\n    const image = this.image,\n      { width, height } = image.getElement();\n    return [\n      1 / image.scaleX,\n      0,\n      0,\n      0,\n      1 / image.scaleY,\n      0,\n      -image.left / width,\n      -image.top / height,\n      1,\n    ];\n  }\n\n  /**\n   * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({\n    imageData: { data, width, height },\n    filterBackend: { resources },\n  }: T2DPipelineState) {\n    const image = this.image;\n    if (!resources.blendImage) {\n      resources.blendImage = createCanvasElement();\n    }\n    const canvas1 = resources.blendImage;\n    const context = canvas1.getContext('2d')!;\n    if (canvas1.width !== width || canvas1.height !== height) {\n      canvas1.width = width;\n      canvas1.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n    context.setTransform(\n      image.scaleX,\n      0,\n      0,\n      image.scaleY,\n      image.left,\n      image.top,\n    );\n    context.drawImage(image.getElement(), 0, 0, width, height);\n    const blendData = context.getImageData(0, 0, width, height).data;\n    for (let i = 0; i < data.length; i += 4) {\n      const r = data[i];\n      const g = data[i + 1];\n      const b = data[i + 2];\n      const a = data[i + 3];\n\n      const tr = blendData[i];\n      const tg = blendData[i + 1];\n      const tb = blendData[i + 2];\n      const ta = blendData[i + 3];\n\n      switch (this.mode) {\n        case 'multiply':\n          data[i] = (r * tr) / 255;\n          data[i + 1] = (g * tg) / 255;\n          data[i + 2] = (b * tb) / 255;\n          data[i + 3] = (a * ta) / 255;\n          break;\n        case 'mask':\n          data[i + 3] = ta;\n          break;\n      }\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    const matrix = this.calculateMatrix();\n    gl.uniform1i(uniformLocations.uImage, 1); // texture unit 1.\n    gl.uniformMatrix3fv(uniformLocations.uTransformMatrix, false, matrix);\n  }\n\n  /**\n   * Returns object representation of an instance\n   * TODO: Handle the possibility of missing image better.\n   * As of now a BlendImage filter without image can't be used with fromObject\n   * @return {Object} Object representation of an instance\n   */\n  toObject(): {\n    type: 'BlendImage';\n    image: ReturnType<FabricImage['toObject']>;\n  } & BlendImageOwnProps {\n    return {\n      ...super.toObject(),\n      image: this.image && this.image.toObject(),\n    };\n  }\n\n  /**\n   * Create filter instance from an object representation\n   * @static\n   * @param {object} object Object to create an instance from\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal] handle aborting image loading, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @returns {Promise<BlendImage>}\n   */\n  static async fromObject(\n    { type, image, ...filterOptions }: Record<string, any>,\n    options: { signal: AbortSignal },\n  ): Promise<BaseFilter<'BlendImage', BlendImageOwnProps>> {\n    return FabricImage.fromObject(image, options).then(\n      (enlivedImage) =>\n        new this({ ...filterOptions, image: enlivedImage }) as BlendImage,\n    );\n  }\n}\n\nclassRegistry.setClass(BlendImage);\n","import { createCanvasElement } from '../util/misc/dom';\nimport { BaseFilter } from './BaseFilter';\nimport type {\n  TWebGLPipelineState,\n  T2DPipelineState,\n  TWebGLUniformLocationMap,\n} from './typedefs';\nimport { isWebGLPipelineState } from './utils';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/blur';\n\ntype BlurOwnProps = {\n  blur: number;\n};\n\nexport const blurDefaultValues: BlurOwnProps = {\n  blur: 0,\n};\n\n/**\n * Blur filter class\n * @example\n * const filter = new Blur({\n *   blur: 0.5\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n */\nexport class Blur extends BaseFilter<'Blur', BlurOwnProps> {\n  /**\n   * blur value, in percentage of image dimensions.\n   * specific to keep the image blur constant at different resolutions\n   * range between 0 and 1.\n   * @type Number\n   * @default\n   */\n  declare blur: BlurOwnProps['blur'];\n\n  declare horizontal: boolean;\n  declare aspectRatio: number;\n\n  static type = 'Blur';\n\n  static defaults = blurDefaultValues;\n\n  static uniformLocations = ['uDelta'];\n\n  getFragmentSource(): string {\n    return fragmentSource;\n  }\n\n  applyTo(options: TWebGLPipelineState | T2DPipelineState) {\n    if (isWebGLPipelineState(options)) {\n      // this aspectRatio is used to give the same blur to vertical and horizontal\n      this.aspectRatio = options.sourceWidth / options.sourceHeight;\n      options.passes++;\n      this._setupFrameBuffer(options);\n      this.horizontal = true;\n      this.applyToWebGL(options);\n      this._swapTextures(options);\n      this._setupFrameBuffer(options);\n      this.horizontal = false;\n      this.applyToWebGL(options);\n      this._swapTextures(options);\n    } else {\n      this.applyTo2d(options);\n    }\n  }\n\n  applyTo2d(options: T2DPipelineState) {\n    options.imageData = this.simpleBlur(options);\n  }\n\n  simpleBlur({\n    ctx,\n    imageData,\n    filterBackend: { resources },\n  }: T2DPipelineState) {\n    const { width, height } = imageData;\n    if (!resources.blurLayer1) {\n      resources.blurLayer1 = createCanvasElement();\n      resources.blurLayer2 = createCanvasElement();\n    }\n    const canvas1 = resources.blurLayer1!;\n    const canvas2 = resources.blurLayer2!;\n    if (canvas1.width !== width || canvas1.height !== height) {\n      canvas2.width = canvas1.width = width;\n      canvas2.height = canvas1.height = height;\n    }\n    const ctx1 = canvas1.getContext('2d')!,\n      ctx2 = canvas2.getContext('2d')!,\n      nSamples = 15,\n      blur = this.blur * 0.06 * 0.5;\n    let random, percent, j, i;\n\n    // load first canvas\n    ctx1.putImageData(imageData, 0, 0);\n    ctx2.clearRect(0, 0, width, height);\n\n    for (i = -nSamples; i <= nSamples; i++) {\n      random = (Math.random() - 0.5) / 4;\n      percent = i / nSamples;\n      j = blur * percent * width + random;\n      ctx2.globalAlpha = 1 - Math.abs(percent);\n      ctx2.drawImage(canvas1, j, random);\n      ctx1.drawImage(canvas2, 0, 0);\n      ctx2.globalAlpha = 1;\n      ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n    }\n    for (i = -nSamples; i <= nSamples; i++) {\n      random = (Math.random() - 0.5) / 4;\n      percent = i / nSamples;\n      j = blur * percent * height + random;\n      ctx2.globalAlpha = 1 - Math.abs(percent);\n      ctx2.drawImage(canvas1, random, j);\n      ctx1.drawImage(canvas2, 0, 0);\n      ctx2.globalAlpha = 1;\n      ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n    }\n    ctx.drawImage(canvas1, 0, 0);\n    const newImageData = ctx.getImageData(0, 0, canvas1.width, canvas1.height);\n    ctx1.globalAlpha = 1;\n    ctx1.clearRect(0, 0, canvas1.width, canvas1.height);\n    return newImageData;\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    const delta = this.chooseRightDelta();\n    gl.uniform2fv(uniformLocations.uDelta, delta);\n  }\n\n  isNeutralState() {\n    return this.blur === 0;\n  }\n\n  /**\n   * choose right value of image percentage to blur with\n   * @returns {Array} a numeric array with delta values\n   */\n  chooseRightDelta() {\n    let blurScale = 1;\n    const delta = [0, 0];\n    if (this.horizontal) {\n      if (this.aspectRatio > 1) {\n        // image is wide, i want to shrink radius horizontal\n        blurScale = 1 / this.aspectRatio;\n      }\n    } else {\n      if (this.aspectRatio < 1) {\n        // image is tall, i want to shrink radius vertical\n        blurScale = this.aspectRatio;\n      }\n    }\n    const blur = blurScale * this.blur * 0.12;\n    if (this.horizontal) {\n      delta[0] = blur;\n    } else {\n      delta[1] = blur;\n    }\n    return delta;\n  }\n}\n\nclassRegistry.setClass(Blur);\n","export const fragmentSource = `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform vec2 uDelta;\n    varying vec2 vTexCoord;\n    const float nSamples = 15.0;\n    vec3 v3offset = vec3(12.9898, 78.233, 151.7182);\n    float random(vec3 scale) {\n      /* use the fragment position for a different seed per-pixel */\n      return fract(sin(dot(gl_FragCoord.xyz, scale)) * 43758.5453);\n    }\n    void main() {\n      vec4 color = vec4(0.0);\n      float total = 0.0;\n      float offset = random(v3offset);\n      for (float t = -nSamples; t <= nSamples; t++) {\n        float percent = (t + offset - 0.5) / nSamples;\n        float weight = 1.0 - abs(percent);\n        color += texture2D(uTexture, vTexCoord + uDelta * percent) * weight;\n        total += weight;\n      }\n      gl_FragColor = color / total;\n    }\n  ` as const;\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/brightness';\n\ntype BrightnessOwnProps = {\n  brightness: number;\n};\n\nexport const brightnessDefaultValues: BrightnessOwnProps = {\n  brightness: 0,\n};\n\n/**\n * Brightness filter class\n * @example\n * const filter = new Brightness({\n *   brightness: 0.05\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Brightness extends BaseFilter<'Brightness', BrightnessOwnProps> {\n  /**\n   * Brightness value, from -1 to 1.\n   * translated to -255 to 255 for 2d\n   * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n   * @param {Number} brightness\n   * @default\n   */\n  declare brightness: BrightnessOwnProps['brightness'];\n\n  static type = 'Brightness';\n\n  static defaults = brightnessDefaultValues;\n\n  static uniformLocations = ['uBrightness'];\n\n  getFragmentSource() {\n    return fragmentSource;\n  }\n\n  /**\n   * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const brightness = Math.round(this.brightness * 255);\n    for (let i = 0; i < data.length; i += 4) {\n      data[i] = data[i] + brightness;\n      data[i + 1] = data[i + 1] + brightness;\n      data[i + 2] = data[i + 2] + brightness;\n    }\n  }\n\n  isNeutralState() {\n    return this.brightness === 0;\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform1f(uniformLocations.uBrightness, this.brightness);\n  }\n}\n\nclassRegistry.setClass(Brightness);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform float uBrightness;\n  varying vec2 vTexCoord;\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    color.rgb += uBrightness;\n    gl_FragColor = color;\n  }\n`;\n","import { BaseFilter } from './BaseFilter';\nimport type {\n  T2DPipelineState,\n  TMatColorMatrix,\n  TWebGLUniformLocationMap,\n} from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/colorMatrix';\n\ntype ColorMatrixOwnProps = {\n  matrix: TMatColorMatrix;\n  colorsOnly: boolean;\n};\n\nexport const colorMatrixDefaultValues: ColorMatrixOwnProps = {\n  matrix: [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0],\n  colorsOnly: true,\n};\n\n/**\n   * Color Matrix filter class\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl demo}\n   * @example <caption>Kodachrome filter</caption>\n   * const filter = new ColorMatrix({\n   *  matrix: [\n       1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n       -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n       -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n       0, 0, 0, 1, 0\n      ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\nexport class ColorMatrix<\n  Name extends string = 'ColorMatrix',\n  OwnProps extends object = ColorMatrixOwnProps,\n> extends BaseFilter<Name, OwnProps> {\n  /**\n   * Colormatrix for pixels.\n   * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n   * outside the -1, 1 range.\n   * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n   * @param {Array} matrix array of 20 numbers.\n   * @default\n   */\n  declare matrix: ColorMatrixOwnProps['matrix'];\n\n  /**\n   * Lock the colormatrix on the color part, skipping alpha, mainly for non webgl scenario\n   * to save some calculation\n   * @type Boolean\n   * @default true\n   */\n  declare colorsOnly: ColorMatrixOwnProps['colorsOnly'];\n\n  static type = 'ColorMatrix';\n\n  static defaults = colorMatrixDefaultValues;\n\n  static uniformLocations = ['uColorMatrix', 'uConstants'];\n\n  getFragmentSource(): string {\n    return fragmentSource;\n  }\n\n  /**\n   * Apply the ColorMatrix operation to a Uint8Array representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8Array to be filtered.\n   */\n  applyTo2d(options: T2DPipelineState) {\n    const imageData = options.imageData,\n      data = imageData.data,\n      m = this.matrix,\n      colorsOnly = this.colorsOnly;\n\n    for (let i = 0; i < data.length; i += 4) {\n      const r = data[i];\n      const g = data[i + 1];\n      const b = data[i + 2];\n      if (colorsOnly) {\n        data[i] = r * m[0] + g * m[1] + b * m[2] + m[4] * 255;\n        data[i + 1] = r * m[5] + g * m[6] + b * m[7] + m[9] * 255;\n        data[i + 2] = r * m[10] + g * m[11] + b * m[12] + m[14] * 255;\n      } else {\n        const a = data[i + 3];\n        data[i] = r * m[0] + g * m[1] + b * m[2] + a * m[3] + m[4] * 255;\n        data[i + 1] = r * m[5] + g * m[6] + b * m[7] + a * m[8] + m[9] * 255;\n        data[i + 2] =\n          r * m[10] + g * m[11] + b * m[12] + a * m[13] + m[14] * 255;\n        data[i + 3] =\n          r * m[15] + g * m[16] + b * m[17] + a * m[18] + m[19] * 255;\n      }\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    const m = this.matrix,\n      matrix = [\n        m[0],\n        m[1],\n        m[2],\n        m[3],\n        m[5],\n        m[6],\n        m[7],\n        m[8],\n        m[10],\n        m[11],\n        m[12],\n        m[13],\n        m[15],\n        m[16],\n        m[17],\n        m[18],\n      ],\n      constants = [m[4], m[9], m[14], m[19]];\n    gl.uniformMatrix4fv(uniformLocations.uColorMatrix, false, matrix);\n    gl.uniform4fv(uniformLocations.uConstants, constants);\n  }\n\n  toObject() {\n    return {\n      ...super.toObject(),\n      matrix: [...this.matrix] as TMatColorMatrix,\n    };\n  }\n}\n\nclassRegistry.setClass(ColorMatrix);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  varying vec2 vTexCoord;\n  uniform mat4 uColorMatrix;\n  uniform vec4 uConstants;\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    color *= uColorMatrix;\n    color += uConstants;\n    gl_FragColor = color;\n  }`;\n","import { ColorMatrix } from './ColorMatrix';\nimport { classRegistry } from '../ClassRegistry';\nimport type { TMatColorMatrix } from './typedefs';\n\ntype FixedFiltersOwnProps = {\n  colorsOnly: boolean;\n};\n\nexport function createColorMatrixFilter(key: string, matrix: TMatColorMatrix) {\n  const newClass = class extends ColorMatrix<typeof key, FixedFiltersOwnProps> {\n    static type = key;\n\n    static defaults = {\n      colorsOnly: false,\n      matrix,\n    };\n\n    //@ts-expect-error TS wants matrix to be exported.\n    toObject(): { type: string } & FixedFiltersOwnProps {\n      return { type: this.type, colorsOnly: this.colorsOnly };\n    }\n  };\n  classRegistry.setClass(newClass, key);\n  return newClass as typeof ColorMatrix<typeof key, FixedFiltersOwnProps>;\n}\n\nexport const Brownie = createColorMatrixFilter(\n  'Brownie',\n  [\n    0.5997, 0.34553, -0.27082, 0, 0.186, -0.0377, 0.86095, 0.15059, 0, -0.1449,\n    0.24113, -0.07441, 0.44972, 0, -0.02965, 0, 0, 0, 1, 0,\n  ],\n);\n\nexport const Vintage = createColorMatrixFilter(\n  'Vintage',\n  [\n    0.62793, 0.32021, -0.03965, 0, 0.03784, 0.02578, 0.64411, 0.03259, 0,\n    0.02926, 0.0466, -0.08512, 0.52416, 0, 0.02023, 0, 0, 0, 1, 0,\n  ],\n);\n\nexport const Kodachrome = createColorMatrixFilter(\n  'Kodachrome',\n  [\n    1.12855, -0.39673, -0.03992, 0, 0.24991, -0.16404, 1.08352, -0.05498, 0,\n    0.09698, -0.16786, -0.56034, 1.60148, 0, 0.13972, 0, 0, 0, 1, 0,\n  ],\n);\n\nexport const Technicolor = createColorMatrixFilter(\n  'Technicolor',\n  [\n    1.91252, -0.85453, -0.09155, 0, 0.04624, -0.30878, 1.76589, -0.10601, 0,\n    -0.27589, -0.2311, -0.75018, 1.84759, 0, 0.12137, 0, 0, 0, 1, 0,\n  ],\n);\n\nexport const Polaroid = createColorMatrixFilter(\n  'Polaroid',\n  [\n    1.438, -0.062, -0.062, 0, 0, -0.122, 1.378, -0.122, 0, 0, -0.016, -0.016,\n    1.483, 0, 0, 0, 0, 0, 1, 0,\n  ],\n);\n\nexport const Sepia = createColorMatrixFilter(\n  'Sepia',\n  [\n    0.393, 0.769, 0.189, 0, 0, 0.349, 0.686, 0.168, 0, 0, 0.272, 0.534, 0.131,\n    0, 0, 0, 0, 0, 1, 0,\n  ],\n);\n\nexport const BlackWhite = createColorMatrixFilter(\n  'BlackWhite',\n  [\n    1.5, 1.5, 1.5, 0, -1, 1.5, 1.5, 1.5, 0, -1, 1.5, 1.5, 1.5, 0, -1, 0, 0, 0,\n    1, 0,\n  ],\n);\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLPipelineState } from './typedefs';\nimport { isWebGLPipelineState } from './utils';\nimport { classRegistry } from '../ClassRegistry';\n\ntype ComposedOwnProps = {\n  subFilters: BaseFilter<string, object>[];\n};\n\n/**\n * A container class that knows how to apply a sequence of filters to an input image.\n */\nexport class Composed extends BaseFilter<'Composed', ComposedOwnProps> {\n  /**\n   * A non sparse array of filters to apply\n   */\n  declare subFilters: ComposedOwnProps['subFilters'];\n\n  static type = 'Composed';\n\n  constructor(\n    options: { subFilters?: BaseFilter<string, object>[] } & Record<\n      string,\n      any\n    > = {},\n  ) {\n    super(options);\n    this.subFilters = options.subFilters || [];\n  }\n\n  /**\n   * Apply this container's filters to the input image provided.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be applied.\n   */\n  applyTo(options: TWebGLPipelineState | T2DPipelineState) {\n    if (isWebGLPipelineState(options)) {\n      options.passes += this.subFilters.length - 1;\n    }\n    this.subFilters.forEach((filter) => {\n      filter.applyTo(options);\n    });\n  }\n\n  /**\n   * Serialize this filter into JSON.\n   * @returns {Object} A JSON representation of this filter.\n   */\n  //@ts-expect-error TS doesn't like this toObject\n  toObject(): {\n    type: 'Composed';\n    subFilters: ReturnType<BaseFilter<string, object>['toObject']>[];\n  } {\n    return {\n      type: this.type,\n      subFilters: this.subFilters.map((filter) => filter.toObject()),\n    };\n  }\n\n  isNeutralState() {\n    return !this.subFilters.some((filter) => !filter.isNeutralState());\n  }\n\n  /**\n   * Deserialize a JSON definition of a ComposedFilter into a concrete instance.\n   * @static\n   * @param {oject} object Object to create an instance from\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal] handle aborting `BlendImage` filter loading, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @returns {Promise<Composed>}\n   */\n  static fromObject(\n    object: Record<string, any>,\n    options: { signal: AbortSignal },\n  ): Promise<Composed> {\n    return Promise.all(\n      ((object.subFilters || []) as BaseFilter<string, object>[]).map(\n        (filter) =>\n          classRegistry\n            .getClass<typeof BaseFilter>(filter.type)\n            .fromObject(filter, options),\n      ),\n    ).then(\n      (enlivedFilters) => new this({ subFilters: enlivedFilters }) as Composed,\n    );\n  }\n}\n\nclassRegistry.setClass(Composed);\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/constrast';\n\ntype ContrastOwnProps = {\n  contrast: number;\n};\n\nexport const contrastDefaultValues: ContrastOwnProps = {\n  contrast: 0,\n};\n\n/**\n * Contrast filter class\n * @example\n * const filter = new Contrast({\n *   contrast: 0.25\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Contrast extends BaseFilter<'Contrast', ContrastOwnProps> {\n  /**\n   * contrast value, range from -1 to 1.\n   * @param {Number} contrast\n   * @default 0\n   */\n  declare contrast: ContrastOwnProps['contrast'];\n\n  static type = 'Contrast';\n\n  static defaults = contrastDefaultValues;\n\n  static uniformLocations = ['uContrast'];\n\n  getFragmentSource() {\n    return fragmentSource;\n  }\n\n  isNeutralState() {\n    return this.contrast === 0;\n  }\n\n  /**\n   * Apply the Contrast operation to a Uint8Array representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8Array to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const contrast = Math.floor(this.contrast * 255),\n      contrastF = (259 * (contrast + 255)) / (255 * (259 - contrast));\n\n    for (let i = 0; i < data.length; i += 4) {\n      data[i] = contrastF * (data[i] - 128) + 128;\n      data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\n      data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform1f(uniformLocations.uContrast, this.contrast);\n  }\n}\n\nclassRegistry.setClass(Contrast);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform float uContrast;\n  varying vec2 vTexCoord;\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    float contrastF = 1.015 * (uContrast + 1.0) / (1.0 * (1.015 - uContrast));\n    color.rgb = contrastF * (color.rgb - 0.5) + 0.5;\n    gl_FragColor = color;\n  }`;\n","export const fragmentSource = {\n  Convolute_3_1: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[9];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 0);\n      for (float h = 0.0; h < 3.0; h+=1.0) {\n        for (float w = 0.0; w < 3.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 1), uStepH * (h - 1));\n          color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 3.0 + w)];\n        }\n      }\n      gl_FragColor = color;\n    }\n    `,\n  Convolute_3_0: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[9];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 1);\n      for (float h = 0.0; h < 3.0; h+=1.0) {\n        for (float w = 0.0; w < 3.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 1.0), uStepH * (h - 1.0));\n          color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 3.0 + w)];\n        }\n      }\n      float alpha = texture2D(uTexture, vTexCoord).a;\n      gl_FragColor = color;\n      gl_FragColor.a = alpha;\n    }\n    `,\n  Convolute_5_1: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[25];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 0);\n      for (float h = 0.0; h < 5.0; h+=1.0) {\n        for (float w = 0.0; w < 5.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\n          color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 5.0 + w)];\n        }\n      }\n      gl_FragColor = color;\n    }\n    `,\n  Convolute_5_0: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[25];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 1);\n      for (float h = 0.0; h < 5.0; h+=1.0) {\n        for (float w = 0.0; w < 5.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\n          color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 5.0 + w)];\n        }\n      }\n      float alpha = texture2D(uTexture, vTexCoord).a;\n      gl_FragColor = color;\n      gl_FragColor.a = alpha;\n    }\n    `,\n  Convolute_7_1: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[49];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 0);\n      for (float h = 0.0; h < 7.0; h+=1.0) {\n        for (float w = 0.0; w < 7.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\n          color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 7.0 + w)];\n        }\n      }\n      gl_FragColor = color;\n    }\n    `,\n  Convolute_7_0: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[49];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 1);\n      for (float h = 0.0; h < 7.0; h+=1.0) {\n        for (float w = 0.0; w < 7.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\n          color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 7.0 + w)];\n        }\n      }\n      float alpha = texture2D(uTexture, vTexCoord).a;\n      gl_FragColor = color;\n      gl_FragColor.a = alpha;\n    }\n    `,\n  Convolute_9_1: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[81];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 0);\n      for (float h = 0.0; h < 9.0; h+=1.0) {\n        for (float w = 0.0; w < 9.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\n          color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 9.0 + w)];\n        }\n      }\n      gl_FragColor = color;\n    }\n    `,\n  Convolute_9_0: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[81];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 1);\n      for (float h = 0.0; h < 9.0; h+=1.0) {\n        for (float w = 0.0; w < 9.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\n          color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 9.0 + w)];\n        }\n      }\n      float alpha = texture2D(uTexture, vTexCoord).a;\n      gl_FragColor = color;\n      gl_FragColor.a = alpha;\n    }\n    `,\n};\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/convolute';\n\nexport type ConvoluteOwnProps = {\n  opaque: boolean;\n  matrix: number[];\n};\n\nexport const convoluteDefaultValues: ConvoluteOwnProps = {\n  opaque: false,\n  matrix: [0, 0, 0, 0, 1, 0, 0, 0, 0],\n};\n\n/**\n * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\n * @example <caption>Sharpen filter</caption>\n * const filter = new Convolute({\n *   matrix: [ 0, -1,  0,\n *            -1,  5, -1,\n *             0, -1,  0 ]\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n * @example <caption>Blur filter</caption>\n * const filter = new Convolute({\n *   matrix: [ 1/9, 1/9, 1/9,\n *             1/9, 1/9, 1/9,\n *             1/9, 1/9, 1/9 ]\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n * @example <caption>Emboss filter</caption>\n * const filter = new Convolute({\n *   matrix: [ 1,   1,  1,\n *             1, 0.7, -1,\n *            -1,  -1, -1 ]\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n * @example <caption>Emboss filter with opaqueness</caption>\n * const filter = new Convolute({\n *   opaque: true,\n *   matrix: [ 1,   1,  1,\n *             1, 0.7, -1,\n *            -1,  -1, -1 ]\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n */\nexport class Convolute extends BaseFilter<'Convolute', ConvoluteOwnProps> {\n  /*\n   * Opaque value (true/false)\n   */\n  declare opaque: ConvoluteOwnProps['opaque'];\n\n  /*\n   * matrix for the filter, max 9x9\n   */\n  declare matrix: ConvoluteOwnProps['matrix'];\n\n  static type = 'Convolute';\n\n  static defaults = convoluteDefaultValues;\n\n  static uniformLocations = ['uMatrix', 'uOpaque', 'uHalfSize', 'uSize'];\n\n  getCacheKey() {\n    return `${this.type}_${Math.sqrt(this.matrix.length)}_${\n      this.opaque ? 1 : 0\n    }` as keyof typeof fragmentSource;\n  }\n\n  getFragmentSource() {\n    return fragmentSource[this.getCacheKey()];\n  }\n\n  /**\n   * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d(options: T2DPipelineState) {\n    const imageData = options.imageData,\n      data = imageData.data,\n      weights = this.matrix,\n      side = Math.round(Math.sqrt(weights.length)),\n      halfSide = Math.floor(side / 2),\n      sw = imageData.width,\n      sh = imageData.height,\n      output = options.ctx.createImageData(sw, sh),\n      dst = output.data,\n      // go through the destination image pixels\n      alphaFac = this.opaque ? 1 : 0;\n    let r, g, b, a, dstOff, scx, scy, srcOff, wt, x, y, cx, cy;\n\n    for (y = 0; y < sh; y++) {\n      for (x = 0; x < sw; x++) {\n        dstOff = (y * sw + x) * 4;\n        // calculate the weighed sum of the source image pixels that\n        // fall under the convolution matrix\n        r = 0;\n        g = 0;\n        b = 0;\n        a = 0;\n\n        for (cy = 0; cy < side; cy++) {\n          for (cx = 0; cx < side; cx++) {\n            scy = y + cy - halfSide;\n            scx = x + cx - halfSide;\n\n            // eslint-disable-next-line max-depth\n            if (scy < 0 || scy >= sh || scx < 0 || scx >= sw) {\n              continue;\n            }\n\n            srcOff = (scy * sw + scx) * 4;\n            wt = weights[cy * side + cx];\n\n            r += data[srcOff] * wt;\n            g += data[srcOff + 1] * wt;\n            b += data[srcOff + 2] * wt;\n            // eslint-disable-next-line max-depth\n            if (!alphaFac) {\n              a += data[srcOff + 3] * wt;\n            }\n          }\n        }\n        dst[dstOff] = r;\n        dst[dstOff + 1] = g;\n        dst[dstOff + 2] = b;\n        if (!alphaFac) {\n          dst[dstOff + 3] = a;\n        } else {\n          dst[dstOff + 3] = data[dstOff + 3];\n        }\n      }\n    }\n    options.imageData = output;\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform1fv(uniformLocations.uMatrix, this.matrix);\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @return {Object} Object representation of an instance\n   */\n  toObject() {\n    return {\n      ...super.toObject(),\n      opaque: this.opaque,\n      matrix: [...this.matrix],\n    };\n  }\n}\n\nclassRegistry.setClass(Convolute);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform vec3 uGamma;\n  varying vec2 vTexCoord;\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    vec3 correction = (1.0 / uGamma);\n    color.r = pow(color.r, correction.r);\n    color.g = pow(color.g, correction.g);\n    color.b = pow(color.b, correction.b);\n    gl_FragColor = color;\n    gl_FragColor.rgb *= color.a;\n  }\n`;\n","import { BaseFilter } from './BaseFilter';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/gamma';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\n\nconst GAMMA = 'Gamma' as const;\n\nexport type GammaInput = [number, number, number];\n\nexport type GammaOwnProps = {\n  gamma: GammaInput;\n};\n\nexport const gammaDefaultValues: GammaOwnProps = {\n  gamma: [1, 1, 1],\n};\n\n/**\n * Gamma filter class\n * @example\n * const filter = new Gamma({\n *   gamma: [1, 0.5, 2.1]\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Gamma extends BaseFilter<typeof GAMMA, GammaOwnProps> {\n  /**\n   * Gamma array value, from 0.01 to 2.2.\n   * @param {Array} gamma\n   * @default\n   */\n  declare gamma: GammaOwnProps['gamma'];\n  declare rgbValues?: {\n    r: Uint8Array;\n    g: Uint8Array;\n    b: Uint8Array;\n  };\n\n  static type = GAMMA;\n\n  static defaults = gammaDefaultValues;\n\n  static uniformLocations = ['uGamma'];\n\n  getFragmentSource() {\n    return fragmentSource;\n  }\n\n  constructor(options: { gamma?: GammaInput } = {}) {\n    super(options);\n    this.gamma =\n      options.gamma ||\n      ((\n        this.constructor as typeof Gamma\n      ).defaults.gamma.concat() as GammaInput);\n  }\n\n  /**\n   * Apply the Gamma operation to a Uint8Array representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8Array to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const gamma = this.gamma,\n      rInv = 1 / gamma[0],\n      gInv = 1 / gamma[1],\n      bInv = 1 / gamma[2];\n\n    if (!this.rgbValues) {\n      this.rgbValues = {\n        r: new Uint8Array(256),\n        g: new Uint8Array(256),\n        b: new Uint8Array(256),\n      };\n    }\n\n    // This is an optimization - pre-compute a look-up table for each color channel\n    // instead of performing these pow calls for each pixel in the image.\n    const rgb = this.rgbValues;\n    for (let i = 0; i < 256; i++) {\n      rgb.r[i] = Math.pow(i / 255, rInv) * 255;\n      rgb.g[i] = Math.pow(i / 255, gInv) * 255;\n      rgb.b[i] = Math.pow(i / 255, bInv) * 255;\n    }\n    for (let i = 0; i < data.length; i += 4) {\n      data[i] = rgb.r[data[i]];\n      data[i + 1] = rgb.g[data[i + 1]];\n      data[i + 2] = rgb.b[data[i + 2]];\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform3fv(uniformLocations.uGamma, this.gamma);\n  }\n\n  isNeutralState() {\n    const { gamma } = this;\n    return gamma[0] === 1 && gamma[1] === 1 && gamma[2] === 1;\n  }\n\n  toObject(): { type: typeof GAMMA; gamma: GammaInput } {\n    return {\n      type: GAMMA,\n      gamma: this.gamma.concat() as GammaInput,\n    };\n  }\n}\n\nclassRegistry.setClass(Gamma);\n","import type { TGrayscaleMode } from '../Grayscale';\n\nexport const fragmentSource: Record<TGrayscaleMode, string> = {\n  average: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = texture2D(uTexture, vTexCoord);\n      float average = (color.r + color.b + color.g) / 3.0;\n      gl_FragColor = vec4(average, average, average, color.a);\n    }\n    `,\n  lightness: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform int uMode;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 col = texture2D(uTexture, vTexCoord);\n      float average = (max(max(col.r, col.g),col.b) + min(min(col.r, col.g),col.b)) / 2.0;\n      gl_FragColor = vec4(average, average, average, col.a);\n    }\n    `,\n  luminosity: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform int uMode;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 col = texture2D(uTexture, vTexCoord);\n      float average = 0.21 * col.r + 0.72 * col.g + 0.07 * col.b;\n      gl_FragColor = vec4(average, average, average, col.a);\n    }\n    `,\n};\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/grayscale';\n\nexport type TGrayscaleMode = 'average' | 'lightness' | 'luminosity';\n\ntype GrayscaleOwnProps = {\n  mode: TGrayscaleMode;\n};\n\nexport const grayscaleDefaultValues: GrayscaleOwnProps = {\n  mode: 'average',\n};\n\n/**\n * Grayscale image filter class\n * @example\n * const filter = new Grayscale();\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Grayscale extends BaseFilter<'Grayscale', GrayscaleOwnProps> {\n  declare mode: TGrayscaleMode;\n\n  static type = 'Grayscale';\n\n  static defaults = grayscaleDefaultValues;\n\n  static uniformLocations = ['uMode'];\n\n  /**\n   * Apply the Grayscale operation to a Uint8Array representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8Array to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    for (let i = 0, value: number; i < data.length; i += 4) {\n      switch (this.mode) {\n        case 'average':\n          value = (data[i] + data[i + 1] + data[i + 2]) / 3;\n          break;\n        case 'lightness':\n          value =\n            (Math.min(data[i], data[i + 1], data[i + 2]) +\n              Math.max(data[i], data[i + 1], data[i + 2])) /\n            2;\n          break;\n        case 'luminosity':\n          value = 0.21 * data[i] + 0.72 * data[i + 1] + 0.07 * data[i + 2];\n          break;\n      }\n\n      data[i] = value;\n      data[i + 1] = value;\n      data[i + 2] = value;\n    }\n  }\n\n  getCacheKey() {\n    return `${this.type}_${this.mode}`;\n  }\n\n  getFragmentSource() {\n    return fragmentSource[this.mode];\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    const mode = 1;\n    gl.uniform1i(uniformLocations.uMode, mode);\n  }\n\n  /**\n   * Grayscale filter isNeutralState implementation\n   * The filter is never neutral\n   * on the image\n   **/\n  isNeutralState() {\n    return false;\n  }\n}\n\nclassRegistry.setClass(Grayscale);\n","import { cos } from '../util/misc/cos';\nimport { sin } from '../util/misc/sin';\nimport { ColorMatrix } from './ColorMatrix';\nimport type { TWebGLPipelineState, T2DPipelineState } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\n\nexport type HueRotationOwnProps = {\n  rotation: number;\n};\n\nexport const hueRotationDefaultValues: HueRotationOwnProps = {\n  rotation: 0,\n};\n\n/**\n * HueRotation filter class\n * @example\n * const filter = new HueRotation({\n *   rotation: -0.5\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class HueRotation extends ColorMatrix<\n  'HueRotation',\n  HueRotationOwnProps\n> {\n  /**\n   * HueRotation value, from -1 to 1.\n   */\n  declare rotation: HueRotationOwnProps['rotation'];\n\n  static type = 'HueRotation';\n\n  static defaults = hueRotationDefaultValues;\n\n  calculateMatrix() {\n    const rad = this.rotation * Math.PI,\n      cosine = cos(rad),\n      sine = sin(rad),\n      aThird = 1 / 3,\n      aThirdSqtSin = Math.sqrt(aThird) * sine,\n      OneMinusCos = 1 - cosine;\n    this.matrix = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0];\n    this.matrix[0] = cosine + OneMinusCos / 3;\n    this.matrix[1] = aThird * OneMinusCos - aThirdSqtSin;\n    this.matrix[2] = aThird * OneMinusCos + aThirdSqtSin;\n    this.matrix[5] = aThird * OneMinusCos + aThirdSqtSin;\n    this.matrix[6] = cosine + aThird * OneMinusCos;\n    this.matrix[7] = aThird * OneMinusCos - aThirdSqtSin;\n    this.matrix[10] = aThird * OneMinusCos - aThirdSqtSin;\n    this.matrix[11] = aThird * OneMinusCos + aThirdSqtSin;\n    this.matrix[12] = cosine + aThird * OneMinusCos;\n  }\n\n  isNeutralState() {\n    return this.rotation === 0;\n  }\n\n  applyTo(options: TWebGLPipelineState | T2DPipelineState) {\n    this.calculateMatrix();\n    super.applyTo(options);\n  }\n\n  //@ts-expect-error TS and classes with different methods\n  toObject(): { type: 'HueRotation'; rotation: number } {\n    return {\n      type: this.type,\n      rotation: this.rotation,\n    };\n  }\n}\n\nclassRegistry.setClass(HueRotation);\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/invert';\n\nexport type InvertOwnProps = {\n  alpha: boolean;\n  invert: boolean;\n};\n\nexport const invertDefaultValues: InvertOwnProps = {\n  alpha: false,\n  invert: true,\n};\n\n/**\n * @example\n * const filter = new Invert();\n * object.filters.push(filter);\n * object.applyFilters(canvas.renderAll.bind(canvas));\n */\nexport class Invert extends BaseFilter<'Invert', InvertOwnProps> {\n  /**\n   * Invert also alpha.\n   * @param {Boolean} alpha\n   * @default\n   **/\n  declare alpha: InvertOwnProps['alpha'];\n\n  /**\n   * Filter invert. if false, does nothing\n   * @param {Boolean} invert\n   * @default\n   */\n  declare invert: InvertOwnProps['invert'];\n\n  static type = 'Invert';\n\n  static defaults = invertDefaultValues;\n\n  static uniformLocations = ['uInvert', 'uAlpha'];\n\n  /**\n   * Apply the Invert operation to a Uint8Array representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8Array to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    for (let i = 0; i < data.length; i += 4) {\n      data[i] = 255 - data[i];\n      data[i + 1] = 255 - data[i + 1];\n      data[i + 2] = 255 - data[i + 2];\n\n      if (this.alpha) {\n        data[i + 3] = 255 - data[i + 3];\n      }\n    }\n  }\n\n  protected getFragmentSource(): string {\n    return fragmentSource;\n  }\n\n  /**\n   * Invert filter isNeutralState implementation\n   * Used only in image applyFilters to discard filters that will not have an effect\n   * on the image\n   * @param {Object} options\n   **/\n  isNeutralState() {\n    return !this.invert;\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform1i(uniformLocations.uInvert, Number(this.invert));\n    gl.uniform1i(uniformLocations.uAlpha, Number(this.alpha));\n  }\n}\n\nclassRegistry.setClass(Invert);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform int uInvert;\n  uniform int uAlpha;\n  varying vec2 vTexCoord;\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    if (uInvert == 1) {\n      if (uAlpha == 1) {\n        gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,1.0 -color.a);\n      } else {\n        gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,color.a);\n      }\n    } else {\n      gl_FragColor = color;\n    }\n  }\n`;\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/noise';\n\nexport type NoiseOwnProps = {\n  noise: number;\n};\n\nexport const noiseDefaultValues: NoiseOwnProps = {\n  noise: 0,\n};\n\n/**\n * Noise filter class\n * @example\n * const filter = new Noise({\n *   noise: 700\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n */\nexport class Noise extends BaseFilter<'Noise', NoiseOwnProps> {\n  /**\n   * Noise value, from\n   * @param {Number} noise\n   * @default\n   */\n  declare noise: NoiseOwnProps['noise'];\n\n  static type = 'Noise';\n\n  static defaults = noiseDefaultValues;\n\n  static uniformLocations = ['uNoise', 'uSeed'];\n\n  getFragmentSource() {\n    return fragmentSource;\n  }\n\n  /**\n   * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const noise = this.noise;\n    for (let i = 0; i < data.length; i += 4) {\n      const rand = (0.5 - Math.random()) * noise;\n      data[i] += rand;\n      data[i + 1] += rand;\n      data[i + 2] += rand;\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform1f(uniformLocations.uNoise, this.noise / 255);\n    gl.uniform1f(uniformLocations.uSeed, Math.random());\n  }\n\n  isNeutralState() {\n    return this.noise === 0;\n  }\n}\n\nclassRegistry.setClass(Noise);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform float uStepH;\n  uniform float uNoise;\n  uniform float uSeed;\n  varying vec2 vTexCoord;\n  float rand(vec2 co, float seed, float vScale) {\n    return fract(sin(dot(co.xy * vScale ,vec2(12.9898 , 78.233))) * 43758.5453 * (seed + 0.01) / 2.0);\n  }\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    color.rgb += (0.5 - rand(vTexCoord, uSeed, 0.1 / uStepH)) * uNoise;\n    gl_FragColor = color;\n  }\n`;\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/pixelate';\n\nexport type PixelateOwnProps = {\n  blocksize: number;\n};\n\nexport const pixelateDefaultValues: PixelateOwnProps = {\n  blocksize: 4,\n};\n\n/**\n * Pixelate filter class\n * @example\n * const filter = new Pixelate({\n *   blocksize: 8\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Pixelate extends BaseFilter<'Pixelate', PixelateOwnProps> {\n  declare blocksize: PixelateOwnProps['blocksize'];\n\n  static type = 'Pixelate';\n\n  static defaults = pixelateDefaultValues;\n\n  static uniformLocations = ['uBlocksize'];\n\n  /**\n   * Apply the Pixelate operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({ imageData: { data, width, height } }: T2DPipelineState) {\n    for (let i = 0; i < height; i += this.blocksize) {\n      for (let j = 0; j < width; j += this.blocksize) {\n        const index = i * 4 * width + j * 4;\n        const r = data[index];\n        const g = data[index + 1];\n        const b = data[index + 2];\n        const a = data[index + 3];\n\n        for (let _i = i; _i < Math.min(i + this.blocksize, height); _i++) {\n          for (let _j = j; _j < Math.min(j + this.blocksize, width); _j++) {\n            const index = _i * 4 * width + _j * 4;\n            data[index] = r;\n            data[index + 1] = g;\n            data[index + 2] = b;\n            data[index + 3] = a;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Indicate when the filter is not gonna apply changes to the image\n   **/\n  isNeutralState() {\n    return this.blocksize === 1;\n  }\n\n  protected getFragmentSource(): string {\n    return fragmentSource;\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform1f(uniformLocations.uBlocksize, this.blocksize);\n  }\n}\n\nclassRegistry.setClass(Pixelate);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform float uBlocksize;\n  uniform float uStepW;\n  uniform float uStepH;\n  varying vec2 vTexCoord;\n  void main() {\n    float blockW = uBlocksize * uStepW;\n    float blockH = uBlocksize * uStepH;\n    int posX = int(vTexCoord.x / blockW);\n    int posY = int(vTexCoord.y / blockH);\n    float fposX = float(posX);\n    float fposY = float(posY);\n    vec2 squareCoords = vec2(fposX * blockW, fposY * blockH);\n    vec4 color = texture2D(uTexture, squareCoords);\n    gl_FragColor = color;\n  }\n`;\n","import { classRegistry } from '../ClassRegistry';\nimport { Color } from '../color/Color';\nimport { BaseFilter } from './BaseFilter';\nimport { fragmentShader } from './shaders/removeColor';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\n\nexport type RemoveColorOwnProps = {\n  color: string;\n  distance: number;\n  useAlpha: boolean;\n};\n\nexport const removeColorDefaultValues: RemoveColorOwnProps = {\n  color: '#FFFFFF',\n  distance: 0.02,\n  useAlpha: false,\n};\n\n/**\n * Remove white filter class\n * @example\n * const filter = new RemoveColor({\n *   threshold: 0.2,\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n */\nexport class RemoveColor extends BaseFilter<\n  'RemoveColor',\n  RemoveColorOwnProps\n> {\n  /**\n   * Color to remove, in any format understood by {@link Color}.\n   * @param {String} type\n   * @default\n   */\n  declare color: RemoveColorOwnProps['color'];\n\n  /**\n   * distance to actual color, as value up or down from each r,g,b\n   * between 0 and 1\n   **/\n  declare distance: RemoveColorOwnProps['distance'];\n\n  /**\n   * For color to remove inside distance, use alpha channel for a smoother deletion\n   * NOT IMPLEMENTED YET\n   **/\n  declare useAlpha: RemoveColorOwnProps['useAlpha'];\n\n  static type = 'RemoveColor';\n\n  static defaults = removeColorDefaultValues;\n\n  static uniformLocations = ['uLow', 'uHigh'];\n\n  getFragmentSource() {\n    return fragmentShader;\n  }\n\n  /**\n   * Applies filter to canvas element\n   * @param {Object} canvasEl Canvas element to apply filter to\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const distance = this.distance * 255,\n      source = new Color(this.color).getSource(),\n      lowC = [source[0] - distance, source[1] - distance, source[2] - distance],\n      highC = [\n        source[0] + distance,\n        source[1] + distance,\n        source[2] + distance,\n      ];\n\n    for (let i = 0; i < data.length; i += 4) {\n      const r = data[i];\n      const g = data[i + 1];\n      const b = data[i + 2];\n\n      if (\n        r > lowC[0] &&\n        g > lowC[1] &&\n        b > lowC[2] &&\n        r < highC[0] &&\n        g < highC[1] &&\n        b < highC[2]\n      ) {\n        data[i + 3] = 0;\n      }\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    const source = new Color(this.color).getSource(),\n      distance = this.distance,\n      lowC = [\n        0 + source[0] / 255 - distance,\n        0 + source[1] / 255 - distance,\n        0 + source[2] / 255 - distance,\n        1,\n      ],\n      highC = [\n        source[0] / 255 + distance,\n        source[1] / 255 + distance,\n        source[2] / 255 + distance,\n        1,\n      ];\n    gl.uniform4fv(uniformLocations.uLow, lowC);\n    gl.uniform4fv(uniformLocations.uHigh, highC);\n  }\n}\n\nclassRegistry.setClass(RemoveColor);\n","export const fragmentShader = `\nprecision highp float;\nuniform sampler2D uTexture;\nuniform vec4 uLow;\nuniform vec4 uHigh;\nvarying vec2 vTexCoord;\nvoid main() {\n  gl_FragColor = texture2D(uTexture, vTexCoord);\n  if(all(greaterThan(gl_FragColor.rgb,uLow.rgb)) && all(greaterThan(uHigh.rgb,gl_FragColor.rgb))) {\n    gl_FragColor.a = 0.0;\n  }\n}\n`;\n","import { BaseFilter } from './BaseFilter';\nimport type {\n  T2DPipelineState,\n  TWebGLPipelineState,\n  TWebGLUniformLocationMap,\n} from './typedefs';\nimport { isWebGLPipelineState } from './utils';\nimport { classRegistry } from '../ClassRegistry';\nimport { createCanvasElement } from '../util/misc/dom';\nimport type { XY } from '../Point';\n\nexport type TResizeType = 'bilinear' | 'hermite' | 'sliceHack' | 'lanczos';\n\nexport type ResizeOwnProps = {\n  resizeType: TResizeType;\n  scaleX: number;\n  scaleY: number;\n  lanczosLobes: number;\n};\n\nexport const resizeDefaultValues: ResizeOwnProps = {\n  resizeType: 'hermite',\n  scaleX: 1,\n  scaleY: 1,\n  lanczosLobes: 3,\n};\n\ntype ResizeDuring2DResize = Resize & {\n  rcpScaleX: number;\n  rcpScaleY: number;\n};\n\ntype ResizeDuringWEBGLResize = Resize & {\n  rcpScaleX: number;\n  rcpScaleY: number;\n  horizontal: boolean;\n  width: number;\n  height: number;\n  taps: number[];\n  tempScale: number;\n  dH: number;\n  dW: number;\n};\n\n/**\n * Resize image filter class\n * @example\n * const filter = new Resize();\n * object.filters.push(filter);\n * object.applyFilters(canvas.renderAll.bind(canvas));\n */\nexport class Resize extends BaseFilter<'Resize', ResizeOwnProps> {\n  /**\n   * Resize type\n   * for webgl resizeType is just lanczos, for canvas2d can be:\n   * bilinear, hermite, sliceHack, lanczos.\n   * @default\n   */\n  declare resizeType: ResizeOwnProps['resizeType'];\n\n  /**\n   * Scale factor for resizing, x axis\n   * @param {Number} scaleX\n   * @default\n   */\n  declare scaleX: ResizeOwnProps['scaleX'];\n\n  /**\n   * Scale factor for resizing, y axis\n   * @param {Number} scaleY\n   * @default\n   */\n  declare scaleY: ResizeOwnProps['scaleY'];\n\n  /**\n   * LanczosLobes parameter for lanczos filter, valid for resizeType lanczos\n   * @param {Number} lanczosLobes\n   * @default\n   */\n  declare lanczosLobes: ResizeOwnProps['lanczosLobes'];\n\n  static type = 'Resize';\n\n  static defaults = resizeDefaultValues;\n\n  static uniformLocations = ['uDelta', 'uTaps'];\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    this: ResizeDuringWEBGLResize,\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform2fv(\n      uniformLocations.uDelta,\n      this.horizontal ? [1 / this.width, 0] : [0, 1 / this.height],\n    );\n    gl.uniform1fv(uniformLocations.uTaps, this.taps);\n  }\n\n  getFilterWindow(this: ResizeDuringWEBGLResize) {\n    const scale = this.tempScale;\n    return Math.ceil(this.lanczosLobes / scale);\n  }\n\n  getCacheKey(this: ResizeDuringWEBGLResize): string {\n    const filterWindow = this.getFilterWindow();\n    return `${this.type}_${filterWindow}`;\n  }\n\n  getFragmentSource(this: ResizeDuringWEBGLResize): string {\n    const filterWindow = this.getFilterWindow();\n    return this.generateShader(filterWindow);\n  }\n\n  getTaps(this: ResizeDuringWEBGLResize) {\n    const lobeFunction = this.lanczosCreate(this.lanczosLobes),\n      scale = this.tempScale,\n      filterWindow = this.getFilterWindow(),\n      taps = new Array(filterWindow);\n    for (let i = 1; i <= filterWindow; i++) {\n      taps[i - 1] = lobeFunction(i * scale);\n    }\n    return taps;\n  }\n\n  /**\n   * Generate vertex and shader sources from the necessary steps numbers\n   * @param {Number} filterWindow\n   */\n  generateShader(filterWindow: number) {\n    const offsets = new Array(filterWindow);\n    for (let i = 1; i <= filterWindow; i++) {\n      offsets[i - 1] = `${i}.0 * uDelta`;\n    }\n    return `\n      precision highp float;\n      uniform sampler2D uTexture;\n      uniform vec2 uDelta;\n      varying vec2 vTexCoord;\n      uniform float uTaps[${filterWindow}];\n      void main() {\n        vec4 color = texture2D(uTexture, vTexCoord);\n        float sum = 1.0;\n        ${offsets\n          .map(\n            (offset, i) => `\n              color += texture2D(uTexture, vTexCoord + ${offset}) * uTaps[${i}] + texture2D(uTexture, vTexCoord - ${offset}) * uTaps[${i}];\n              sum += 2.0 * uTaps[${i}];\n            `,\n          )\n          .join('\\n')}\n        gl_FragColor = color / sum;\n      }\n    `;\n  }\n\n  applyToForWebgl(this: ResizeDuringWEBGLResize, options: TWebGLPipelineState) {\n    options.passes++;\n    this.width = options.sourceWidth;\n    this.horizontal = true;\n    this.dW = Math.round(this.width * this.scaleX);\n    this.dH = options.sourceHeight;\n    this.tempScale = this.dW / this.width;\n    this.taps = this.getTaps();\n    options.destinationWidth = this.dW;\n    super.applyTo(options);\n    options.sourceWidth = options.destinationWidth;\n\n    this.height = options.sourceHeight;\n    this.horizontal = false;\n    this.dH = Math.round(this.height * this.scaleY);\n    this.tempScale = this.dH / this.height;\n    this.taps = this.getTaps();\n    options.destinationHeight = this.dH;\n    super.applyTo(options);\n    options.sourceHeight = options.destinationHeight;\n  }\n\n  /**\n   * Apply the resize filter to the image\n   * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyTo(options: TWebGLPipelineState | T2DPipelineState) {\n    if (isWebGLPipelineState(options)) {\n      (this as unknown as ResizeDuringWEBGLResize).applyToForWebgl(options);\n    } else {\n      (this as unknown as ResizeDuring2DResize).applyTo2d(options);\n    }\n  }\n\n  isNeutralState() {\n    return this.scaleX === 1 && this.scaleY === 1;\n  }\n\n  lanczosCreate(lobes: number) {\n    return (x: number) => {\n      if (x >= lobes || x <= -lobes) {\n        return 0.0;\n      }\n      if (x < 1.1920929e-7 && x > -1.1920929e-7) {\n        return 1.0;\n      }\n      x *= Math.PI;\n      const xx = x / lobes;\n      return ((Math.sin(x) / x) * Math.sin(xx)) / xx;\n    };\n  }\n\n  applyTo2d(this: ResizeDuring2DResize, options: T2DPipelineState) {\n    const imageData = options.imageData,\n      scaleX = this.scaleX,\n      scaleY = this.scaleY;\n\n    this.rcpScaleX = 1 / scaleX;\n    this.rcpScaleY = 1 / scaleY;\n\n    const oW = imageData.width;\n    const oH = imageData.height;\n    const dW = Math.round(oW * scaleX);\n    const dH = Math.round(oH * scaleY);\n    let newData: ImageData;\n\n    if (this.resizeType === 'sliceHack') {\n      newData = this.sliceByTwo(options, oW, oH, dW, dH);\n    } else if (this.resizeType === 'hermite') {\n      newData = this.hermiteFastResize(options, oW, oH, dW, dH);\n    } else if (this.resizeType === 'bilinear') {\n      newData = this.bilinearFiltering(options, oW, oH, dW, dH);\n    } else if (this.resizeType === 'lanczos') {\n      newData = this.lanczosResize(options, oW, oH, dW, dH);\n    } else {\n      // this should never trigger, is here just for safety net.\n      newData = new ImageData(dW, dH);\n    }\n    options.imageData = newData;\n  }\n\n  /**\n   * Filter sliceByTwo\n   * @param {Object} canvasEl Canvas element to apply filter to\n   * @param {Number} oW Original Width\n   * @param {Number} oH Original Height\n   * @param {Number} dW Destination Width\n   * @param {Number} dH Destination Height\n   * @returns {ImageData}\n   */\n  sliceByTwo(\n    options: T2DPipelineState,\n    oW: number,\n    oH: number,\n    dW: number,\n    dH: number,\n  ) {\n    const imageData = options.imageData;\n    const mult = 0.5;\n    let doneW = false;\n    let doneH = false;\n    let stepW = oW * mult;\n    let stepH = oH * mult;\n    const resources = options.filterBackend.resources;\n    let sX = 0;\n    let sY = 0;\n    const dX = oW;\n    let dY = 0;\n    if (!resources.sliceByTwo) {\n      resources.sliceByTwo = createCanvasElement();\n    }\n    const tmpCanvas = resources.sliceByTwo;\n    if (tmpCanvas.width < oW * 1.5 || tmpCanvas.height < oH) {\n      tmpCanvas.width = oW * 1.5;\n      tmpCanvas.height = oH;\n    }\n    const ctx = tmpCanvas.getContext('2d')!;\n    ctx.clearRect(0, 0, oW * 1.5, oH);\n    ctx.putImageData(imageData, 0, 0);\n\n    dW = Math.floor(dW);\n    dH = Math.floor(dH);\n\n    while (!doneW || !doneH) {\n      oW = stepW;\n      oH = stepH;\n      if (dW < Math.floor(stepW * mult)) {\n        stepW = Math.floor(stepW * mult);\n      } else {\n        stepW = dW;\n        doneW = true;\n      }\n      if (dH < Math.floor(stepH * mult)) {\n        stepH = Math.floor(stepH * mult);\n      } else {\n        stepH = dH;\n        doneH = true;\n      }\n      ctx.drawImage(tmpCanvas, sX, sY, oW, oH, dX, dY, stepW, stepH);\n      sX = dX;\n      sY = dY;\n      dY += stepH;\n    }\n    return ctx.getImageData(sX, sY, dW, dH);\n  }\n\n  /**\n   * Filter lanczosResize\n   * @param {Object} canvasEl Canvas element to apply filter to\n   * @param {Number} oW Original Width\n   * @param {Number} oH Original Height\n   * @param {Number} dW Destination Width\n   * @param {Number} dH Destination Height\n   * @returns {ImageData}\n   */\n  lanczosResize(\n    this: ResizeDuring2DResize,\n    options: T2DPipelineState,\n    oW: number,\n    oH: number,\n    dW: number,\n    dH: number,\n  ): ImageData {\n    function process(u: number): ImageData {\n      let v, i, weight, idx, a, red, green, blue, alpha, fX, fY;\n      center.x = (u + 0.5) * ratioX;\n      icenter.x = Math.floor(center.x);\n      for (v = 0; v < dH; v++) {\n        center.y = (v + 0.5) * ratioY;\n        icenter.y = Math.floor(center.y);\n        a = 0;\n        red = 0;\n        green = 0;\n        blue = 0;\n        alpha = 0;\n        for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n          if (i < 0 || i >= oW) {\n            continue;\n          }\n          fX = Math.floor(1000 * Math.abs(i - center.x));\n          if (!cacheLanc[fX]) {\n            cacheLanc[fX] = {};\n          }\n          for (let j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n            if (j < 0 || j >= oH) {\n              continue;\n            }\n            fY = Math.floor(1000 * Math.abs(j - center.y));\n            if (!cacheLanc[fX][fY]) {\n              cacheLanc[fX][fY] = lanczos(\n                Math.sqrt(\n                  Math.pow(fX * rcpRatioX, 2) + Math.pow(fY * rcpRatioY, 2),\n                ) / 1000,\n              );\n            }\n            weight = cacheLanc[fX][fY];\n            if (weight > 0) {\n              idx = (j * oW + i) * 4;\n              a += weight;\n              red += weight * srcData[idx];\n              green += weight * srcData[idx + 1];\n              blue += weight * srcData[idx + 2];\n              alpha += weight * srcData[idx + 3];\n            }\n          }\n        }\n        idx = (v * dW + u) * 4;\n        destData[idx] = red / a;\n        destData[idx + 1] = green / a;\n        destData[idx + 2] = blue / a;\n        destData[idx + 3] = alpha / a;\n      }\n\n      if (++u < dW) {\n        return process(u);\n      } else {\n        return destImg;\n      }\n    }\n\n    const srcData = options.imageData.data,\n      destImg = options.ctx.createImageData(dW, dH),\n      destData = destImg.data,\n      lanczos = this.lanczosCreate(this.lanczosLobes),\n      ratioX = this.rcpScaleX,\n      ratioY = this.rcpScaleY,\n      rcpRatioX = 2 / this.rcpScaleX,\n      rcpRatioY = 2 / this.rcpScaleY,\n      range2X = Math.ceil((ratioX * this.lanczosLobes) / 2),\n      range2Y = Math.ceil((ratioY * this.lanczosLobes) / 2),\n      cacheLanc: Record<number, Record<number, number>> = {},\n      center: XY = { x: 0, y: 0 },\n      icenter: XY = { x: 0, y: 0 };\n\n    return process(0);\n  }\n\n  /**\n   * bilinearFiltering\n   * @param {Object} canvasEl Canvas element to apply filter to\n   * @param {Number} oW Original Width\n   * @param {Number} oH Original Height\n   * @param {Number} dW Destination Width\n   * @param {Number} dH Destination Height\n   * @returns {ImageData}\n   */\n  bilinearFiltering(\n    this: ResizeDuring2DResize,\n    options: T2DPipelineState,\n    oW: number,\n    oH: number,\n    dW: number,\n    dH: number,\n  ) {\n    let a;\n    let b;\n    let c;\n    let d;\n    let x;\n    let y;\n    let i;\n    let j;\n    let xDiff;\n    let yDiff;\n    let chnl;\n    let color;\n    let offset = 0;\n    let origPix;\n    const ratioX = this.rcpScaleX;\n    const ratioY = this.rcpScaleY;\n    const w4 = 4 * (oW - 1);\n    const img = options.imageData;\n    const pixels = img.data;\n    const destImage = options.ctx.createImageData(dW, dH);\n    const destPixels = destImage.data;\n    for (i = 0; i < dH; i++) {\n      for (j = 0; j < dW; j++) {\n        x = Math.floor(ratioX * j);\n        y = Math.floor(ratioY * i);\n        xDiff = ratioX * j - x;\n        yDiff = ratioY * i - y;\n        origPix = 4 * (y * oW + x);\n\n        for (chnl = 0; chnl < 4; chnl++) {\n          a = pixels[origPix + chnl];\n          b = pixels[origPix + 4 + chnl];\n          c = pixels[origPix + w4 + chnl];\n          d = pixels[origPix + w4 + 4 + chnl];\n          color =\n            a * (1 - xDiff) * (1 - yDiff) +\n            b * xDiff * (1 - yDiff) +\n            c * yDiff * (1 - xDiff) +\n            d * xDiff * yDiff;\n          destPixels[offset++] = color;\n        }\n      }\n    }\n    return destImage;\n  }\n\n  /**\n   * hermiteFastResize\n   * @param {Object} canvasEl Canvas element to apply filter to\n   * @param {Number} oW Original Width\n   * @param {Number} oH Original Height\n   * @param {Number} dW Destination Width\n   * @param {Number} dH Destination Height\n   * @returns {ImageData}\n   */\n  hermiteFastResize(\n    this: ResizeDuring2DResize,\n    options: T2DPipelineState,\n    oW: number,\n    oH: number,\n    dW: number,\n    dH: number,\n  ) {\n    const ratioW = this.rcpScaleX,\n      ratioH = this.rcpScaleY,\n      ratioWHalf = Math.ceil(ratioW / 2),\n      ratioHHalf = Math.ceil(ratioH / 2),\n      img = options.imageData,\n      data = img.data,\n      img2 = options.ctx.createImageData(dW, dH),\n      data2 = img2.data;\n    for (let j = 0; j < dH; j++) {\n      for (let i = 0; i < dW; i++) {\n        const x2 = (i + j * dW) * 4;\n        let weight = 0;\n        let weights = 0;\n        let weightsAlpha = 0;\n        let gxR = 0;\n        let gxG = 0;\n        let gxB = 0;\n        let gxA = 0;\n        const centerY = (j + 0.5) * ratioH;\n        for (let yy = Math.floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n          const dy = Math.abs(centerY - (yy + 0.5)) / ratioHHalf,\n            centerX = (i + 0.5) * ratioW,\n            w0 = dy * dy;\n          for (let xx = Math.floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n            let dx = Math.abs(centerX - (xx + 0.5)) / ratioWHalf;\n            const w = Math.sqrt(w0 + dx * dx);\n            /* eslint-disable max-depth */\n            if (w > 1 && w < -1) {\n              continue;\n            }\n            //hermite filter\n            weight = 2 * w * w * w - 3 * w * w + 1;\n            if (weight > 0) {\n              dx = 4 * (xx + yy * oW);\n              //alpha\n              gxA += weight * data[dx + 3];\n              weightsAlpha += weight;\n              //colors\n              if (data[dx + 3] < 255) {\n                weight = (weight * data[dx + 3]) / 250;\n              }\n              gxR += weight * data[dx];\n              gxG += weight * data[dx + 1];\n              gxB += weight * data[dx + 2];\n              weights += weight;\n            }\n            /* eslint-enable max-depth */\n          }\n        }\n        data2[x2] = gxR / weights;\n        data2[x2 + 1] = gxG / weights;\n        data2[x2 + 2] = gxB / weights;\n        data2[x2 + 3] = gxA / weightsAlpha;\n      }\n    }\n    return img2;\n  }\n}\n\nclassRegistry.setClass(Resize);\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/saturation';\n\nexport type SaturationOwnProps = {\n  saturation: number;\n};\n\nexport const saturationDefaultValues: SaturationOwnProps = {\n  saturation: 0,\n};\n\n/**\n * Saturate filter class\n * @example\n * const filter = new Saturation({\n *   saturation: 1\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Saturation extends BaseFilter<'Saturation', SaturationOwnProps> {\n  /**\n   * Saturation value, from -1 to 1.\n   * Increases/decreases the color saturation.\n   * A value of 0 has no effect.\n   *\n   * @param {Number} saturation\n   * @default\n   */\n  declare saturation: SaturationOwnProps['saturation'];\n\n  static type = 'Saturation';\n\n  static defaults = saturationDefaultValues;\n\n  static uniformLocations = ['uSaturation'];\n\n  getFragmentSource() {\n    return fragmentSource;\n  }\n\n  /**\n   * Apply the Saturation operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const adjust = -this.saturation;\n    for (let i = 0; i < data.length; i += 4) {\n      const max = Math.max(data[i], data[i + 1], data[i + 2]);\n      data[i] += max !== data[i] ? (max - data[i]) * adjust : 0;\n      data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * adjust : 0;\n      data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * adjust : 0;\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform1f(uniformLocations.uSaturation, -this.saturation);\n  }\n\n  isNeutralState() {\n    return this.saturation === 0;\n  }\n}\n\nclassRegistry.setClass(Saturation);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform float uSaturation;\n  varying vec2 vTexCoord;\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    float rgMax = max(color.r, color.g);\n    float rgbMax = max(rgMax, color.b);\n    color.r += rgbMax != color.r ? (rgbMax - color.r) * uSaturation : 0.00;\n    color.g += rgbMax != color.g ? (rgbMax - color.g) * uSaturation : 0.00;\n    color.b += rgbMax != color.b ? (rgbMax - color.b) * uSaturation : 0.00;\n    gl_FragColor = color;\n  }\n`;\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/vibrance';\n\nexport type VibranceOwnProps = {\n  vibrance: number;\n};\n\nexport const vibranceDefaultValues: VibranceOwnProps = {\n  vibrance: 0,\n};\n\n/**\n * Vibrance filter class\n * @example\n * const filter = new Vibrance({\n *   vibrance: 1\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Vibrance extends BaseFilter<'Vibrance', VibranceOwnProps> {\n  /**\n   * Vibrance value, from -1 to 1.\n   * Increases/decreases the saturation of more muted colors with less effect on saturated colors.\n   * A value of 0 has no effect.\n   *\n   * @param {Number} vibrance\n   * @default\n   */\n  declare vibrance: VibranceOwnProps['vibrance'];\n\n  static type = 'Vibrance';\n\n  static defaults = vibranceDefaultValues;\n\n  static uniformLocations = ['uVibrance'];\n\n  getFragmentSource() {\n    return fragmentSource;\n  }\n\n  /**\n   * Apply the Vibrance operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const adjust = -this.vibrance;\n    for (let i = 0; i < data.length; i += 4) {\n      const max = Math.max(data[i], data[i + 1], data[i + 2]);\n      const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\n      const amt = ((Math.abs(max - avg) * 2) / 255) * adjust;\n      data[i] += max !== data[i] ? (max - data[i]) * amt : 0;\n      data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * amt : 0;\n      data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * amt : 0;\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {TWebGLUniformLocationMap} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform1f(uniformLocations.uVibrance, -this.vibrance);\n  }\n\n  isNeutralState() {\n    return this.vibrance === 0;\n  }\n}\n\nclassRegistry.setClass(Vibrance);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform float uVibrance;\n  varying vec2 vTexCoord;\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    float max = max(color.r, max(color.g, color.b));\n    float avg = (color.r + color.g + color.b) / 3.0;\n    float amt = (abs(max - avg) * 2.0) * uVibrance;\n    color.r += max != color.r ? (max - color.r) * amt : 0.00;\n    color.g += max != color.g ? (max - color.g) * amt : 0.00;\n    color.b += max != color.b ? (max - color.b) * amt : 0.00;\n    gl_FragColor = color;\n  }\n`;\n","import { Color } from '../color/Color';\nimport type { Point } from '../Point';\nimport { Shadow } from '../Shadow';\nimport { Circle } from '../shapes/Circle';\nimport { Group } from '../shapes/Group';\nimport { getRandomInt } from '../util/internals/getRandomInt';\nimport type { Canvas } from '../canvas/Canvas';\nimport { BaseBrush } from './BaseBrush';\nimport type { CircleBrushPoint } from './typedefs';\nimport { CENTER } from '../constants';\n\nexport class CircleBrush extends BaseBrush {\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width = 10;\n\n  declare points: CircleBrushPoint[];\n\n  constructor(canvas: Canvas) {\n    super(canvas);\n    this.points = [];\n  }\n\n  /**\n   * Invoked inside on mouse down and mouse move\n   * @param {Point} pointer\n   */\n  drawDot(pointer: Point) {\n    const point = this.addPoint(pointer),\n      ctx = this.canvas.contextTop;\n    this._saveAndTransform(ctx);\n    this.dot(ctx, point);\n    ctx.restore();\n  }\n\n  dot(ctx: CanvasRenderingContext2D, point: CircleBrushPoint) {\n    ctx.fillStyle = point.fill;\n    ctx.beginPath();\n    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n  }\n\n  /**\n   * Invoked on mouse down\n   */\n  onMouseDown(pointer: Point) {\n    this.points = [];\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n    this.drawDot(pointer);\n  }\n\n  /**\n   * Render the full state of the brush\n   * @private\n   */\n  _render() {\n    const ctx = this.canvas.contextTop,\n      points = this.points;\n    this._saveAndTransform(ctx);\n    for (let i = 0; i < points.length; i++) {\n      this.dot(ctx, points[i]);\n    }\n    ctx.restore();\n  }\n\n  /**\n   * Invoked on mouse move\n   * @param {Point} pointer\n   */\n  onMouseMove(pointer: Point) {\n    if (this.limitedToCanvasSize === true && this._isOutSideCanvas(pointer)) {\n      return;\n    }\n    if (this.needsFullRender()) {\n      this.canvas.clearContext(this.canvas.contextTop);\n      this.addPoint(pointer);\n      this._render();\n    } else {\n      this.drawDot(pointer);\n    }\n  }\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp() {\n    const originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    const circles: Circle[] = [];\n\n    for (let i = 0; i < this.points.length; i++) {\n      const point = this.points[i],\n        circle = new Circle({\n          radius: point.radius,\n          left: point.x,\n          top: point.y,\n          originX: CENTER,\n          originY: CENTER,\n          fill: point.fill,\n        });\n\n      this.shadow && (circle.shadow = new Shadow(this.shadow));\n\n      circles.push(circle);\n    }\n    const group = new Group(circles, { canvas: this.canvas });\n\n    this.canvas.fire('before:path:created', { path: group });\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  }\n\n  /**\n   * @param {Object} pointer\n   * @return {Point} Just added pointer point\n   */\n  addPoint({ x, y }: Point) {\n    const pointerPoint: CircleBrushPoint = {\n      x,\n      y,\n      radius: getRandomInt(Math.max(0, this.width - 20), this.width + 20) / 2,\n      fill: new Color(this.color).setAlpha(getRandomInt(0, 100) / 100).toRgba(),\n    };\n\n    this.points.push(pointerPoint);\n\n    return pointerPoint;\n  }\n}\n","import { Pattern } from '../Pattern';\nimport { createCanvasElement } from '../util/misc/dom';\nimport type { Canvas } from '../canvas/Canvas';\nimport { PencilBrush } from './PencilBrush';\nimport type { TSimplePathData } from '../util/path/typedefs';\n\nexport class PatternBrush extends PencilBrush {\n  declare source?: CanvasImageSource;\n\n  constructor(canvas: Canvas) {\n    super(canvas);\n  }\n\n  getPatternSrc() {\n    const dotWidth = 20,\n      dotDistance = 5,\n      patternCanvas = createCanvasElement(),\n      patternCtx = patternCanvas.getContext('2d');\n\n    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n    if (patternCtx) {\n      patternCtx.fillStyle = this.color;\n      patternCtx.beginPath();\n      patternCtx.arc(\n        dotWidth / 2,\n        dotWidth / 2,\n        dotWidth / 2,\n        0,\n        Math.PI * 2,\n        false,\n      );\n      patternCtx.closePath();\n      patternCtx.fill();\n    }\n    return patternCanvas;\n  }\n\n  /**\n   * Creates \"pattern\" instance property\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  getPattern(ctx: CanvasRenderingContext2D) {\n    return ctx.createPattern(this.source || this.getPatternSrc(), 'repeat');\n  }\n\n  /**\n   * Sets brush styles\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  _setBrushStyles(ctx: CanvasRenderingContext2D) {\n    super._setBrushStyles(ctx);\n    const pattern = this.getPattern(ctx);\n    pattern && (ctx.strokeStyle = pattern);\n  }\n\n  /**\n   * Creates path\n   */\n  createPath(pathData: TSimplePathData) {\n    const path = super.createPath(pathData),\n      topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\n\n    path.stroke = new Pattern({\n      source: this.source || this.getPatternSrc(),\n      offsetX: -topLeft.x,\n      offsetY: -topLeft.y,\n    });\n    return path;\n  }\n}\n","import type { Point } from '../Point';\nimport { Group } from '../shapes/Group';\nimport { Shadow } from '../Shadow';\nimport { Rect } from '../shapes/Rect';\nimport { getRandomInt } from '../util/internals/getRandomInt';\nimport type { Canvas } from '../canvas/Canvas';\nimport { BaseBrush } from './BaseBrush';\nimport type { SprayBrushPoint } from './typedefs';\nimport { CENTER } from '../constants';\n\n/**\n *\n * @param rects\n * @returns\n */\nfunction getUniqueRects(rects: Rect[]) {\n  const uniqueRects: Record<string, boolean> = {};\n  const uniqueRectsArray: Rect[] = [];\n\n  for (let i = 0, key: string; i < rects.length; i++) {\n    key = `${rects[i].left}${rects[i].top}`;\n    if (!uniqueRects[key]) {\n      uniqueRects[key] = true;\n      uniqueRectsArray.push(rects[i]);\n    }\n  }\n\n  return uniqueRectsArray;\n}\n\nexport class SprayBrush extends BaseBrush {\n  /**\n   * Width of a spray\n   * @type Number\n   * @default\n   */\n  width = 10;\n\n  /**\n   * Density of a spray (number of dots per chunk)\n   * @type Number\n   * @default\n   */\n  density = 20;\n\n  /**\n   * Width of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidth = 1;\n\n  /**\n   * Width variance of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidthVariance = 1;\n\n  /**\n   * Whether opacity of a dot should be random\n   * @type Boolean\n   * @default\n   */\n  randomOpacity = false;\n\n  /**\n   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\n   * @type Boolean\n   * @default\n   */\n  optimizeOverlapping = true;\n\n  private declare sprayChunks: SprayBrushPoint[][];\n\n  private declare sprayChunk: SprayBrushPoint[];\n\n  /**\n   * Constructor\n   * @param {Canvas} canvas\n   * @return {SprayBrush} Instance of a spray brush\n   */\n  constructor(canvas: Canvas) {\n    super(canvas);\n    this.sprayChunks = [];\n    this.sprayChunk = [];\n  }\n\n  /**\n   * Invoked on mouse down\n   * @param {Point} pointer\n   */\n  onMouseDown(pointer: Point) {\n    this.sprayChunks = [];\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n\n    this.addSprayChunk(pointer);\n    this.renderChunck(this.sprayChunk);\n  }\n\n  /**\n   * Invoked on mouse move\n   * @param {Point} pointer\n   */\n  onMouseMove(pointer: Point) {\n    if (this.limitedToCanvasSize === true && this._isOutSideCanvas(pointer)) {\n      return;\n    }\n    this.addSprayChunk(pointer);\n    this.renderChunck(this.sprayChunk);\n  }\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp() {\n    const originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    const rects: Rect[] = [];\n\n    for (let i = 0; i < this.sprayChunks.length; i++) {\n      const sprayChunk = this.sprayChunks[i];\n      for (let j = 0; j < sprayChunk.length; j++) {\n        const chunck = sprayChunk[j];\n        const rect = new Rect({\n          width: chunck.width,\n          height: chunck.width,\n          left: chunck.x + 1,\n          top: chunck.y + 1,\n          originX: CENTER,\n          originY: CENTER,\n          fill: this.color,\n        });\n        rects.push(rect);\n      }\n    }\n\n    const group = new Group(\n      this.optimizeOverlapping ? getUniqueRects(rects) : rects,\n      {\n        objectCaching: true,\n        subTargetCheck: false,\n        interactive: false,\n      },\n    );\n    this.shadow && group.set('shadow', new Shadow(this.shadow));\n    this.canvas.fire('before:path:created', { path: group });\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  }\n\n  renderChunck(sprayChunck: SprayBrushPoint[]) {\n    const ctx = this.canvas.contextTop;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (let i = 0; i < sprayChunck.length; i++) {\n      const point = sprayChunck[i];\n      ctx.globalAlpha = point.opacity;\n      ctx.fillRect(point.x, point.y, point.width, point.width);\n    }\n\n    ctx.restore();\n  }\n\n  /**\n   * Render all spray chunks\n   */\n  _render() {\n    const ctx = this.canvas.contextTop;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (let i = 0; i < this.sprayChunks.length; i++) {\n      this.renderChunck(this.sprayChunks[i]);\n    }\n    ctx.restore();\n  }\n\n  /**\n   * @param {Point} pointer\n   */\n  addSprayChunk(pointer: Point) {\n    this.sprayChunk = [];\n    const radius = this.width / 2;\n\n    for (let i = 0; i < this.density; i++) {\n      this.sprayChunk.push({\n        x: getRandomInt(pointer.x - radius, pointer.x + radius),\n        y: getRandomInt(pointer.y - radius, pointer.y + radius),\n        width: this.dotWidthVariance\n          ? getRandomInt(\n              // bottom clamp width to 1\n              Math.max(1, this.dotWidth - this.dotWidthVariance),\n              this.dotWidth + this.dotWidthVariance,\n            )\n          : this.dotWidth,\n        opacity: this.randomOpacity ? getRandomInt(0, 100) / 100 : 1,\n      });\n    }\n\n    this.sprayChunks.push(this.sprayChunk);\n  }\n}\n","import { getFabricWindow } from '../env';\nimport type { LoadImageOptions } from '../util/misc/objectEnlive';\nimport { parseSVGDocument } from './parseSVGDocument';\nimport type { SVGParsingOutput, TSvgReviverCallback } from './typedefs';\n\n/**\n * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\n * @memberOf fabric\n * @param {String} string representing the svg\n * @param {TSvgParsedCallback} callback Invoked when the parsing is done, with null if parsing wasn't possible with the list of svg nodes.\n * {@link TSvgParsedCallback} also receives `allElements` array as the last argument. This is the full list of svg nodes available in the document.\n * You may want to use it if you are trying to regroup the objects as they were originally grouped in the SVG. ( This was the reason why it was added )\n * @param {TSvgReviverCallback} [reviver] Extra callback for further parsing of SVG elements, called after each fabric object has been created.\n * Takes as input the original svg element and the generated `FabricObject` as arguments. Used to inspect extra properties not parsed by fabric,\n * or extra custom manipulation\n * @param {Object} [options] Object containing options for parsing\n * @param {String} [options.crossOrigin] crossOrigin setting to use for external resources\n * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n */\nexport function loadSVGFromString(\n  string: string,\n  reviver?: TSvgReviverCallback,\n  options?: LoadImageOptions,\n): Promise<SVGParsingOutput> {\n  const parser = new (getFabricWindow().DOMParser)(),\n    // should we use `image/svg+xml` here?\n    doc = parser.parseFromString(string.trim(), 'text/xml');\n  return parseSVGDocument(doc, reviver, options);\n}\n","import { request } from '../util/internals/dom_request';\nimport { parseSVGDocument, createEmptyResponse } from './parseSVGDocument';\nimport type { SVGParsingOutput, TSvgReviverCallback } from './typedefs';\nimport type { LoadImageOptions } from '../util/misc/objectEnlive';\n\n/**\n * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\n * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\n * @memberOf fabric\n * @param {string} url where the SVG is\n * @param {TSvgParsedCallback} callback Invoked when the parsing is done, with null if parsing wasn't possible with the list of svg nodes.\n * {@link TSvgParsedCallback} also receives `allElements` array as the last argument. This is the full list of svg nodes available in the document.\n * You may want to use it if you are trying to regroup the objects as they were originally grouped in the SVG. ( This was the reason why it was added )\n * @param {TSvgReviverCallback} [reviver] Extra callback for further parsing of SVG elements, called after each fabric object has been created.\n * Takes as input the original svg element and the generated `FabricObject` as arguments. Used to inspect extra properties not parsed by fabric,\n * or extra custom manipulation\n * @param {Object} [options] Object containing options for parsing\n * @param {String} [options.crossOrigin] crossOrigin setting to use for external resources\n * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n */\nexport function loadSVGFromURL(\n  url: string,\n  reviver?: TSvgReviverCallback,\n  options: LoadImageOptions = {},\n): Promise<SVGParsingOutput> {\n  // need to handle error properly\n  return new Promise<Document>((resolve, reject) => {\n    const onComplete = (r: XMLHttpRequest) => {\n      const xml = r.responseXML;\n      if (xml) {\n        resolve(xml);\n      }\n      reject();\n    };\n\n    request(url.replace(/^\\n\\s*/, '').trim(), {\n      onComplete,\n      signal: options.signal,\n    });\n  })\n    .then((parsedDoc) => parseSVGDocument(parsedDoc, reviver, options))\n    .catch(() => {\n      // this is an unhappy path, we dont care about speed\n      return createEmptyResponse();\n    });\n}\n"],"names":["BaseConfiguration","constructor","_defineProperty","this","window","devicePixelRatio","config","super","configure","arguments","length","undefined","Object","assign","addFonts","paths","fontPaths","_objectSpread","removeFonts","forEach","fontFamily","clearFonts","restoreDefaults","keys","defaults","reduce","acc","key","log","severity","_len","optionalParams","Array","_key","console","FabricError","Error","message","options","concat","SignalAbortedError","context","GLProbe","WebGLProbe","testPrecision","gl","precision","fragmentSource","fragmentShader","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","queryWebGL","canvas","getContext","maxTextureSize","getParameter","MAX_TEXTURE_SIZE","GLPrecision","find","getExtension","loseContext","isSupported","textureSize","copyPasteData","env","setEnv","getEnv","document","isTouchSupported","navigator","maxTouchPoints","dispose","getFabricDocument","getFabricWindow","getDevicePixelRatio","_config$devicePixelRa","Math","max","cache","getFontCache","_ref","fontStyle","fontWeight","toLowerCase","charWidthsCache","fontCache","cacheKey","clearFontCache","limitDimsByArea","ar","perfLimitSizeTotal","roughWidth","sqrt","floor","VERSION","noop","halfPI","PI","twoMathPi","PiBy180","iMatrix","freeze","DEFAULT_SVG_FONT_SIZE","kRect","CENTER","LEFT","TOP","BOTTOM","RIGHT","NONE","reNewline","MOVING","SCALING","ROTATING","ROTATE","SKEWING","RESIZING","MODIFY_POLY","MODIFY_PATH","CHANGED","SCALE","SCALE_X","SCALE_Y","SKEW_X","SKEW_Y","FILL","STROKE","MODIFIED","JSON","SVG","classRegistry","Map","has","classType","getClass","get","setClass","classConstructor","set","type","getSVGClass","SVGTagName","setSVGClass","runningAnimations","remove","index","indexOf","splice","cancelAll","animations","animation","abort","cancelByCanvas","filter","_animation$target","target","cancelByTarget","Observable","on","arg0","handler","__eventListeners","entries","eventName","off","push","once","disposers","_ref2","d","disposer","args","call","_removeEventListener","eventListener","_ref3","fire","_this$__eventListener","listenersForEvent","i","removeFromArray","array","value","idx","cos","angle","abs","sin","angleSlice","sign","Point","y","x","add","that","addEquals","scalarAdd","scalar","scalarAddEquals","subtract","subtractEquals","scalarSubtract","scalarSubtractEquals","multiply","scalarMultiply","scalarMultiplyEquals","divide","scalarDivide","scalarDivideEquals","eq","lt","lte","gt","gte","lerp","t","min","distanceFrom","dx","dy","midPointFrom","toString","setXY","setX","setY","setFromPoint","swap","clone","rotate","radians","origin","ZERO","sinus","cosinus","p","transform","ignoreOffset","isCollection","fabricObject","isArray","_objects","createCollectionMixin","Base","Collection","_onObjectAdded","object","_onObjectRemoved","_onStackOrderChanged","objects","size","insertAt","_len2","_key2","removed","_len3","_key3","forEachObject","callback","getObjects","_len4","types","_key4","o","isType","item","isEmpty","contains","deep","includes","some","obj","complexity","memo","current","sendObjectToBack","unshift","bringObjectToFront","sendObjectBackwards","intersecting","newIdx","findNewLowerIndex","bringObjectForward","findNewUpperIndex","moveObjectTo","isOverlapping","collectObjects","left","top","width","height","includeIntersecting","tl","br","selectable","visible","intersectsWithRect","isContainedWithinRect","containsPoint","CommonMethods","_setOptions","prop","_setObject","_set","toggle","property","requestAnimFrame","requestAnimationFrame","cancelAnimFrame","handle","cancelAnimationFrame","id","uid","createCanvasElement","element","createElement","createImage","createCanvasElementFor","newCanvas","toDataURL","canvasEl","format","quality","degreesToRadians","degrees","radiansToDegrees","isIdentityMatrix","mat","every","transformPoint","invertTransform","a","r","multiplyTransformMatrices","b","is2x2","multiplyTransformMatrixArray","matrices","reduceRight","product","curr","calcPlaneRotation","atan2","qrDecompose","denom","pow","scaleX","scaleY","skewX","skewY","translateX","translateY","createTranslateMatrix","createRotateMatrix","angleRadiant","cosValue","sinValue","createScaleMatrix","angleToSkew","tan","createSkewXMatrix","skewValue","createSkewYMatrix","calcDimensionsMatrix","flipX","flipY","matrix","composeMatrix","scaleMatrix","loadImage","url","signal","crossOrigin","Promise","resolve","reject","aborted","img","err","src","addEventListener","done","onload","onerror","removeEventListener","enlivenObjects","reviver","instances","all","map","fromObject","then","fabricInstance","catch","error","instance","finally","enlivenObjectEnlivables","serializedObject","promises","values","enlived","pick","source","pickBy","predicate","ColorNameMap","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","hue2rgb","q","rgb2Hsl","g","maxValue","minValue","h","s","l","round","fromAlphaToFloat","parseFloat","endsWith","hexify","toUpperCase","padStart","greyAverage","avg","Color","color","setSource","_source","_tryParsingColor","sourceFromHex","sourceFromRgb","sourceFromHsl","isUnrecognised","getSource","toRgb","toRgba","join","toHsl","toHsla","toHex","toHexa","slice","getAlpha","setAlpha","alpha","toGrayscale","toBlackWhite","threshold","average","bOrW","overlayWith","otherColor","otherSource","R","G","B","fromRgb","fromRgba","match","parsedValue","fromHsl","fromHsla","parseAngletoDegrees","fromHex","expandedValue","split","hex","hexCouple","parseInt","lowercase","numeric","toFixed","number","fractionDigits","Number","parseUnit","fontSize","unit","exec","dpi","DPI","parsePreserveAspectRatioAttribute","attribute","firstPart","secondPart","trim","alignX","alignY","align","meetOrSlice","matrixToSVG","NUM_FRACTION_DIGITS","colorPropToSVG","colorValue","opacityValue","inlineStyle","toLive","opacity","isFiller","filler","isSerializableFiller","toObject","isPattern","offsetX","isTextObject","_renderText","isActiveSelection","getScrollLeftTop","doc","getDocumentFromElement","elementLoop","docElement","documentElement","body","scrollLeft","scrollTop","parentNode","host","nodeType","style","position","el","ownerDocument","getWindowFromElement","_el$ownerDocument","defaultView","setCanvasDimensions","ctx","retinaScaling","setAttribute","scale","setCSSDimensions","makeElementUnselectable","onselectstart","userSelect","StaticCanvasDOMManager","createLowerCanvas","lower","getElementById","hasAttribute","_originalCanvasStyle","cssText","classList","cleanupDOM","removeAttribute","setDimensions","calcOffset","_getWindowFromElement","offset","elemStyle","getComputedStyle","borderLeftWidth","borderTopWidth","paddingLeft","paddingTop","box","docElem","getBoundingClientRect","scrollLeftTop","clientLeft","clientTop","getElementOffset","staticCanvasDefaults","backgroundVpt","backgroundColor","overlayVpt","overlayColor","includeDefaultValues","svgViewportTransformation","renderOnAddRemove","skipOffscreen","enableRetinaScaling","imageSmoothingEnabled","controlsAboveOverlay","allowTouchScrolling","viewportTransform","StaticCanvas","lowerCanvasEl","_this$elements$lower","elements","contextContainer","_this$elements$lower2","getDefaults","ownDefaults","initElements","_setDimensionsImpl","skipControlsDrawing","calcViewportBoundaries","requestRenderAll","setCoords","getRetinaScaling","_offset","getWidth","getHeight","setWidth","setHeight","dimensions","cssOnly","backstoreOnly","hasLostContext","getZoom","setViewportTransform","vpt","zoomToPoint","point","before","newPoint","after","setZoom","absolutePan","relativePan","getElement","clearContext","clearRect","clear","backgroundImage","overlayImage","renderAll","cancelRequestedRender","destroyed","renderCanvas","renderAndReset","nextRenderHandle","disposed","iVpt","vptCoords","tr","bl","drawControls","_ctx","v","path","clipPath","patternQuality","_renderBackground","save","_renderObjects","restore","shouldCache","_transformDone","renderCache","forClipping","drawClipPathOnCanvas","_renderOverlay","__cleanupTask","globalCompositeOperation","zoomX","zoomY","drawImage","_cacheCanvas","cacheTranslationX","cacheTranslationY","len","render","_renderBackgroundOrOverlay","fill","needsVpt","isAFiller","beginPath","moveTo","lineTo","closePath","fillStyle","offsetY","m","gradientTransform","patternTransform","getCenter","getCenterPoint","centerObjectH","_centerObject","centerObjectV","centerObject","viewportCenterObject","getVpCenter","viewportCenterObjectH","viewportCenterObjectV","center","toDatalessJSON","propertiesToInclude","toDatalessObject","_toObjectMethod","toJSON","methodName","clipPathData","excludeFromExport","_toObject","version","__serializeBgOverlay","originalValue","data","bgImage","bgColor","background","overlay","toSVG","markup","_setSVGPreamble","_setSVGHeader","clipPathId","_setSVGBgOverlayColor","_setSVGBgOverlayImage","_setSVGObjects","suppressPreamble","encoding","optViewBox","viewBox","createSVGFontFacesMarkup","createSVGRefElementsMarkup","createSVGClipPathMarkup","toClipPathSVG","shouldTransform","additionalTransform","fontList","styles","styleRow","fontListMarkup","_setSVGObject","bgOrOverlay","repeat","finalWidth","finalHeight","loadFromJSON","json","serialized","parse","enlivedMap","properties","cloneWithoutData","multiplier","finalMultiplier","toCanvasElement","scaledWidth","scaledHeight","zoom","originalWidth","originalHeight","originalSkipControlsDrawing","newZoom","vp","newVp","originalRetina","objectsToRender","task","destroy","kill","touchEvents","getPointer","event","scroll","_evt","touchProp","changedTouches","getTouchInfo","clientX","clientY","isTouchEvent","pointerType","stopEvent","e","preventDefault","stopPropagation","makeBoundingBoxFromPoints","points","addTransformToObject","applyTransformToObject","calcOwnMatrix","_qrDecompose","otherOptions","_objectWithoutProperties","_excluded","setPositionByOrigin","resetObjectTransform","saveObjectTransform","sizeAfterTransform","dimX","dimY","bbox","calcPlaneChangeMatrix","from","sendPointToPlane","to","sendVectorToPlane","sendObjectToPlane","fireEvent","_target$canvas","originOffset","bottom","right","resolveOrigin","originValue","NOT_ALLOWED_CURSOR","isTransformCentered","originX","originY","invertOrigin","isLocked","lockingKey","commonEventInfo","eventData","pointer","findCornerQuadrant","control","cornerAngle","getTotalAngle","getLocalPoint","corner","controls","padding","localPoint","getRelativeCenterPoint","translateToGivenOrigin","normalizePoint","dragHandler","newLeft","newTop","snapObjectFn","_target$canvas2","change","moveX","moveY","FabricObjectSVGExportMixin","getSvgStyles","skipShadow","fillRule","strokeWidth","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","visibility","getSvgFilter","stroke","shadow","getSvgCommons","getSvgTransform","full","calcTransformMatrix","svgTransform","_toSVG","_reviver","_createBaseSVGMarkup","_createBaseClipPathSVGMarkup","objectMarkup","commonPieces","noStyle","withShadow","styleInfo","shadowInfo","vectorEffect","strokeUniform","absoluteClipPath","absolutePositioned","clipPathMarkup","addPaintOrder","paintFirst","getSvgRegex","arr","RegExp","reNum","String","raw","_templateObject","_taggedTemplateLiteral","svgNS","reFontDeclaration","attributesMap","cx","cy","display","fSize","cPath","svgValidTagNamesRegEx","svgViewBoxElementsRegEx","svgValidParentsRegEx","reViewBoxAttrValue","unitVectorX","zero","rotateVector","vector","createVector","magnitude","calcAngleBetweenVectors","crossProduct","dotProduct","calcVectorRotation","getUnitVector","getOrthonormalVector","counterClockwise","isBetweenVectors","AxB","AxT","BxT","shadowOffsetRegex","reOffsetsAndBlur","Shadow","parseShadow","shadowStr","blur","replace","fBoxX","fBoxY","affectStroke","nonScaling","capValue","stateProperties","cacheProperties","fabricObjectDefaultValues","minScaleLimit","objectCaching","inverted","centeredRotation","centeredScaling","dirty","normalize","c","asin","elastic","defaultEasing","easeOutBounce","easeInBounce","easeInCirc","easeInCubic","easeInElastic","normA","normS","normP","easeInExpo","easeInOutBounce","easeInOutCirc","easeInOutCubic","easeInOutElastic","normC","easeInOutExpo","easeInOutQuad","easeInOutQuart","easeInOutQuint","easeInOutSine","easeInQuad","easeInQuart","easeInQuint","easeInSine","easeOutCirc","easeOutCubic","easeOutElastic","easeOutExpo","easeOutQuad","easeOutQuart","easeOutQuint","easeOutSine","defaultAbort","AnimationBase","startValue","byValue","duration","delay","easing","onStart","onChange","onComplete","tick","bind","_onStart","_onChange","_onComplete","_abort","endValue","calculate","state","_state","isDone","start","firstTick","timestamp","startTime","Date","register","setTimeout","durationMs","boundDurationMs","durationProgress","valueProgress","unregister","ValueAnimation","timeElapsed","ArrayAnimation","defaultColorEasing","wrapColorCallback","rgba","ColorAnimation","startColor","endColor","animate","isArrayAnimation","animateColor","Intersection","status","append","isPointContained","T","A","infinite","AB","isPointInPolygon","other","hits","inter","intersectSegmentSegment","intersectLineLine","a1","a2","b1","b2","aInfinite","bInfinite","a2xa1x","a2ya1y","b2xb1x","b2yb1y","a1xb1x","a1yb1y","uaT","ubT","uB","ua","ub","segmentsCoincide","intersectSegmentLine","s1","s2","l1","l2","intersectLinePolygon","result","intersectSegmentPolygon","intersectPolygonPolygon","points1","points2","coincidences","intersectPolygonRectangle","r1","r2","topRight","bottomLeft","ObjectGeometry","getX","getXY","getY","getRelativeX","setRelativeX","getRelativeY","setRelativeY","relativePosition","getRelativeXY","group","setRelativeXY","isStrokeAccountedForInDimensions","getCoords","aCoords","calcACoords","coords","intersectsWithObject","intersection","isContainedWithinObject","getBoundingRect","isOnScreen","isPartiallyOnScreen","getScaledWidth","_getTransformedDimensions","getScaledHeight","scaleToWidth","boundingRectFactor","scaleToHeight","getCanvasRetinaScaling","_this$canvas","getViewportTransform","_this$canvas2","rotateMatrix","tMatrix","finalMatrix","dim","w","transformMatrixKey","skipGroup","prefix","matrixCache","ownMatrixCache","_getNonTransformedDimensions","_calculateCurrentDimensions","dimOptions","preScalingStrokeValue","postScalingStrokeValue","finalDimensions","fromOriginX","fromOriginY","toOriginX","toOriginY","translateToCenterPoint","translateToOriginPoint","relCenter","getPointByOrigin","pos","_getLeftTopCoords","FabricObject","name","setOptions","_createCacheCanvas","_cacheContext","_updateCacheCanvas","_limitCacheSize","dims","maxCacheSideLimit","minCacheSideLimit","limX","limY","capped","_getCacheCanvasDimensions","objectScale","getTotalObjectScaling","neededX","neededY","minCacheSize","dimensionsChanged","zoomChanged","drawingWidth","drawingHeight","shouldRedraw","additionalWidth","additionalHeight","shouldResizeCanvas","canvasWidth","canvasHeight","sizeGrowing","getHeightOfLine","ceil","setTransform","translate","needFullTransform","contextTop","getObjectScaling","retina","getObjectOpacity","_constrainScale","isChanged","parent","isNotVisible","_setupCompositeOperation","drawSelectionBackground","_setOpacity","_setShadow","drawCacheOnCanvas","_removeCacheCanvas","drawObject","isCacheDirty","parentClipPaths","hasStroke","hasFill","needsItsOwnCache","ownCaching","isOnACache","willDrawShadow","drawClipPathOnCache","canvasWithClipPath","originalFill","originalStroke","_setClippingProperties","_render","_drawClipPath","createClipPathLayer","prevClipPath","skipCanvas","fillRect","_removeShadow","globalAlpha","_setStrokeStyles","decl","lineWidth","lineCap","lineDashOffset","lineJoin","miterLimit","gradientUnits","_applyPatternForTransformedGradient","strokeStyle","_applyPatternGradientTransform","_setFillStyles","_setLineDash","dashArray","setLineDash","sx","sy","multX","multY","scaling","shadowColor","shadowBlur","browserShadowBlurConstant","shadowOffsetX","shadowOffsetY","_renderPaintInOrder","_renderStroke","_renderFill","_pCtx$createPattern","pCanvas","pCtx","createPattern","_findCenterFromElement","objectForm","cloneAsImage","origParams","originalGroup","originalShadow","canvasProvider","withoutTransform","withoutShadow","boundingRect","shadowOffset","originalCanvas","setOnGroup","animatable","_animate","propIsColor","colorProperties","animationOptions","isDescendantOf","getAncestors","ancestors","findCommonAncestors","fork","otherFork","common","otherAncestors","ancestor","j","hasCommonAncestors","commonAncestors","isInFrontOf","ancestorData","firstCommonAncestor","headOfFork","pop","headOfOtherFork","thisIndex","otherIndex","propertiesToSerialize","customProperties","toFixedBound","val","_removeDefaultValues","baseValues","getPrototypeOf","baseValue","_fromObject","serializedObjectOptions","_ref4","extraParam","_excluded2","enlivedObjectOptions","wrapWithFireEvent","actionHandler","extraEventInfo","actionPerformed","wrapWithFixedAnchor","centerPoint","constraint","changeWidth","changeObjectWidth","strokePadding","oldWidth","newWidth","renderCircleControl","styleOverride","xSize","sizeX","cornerSize","ySize","sizeY","transparentCorners","cornerStrokeColor","myLeft","myTop","cornerColor","arc","renderSquareControl","xSizeBy2","ySizeBy2","strokeRect","Control","shouldActivate","controlKey","_fabricObject$canvas","getActiveObject","isControlVisible","getActionHandler","getMouseDownHandler","mouseDownHandler","getMouseUpHandler","mouseUpHandler","cursorStyleHandler","cursorStyle","getActionName","actionName","getVisibility","_fabricObject$_contro","_fabricObject$_contro2","_controlsVisibility","setVisibility","positionHandler","currentControl","calcCornerCoords","objectCornerSize","centerX","centerY","isTouch","fillX","touchSizeX","fillY","touchSizeY","cornerStyle","rotationStyleHandler","lockRotation","rotationWithSnapping","rotateObjectWithSnapping","ex","ey","theta","pivotPoint","lastAngle","curAngle","snapKey","snapAngleKey","snapAngle","snapThreshold","rightAngleLocked","leftAngleLocked","hasRotated","scaleIsProportional","lockUniScaling","uniformIsToggled","uniScaleKey","uniformScaling","scalingIsForbidden","by","scaleProportionally","lockX","lockY","scaleMap","scaleCursorStyleHandler","n","scaleObject","signX","signY","snapPointFn","snapped","gestureScale","original","oldScaleX","oldScaleY","scalingEqually","scaleObjectFromCorner","scalingX","scaleObjectX","scalingY","scaleObjectY","AXIS_KEYS","counterAxis","skew","lockSkewing","flip","skewMap","skewCursorStyleHandler","skewHandler","axis","originKey","lockSkewingKey","skewKey","flipKey","counterOriginKey","counterFlipKey","counterOriginFactor","skewingSide","finalHandler","skewingBefore","skewingStart","shearingStart","shearing","skewing","atan","changed","dimBefore","dimAfter","compensationFactor","skewObject","skewHandlerX","skewHandlerY","isAltAction","altActionKey","scaleOrSkewActionName","isAlternative","scaleSkewCursorStyleHandler","scalingXOrSkewingY","scalingYOrSkewingX","createObjectDefaultControls","ml","mr","mb","mt","mtr","withConnection","createResizeControls","createTextboxDefaultControls","InteractiveFabricObject","createControls","targetCanvas","noScaleCache","_currentTransform","action","startsWith","getActiveControl","__corner","coord","oCoords","findControl","forTouch","hasControls","cornerEntries","touchCorner","calcOCoords","rMatrix","positionMatrix","startMatrix","transformOptions","forEachControl","_calcCornerCoords","touchCornerSize","fn","selectionBackgroundColor","_activeObject","wh","strokeBorders","_drawBorders","borderColor","borderDashArray","drawControlsConnectingLines","_renderControls","hasBorders","styleOptions","shouldDrawBorders","shouldDrawControls","borderScaleFactor","isMoving","borderOpacityWhenMoving","drawBorders","forActiveSelection","shouldStroke","cornerDashArray","setControlVisible","setControlsVisibility","clearContextTop","restoreManually","onDeselect","_options","onSelect","shouldStartDragging","_e","onDragStart","canDrop","renderDragSourceEffect","renderDropTargetEffect","applyMixins","derivedCtor","constructors","baseCtor","getOwnPropertyNames","prototype","defineProperty","getOwnPropertyDescriptor","create","lockMovementX","lockMovementY","lockScalingX","lockScalingY","lockSkewingX","lockSkewingY","lockScalingFlip","evented","perPixelTargetFind","activeOn","hoverCursor","moveCursor","isTransparent","tolerance","getImageData","StrokeProjectionsBase","strokeProjectionMagnitude","strokeUniformScalar","createSideVector","projectOrthogonally","applySkew","calcOrthogonalProjection","isSkewed","scaleUnitVector","unitVector","zeroVector","StrokeLineJoinProjections","getOrthogonalRotationFactor","vector1","vector2","C","AC","bisector","orthogonalProjection","correctSide","projectBevel","projections","projectMiter","hypotUnitScalar","miterVector","projectRoundNoSkew","startCircle","endCircle","projectRoundWithSkew","circleRadius","newY","furthestY","newX","furthestX","projectRound","isStraightLine","newOrigin","proj0","proj1","comparisonVector","isProj0Start","projectPoints","project","originPoint","projectedPoint","StrokeLineCapProjections","projectButt","projection","projectSquare","strokePointingOut","projectedA","projectStrokeOnPoints","openPath","reduced","findIndexRight","cloneStyles","newObj","keyInner","escapeXml","string","graphemeSplit","textstring","graphemes","chr","getWholeChar","str","code","charCodeAt","isNaN","charAt","next","prev","firstLetterOnly","hasStyleChanged","prevStyle","thisStyle","forTextSpans","textBackgroundColor","deltaY","overline","underline","linethrough","stylesToArray","text","textLines","stylesArray","charIndex","chars","end","stylesFromArray","stylesObject","styleIndex","SHARED_ATTRIBUTES","selectorMatches","selector","nodeName","classNames","getAttribute","azAz","matcher","splitClassNames","elementMatchesRule","selectors","parentMatching","firstMatching","parentElement","doesSomeParentMatch","normalizeAttr","attr","_attributesMap","regex","cleanupSvgAttribute","attributeValue","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","transforms","transformList","_templateObject7","reTransformList","reTransform","reTransformAll","parseTransformAttribute","test","matchAll","transformMatch","matchedParams","operation","rawArgs","arg1","arg2","arg3","arg4","arg5","arg","normalizeValue","parentAttributes","parsed","ouputValue","transformMatrix","fillIndex","strokeIndex","parseFontDeclaration","oStyle","lineHeight","parseStyleString","chunk","parseStyleAttribute","parseStyleObject","colorAttributesMap","parseAttributes","attributes","cssRules","parentFontSize","ownAttributes","rule","getGlobalStylesForElement","normalizedStyle","normalizedAttr","normalizedValue","font","mergedAttrs","colorAttr","setStrokeFillOpacity","RECT_PROPS","Rect","_initRxRy","rx","ry","isRounded","bezierCurveTo","fromElement","_parseAttributes","ATTRIBUTE_NAMES","restOfparsedAttributes","Boolean","LAYOUT_TYPE_INITIALIZATION","LAYOUT_TYPE_ADDED","LAYOUT_TYPE_REMOVED","LAYOUT_TYPE_IMPERATIVE","getObjectBounds","destinationGroup","currentGroup","objectCenter","accountForStroke","strokeUniformVector","scalingStrokeWidth","sizeVector","LayoutStrategy","calcLayoutResult","shouldPerformLayout","calcBoundingBox","prevStrategy","strategy","shouldLayoutClipPath","getInitialSize","overrides","bboxSize","bboxCenter","actualSize","relativeCorrection","FitContentLayout","LAYOUT_MANAGER","LayoutManager","_subscriptions","performLayout","strictContext","bubbles","_prevLayoutStrategy","onBeforeLayout","layoutResult","getLayoutResult","commitLayout","onAfterLayout","attachHandlers","trigger","subscribe","unsubscribe","_context","delete","unsubscribeTargets","targets","subscribeTargets","tricklingContext","layoutManager","prevCenter","nextCenter","correction","_context$x","_context$y","layoutObjects","layoutObject","_","bubblingContext","NoopLayoutManager","Group","groupInit","_options$layoutManage","__objectSelectionTracker","__objectSelectionMonitor","__objectSelectionDisposer","enterGroup","canEnterGroup","_filterObjectsBeforeEnteringGroup","allowedObjects","_onAfterObjectsChange","removeParentTransform","exitGroup","_shouldSetNestedCoords","subTargetCheck","removeAll","_activeObjects","selected","activeObjects","_watchObject","watch","_enterGroup","activeObject","_exitGroup","ownCache","preserveObjectStacking","triggerLayout","__serializeObjects","method","_includeDefaultValues","originalDefaults","_createSVGBgRect","fillStroke","commons","svgString","bg","abortable","hydratedOptions","layoutClass","strategyClass","interactive","findScaleToFit","destination","findScaleToCover","commaWsp","reArcCommandPoints","repeatedCommands","M","segmentToBezier","theta1","theta2","cosTh","sinTh","cx1","cy1","mT","fromX","fromY","costh1","sinth1","costh2","sinth2","toX","toY","calcVectorAngle","ux","uy","vx","vy","ta","tb","getBoundsOfCurve","begx","begy","cp1x","cp1y","cp2x","cp2y","endx","endy","argsString","cachesBoundsOfCurve","boundsOfCurveCache","tvalues","bounds","b2ac","sqrtb2ac","t1","t2","jlen","iterator","getPointOnCubicBezierIterator","fromArcToBeziers","fx","fy","rot","large","sweep","tx","ty","segsNorm","arcToSegments","rotateX","root","sinTheta","px","py","rx2","ry2","py2","px2","pl","_rx","_ry","mTheta","dtheta","segments","mDelta","th3","makePathSimpler","x1","y1","destinationPath","previous","controlX","controlY","parsedCommand","converted","calcLineLength","x2","y2","pct","c1","c2","CB2","c3","CB3","c4","CB4","QB1","QB2","QB3","getTangentCubicIterator","p1x","p1y","p2x","p2y","p3x","p3y","p4x","p4y","qb1","qb2","qb3","tangentX","tangentY","getPointOnQuadraticBezierIterator","getTangentQuadraticIterator","invT","pathIterator","tempP","tmpLen","perc","findPercentageForDistance","segInfo","distance","nextLen","nextStep","lastPerc","angleFinder","getPathSegmentsInfo","tempInfo","totalLength","info","basicInfo","command","destX","destY","getPointOnPath","infos","segPercent","segment","rePathCmdAll","regExpArcCommandPoints","reMyNum","commandLengths","parsePath","pathString","_pathString$match","chain","matchStr","commandLetter","commandLength","paramArr","lastIndex","out","newCommand","transformedCommand","getSmoothPathFromPoints","p1","p2","multSignX","multSignY","manyPoints","midPoint","joinPath","pathData","setStyle","elementStyle","setProperty","getRandomInt","random","request","xhr","removeListener","ontimeout","onreadystatechange","readyState","open","send","removeTransformMatrixForSvgParsing","preserveAspectRatioOptions","_assignTransformMatrixProps","cropX","cropY","offsetLeft","offsetTop","_newCanvas$getContext","getRegularPolygonPath","numVertexes","radius","interiorAngle","rotationAdjustment","rad","commonAttributes","groupSVGElements","mergeClipPaths","_b$group","removeTransformFromObject","finalTransform","rotatePoint","transformPath","pathOffset","pathSegment","newSegment","CanvasDOMManager","containerClass","upperCanvasEl","createUpperCanvas","upper","applyCanvasStyle","container","createContainerElement","replaceChild","className","removeChild","SelectableCanvas","_this$elements$upper","_this$elements$upper2","wrapperEl","_objectsToRender","deselected","_discardActiveObject","_hoveredTarget","_hoveredTargets","_chooseObjectsToRender","contextTopDirty","_groupSelector","isDrawingMode","renderTopLayer","_isCurrentlyDrawing","freeDrawingBrush","selection","_drawSelection","renderTop","setTargetFindTolerance","targetFindTolerance","pixelFindCanvasEl","pixelFindContext","isTargetTransparent","selectionBgc","enhancedTolerance","_isSelectionKeyPressed","sKey","selectionKey","_shouldClearSelection","getActiveObjects","_shouldCenterTransform","modifierKeyPressed","centerTransform","_getOriginFromCorner","controlName","_setupCurrentTransform","alreadySelected","_control$getActionHan","getScenePoint","getActionFromCorner","altKey","centeredKey","lastX","lastY","shiftKey","setCursor","cursor","deltaX","extent","strokeOffset","selectionLineWidth","minX","minY","maxX","maxY","selectionColor","selectionBorderColor","selectionDashArray","findTarget","skipTargetFind","getViewportPoint","aObjects","searchPossibleTargets","subTargets","altSelectionKey","_pointIsInObjectSelectionArea","viewportZoom","angleRadians","cosP","sinP","cosPSinP","cosPMinusSinP","_checkTarget","isEditing","_searchPossibleTargets","subTarget","_pointer","_absolutePointer","fromViewport","boundsWidth","boundsHeight","cssScale","_resetTransformEventData","_setBrushStyles","willReadFrequently","getTopContext","getSelectionContext","getSelectionElement","active","_fireSelectionEvents","oldObjects","somethingChanged","invalidate","added","setActiveObject","currentActives","_setActiveObject","prevActiveObject","endCurrentTransform","discardActiveObject","discarded","_finalizeCurrentTransform","_scaling","originalProperties","_realizeGroupTransformOnObject","originalValues","selectionFullyContained","defaultCursor","freeDrawingCursor","notAllowedCursor","stopContextMenu","fireRightClick","fireMiddleClick","enablePointerEvents","TextEditingManager","cb","hiddenTextarea","focus","__disposer","exitTextEditing","exitEditing","onMouseMove","_this$target","updateSelectionOnMouseMove","addEventOptions","passive","getEventPoints","viewportPoint","scenePoint","absolutePointer","addListener","syntheticEventConfig","mouse","in","targetIn","targetOut","canvasIn","canvasOut","drag","Canvas","eventHandler","addOrRemove","_getEventPrefix","functor","_eventjsFunctor","canvasElement","eventTypePrefix","_onResize","_onMouseDown","_onMouseMove","_onMouseOut","_onMouseEnter","_onMouseWheel","_onContextMenu","_onDoubleClick","_onDragStart","_onDragEnd","_onDragOver","_onDragEnter","_onDragLeave","_onDrop","_onTouchStart","removeListeners","_onMouseUp","_onTouchEnd","__onMouseWheel","shared","nestedTarget","_isClick","_dragSource","_onDragProgress","_renderDragEffects","dropTarget","_dropTarget","didDrop","dataTransfer","dropEffect","dragSource","_draggedoverTarget","findDragTargets","eventType","_fireEnterLeaveEvents","_basicEventHandler","_cacheTransformEventData","_handleEvent","getPointerId","evt","identifier","pointerId","_isMainEvent","isPrimary","touches","mainTouchId","shouldPreventScrolling","currentActiveObject","__onMouseDown","_target","__onMouseUp","_willAddMouseDown","clearTimeout","__onMouseMove","_shouldRender","_this$_activeObject","isClick","button","_onMouseUpInDrawingMode","shouldRender","targetWasActive","handleSelection","found","originalControl","originalMouseUpHandler","_setCursorFromEvent","currentTarget","currentSubTargets","_onMouseDownInDrawingMode","onMouseDown","_onMouseMoveInDrawingMode","onMouseUp","grouped","handleMultiSelection","groupSelector","_transformObject","_fireOverOutEvents","textEditingManager","fireSyntheticInOutEvents","oldTarget","fireCanvas","draggedoverTarget","targetChanged","outOpt","nextTarget","inOpt","previousTarget","localPointer","_performTransformAction","activeSelection","reverse","isAS","prevActiveObjects","multiSelectAdd","newActiveSelection","point1","point2","collectedObjects","klass","linearDefaultCoords","radialDefaultCoords","ifNaN","valueIfNaN","RE_PERCENT","isPercent","parsePercent","NaN","RE_KEY_VALUE_PAIRS","RE_KEY_VALUE","parseColorStop","keyValuePairs","parseColorStops","opacityAttr","colorStops","colorStopEls","getElementsByTagName","parseType","parseGradientUnits","getValue","parseCoords","valuesToConvert","finalValue","propValue","convertPercentUnitsToValues","parseLinearCoords","parseRadialCoords","Gradient","addColorStop","colorStop","preTransform","sort","_renderPathCommands","needsSwap","minRadius","percentageShift","gradient","createLinearGradient","createRadialGradient","svgOptions","viewBoxWidth","viewBoxHeight","Pattern","isImageSource","isCanvasSource","sourceToString","complete","naturalWidth","naturalHeight","patternSource","patternOffsetX","patternOffsetY","patternWidth","patternHeight","BaseBrush","_saveAndTransform","needsFullRender","_resetShadow","_isOutSideCanvas","Path","_setPath","adjustPosition","setBoundingBox","_calcBoundsFromPath","quadraticCurveTo","pathCmd","sourcePath","_getOffsetTransform","digits","_calcDimensions","subpathStartX","subpathStartY","parsedAttributes","PencilBrush","_points","_hasStraightLine","drawSegment","drawStraightLine","straightLineKey","_prepareForDrawing","_addPoint","limitedToCanvasSize","oldEnd","_finalizeAndAddPath","_reset","convertPointsToSVGPath","createPath","decimatePoints","cDistance","lastPoint","adjustedDistance","newPoints","decimate","isEmptySVGPath","CIRCLE_PROPS","Circle","setRadius","startAngle","endAngle","getRadiusX","getRadiusY","startX","startY","endX","endY","largeFlag","sweepFlag","coordProps","Line","_setWidthHeight","calcLinePoints","origStrokeStyle","_this$stroke","_x1","_x2","_y1","_y2","xMult","yMult","Triangle","widthBy2","heightBy2","ELLIPSE_PROPS","Ellipse","getRx","getRy","parsePointsAttribute","pointsSplit","parsedPoints","polylineDefaultValues","exactBoundingBox","Polyline","initialized","isOpen","_projectStrokeOnPoints","strokeDiff","bboxNoStroke","layoutProperties","_options$width","_options$height","_options$width2","_options$height2","output","diffX","diffY","Polygon","fontProperties","textDecorationProperties","textLayoutProperties","additionalProps","styleProperties","textDefaultValues","_reNewline","_reSpacesAndTabs","_reSpaceAndTab","_reWords","textAlign","superscript","baseline","subscript","pathStartOffset","pathSide","pathAlign","_fontSizeFraction","offsets","_fontSizeMult","charSpacing","direction","CACHE_FONT_SIZE","MIN_TEXT_WIDTH","JUSTIFY","JUSTIFY_LEFT","JUSTIFY_RIGHT","JUSTIFY_CENTER","StyledText","isEmptyStyles","lineIndex","line","p3","styleHas","cleanStyle","letterCount","stylePropertyValue","stylesCount","allStyleObjectPropertiesMatch","graphemeCount","styleObject","_textLines","removeStyle","lineNum","charNum","_extendStyles","get2DCursorLocation","_getLineStyle","_setLineStyle","newStyle","_getStyleDeclaration","_setStyleDeclaration","getSelectionStyles","startIndex","endIndex","getStyleAtPosition","getCompleteStyleDeclaration","setSelectionStyles","_forceClearCache","_lineStyle$charIndex","lineStyle","_styleProperties","_deleteStyleDeclaration","_deleteLineStyle","multipleSpacesRegex","dblQuoteRegex","createSVGInlineRect","svgColor","createSVGRect","measuringContext","FabricText","setPathInfo","initDimensions","segmentsInfo","_splitText","newLines","_splitTextIntoLines","lines","graphemeLines","_unwrappedTextLines","_unwrappedLines","_text","graphemeText","_clearCache","calcTextWidth","cursorWidth","calcTextHeight","enlargeSpaces","diffSpace","currentLineWidth","numberOfSpaces","accumulatedSpace","charBound","spaces","isEndOfWrapping","getLineWidth","__charBounds","kernedWidth","missingNewlineOffset","_lineIndex","selectionStart","skipWrapping","_setTextStyles","_renderTextLinesBackground","_renderTextDecoration","_renderTextStroke","_renderTextFill","charStyle","forMeasuring","textBaseline","_getFontDeclaration","maxWidth","_renderTextLine","_renderChars","leftOffset","_getLeftOffset","lineTopOffset","_getTopOffset","heightOfLine","lineLeftOffset","_getLineLeftOffset","drawStart","currentColor","boxWidth","boxStart","lastColor","getValueOfPropertyAt","charBox","renderLeft","_measureChar","_char","previousChar","prevCharStyle","fontDeclaration","couple","stylesAreEqual","fontMultiplier","coupleWidth","previousWidth","getMeasuringContext","measureText","getHeightOfChar","measureLine","lineInfo","_measureLine","_getWidthOfCharSpacing","prevGrapheme","graphemeInfo","llength","lineBounds","grapheme","_getGraphemeBox","positionInPath","totalPathLength","_setGraphemeOnPath","numOfSpaces","centerPosition","skipLeft","previousBox","__lineHeights","maxHeight","_renderTextCommon","lineHeights","isJustify","shortCut","isLtr","currentDirection","actualStyle","nextStyle","timeToRender","drawingLeft","charsToRender","_renderChar","_applyPatternGradientTransformText","handleFiller","fullDecl","shouldFill","fillOffsets","fillText","strokeOffsets","strokeText","setSuperscript","_setScript","setSubscript","schema","loc","lineDiff","__lineWidths","_charStyle$property","topOffset","currentDecoration","currentFill","lastDecoration","lastFill","currentSize","currentDy","parsedFontFamily","genericFonts","newLine","newText","needsDims","isAddingPath","_options$parsedAttrib","textAnchor","textDecoration","restOfOptions","textContent","textHeightScaleFactor","scaledDiff","textHeight","offX","_getSVGLeftTopOffsets","textAndBg","_getSVGTextAndBg","textTop","textLeft","_wrapSVGTextAndBg","lineTop","textBgRects","textSpans","getSvgTextDecoration","textTopOffset","textLeftOffset","lineOffset","_setSVGTextLineBg","_setSVGTextLineText","_createTextCharSpan","char","styleDecl","styleProps","getSvgSpanStyles","fillStyles","dySpan","_getSVGLineTopOffset","lastHeight","useWhiteSpace","decoration","DraggableTextDelegate","dragEnterHandler","dragOverHandler","dragLeaveHandler","dragEndHandler","dropHandler","_dispose","isPointerOverSelection","newSelection","getSelectionStartFromPointer","selectionEnd","__mouseDownInPlace","isActive","__dragStartFired","setCursorByClick","initDelayedCursor","__isDraggingOver","getDragStartSelection","__dragStartSelection","setDragImage","_e$dataTransfer","flipFactor","boundaries","_getCursorBoundaries","diff","bgc","dragImage","border","__dragImageDisposer","appendChild","setData","stringify","effectAllowed","abortCursorAnimation","editable","defaultPrevented","dragStartSelection","targetCanDrop","ev","_e$dataTransfer2","insert","getData","trailing","selectionStartOffset","removeChars","trimEnd","insertChars","enterEditing","_updateTextarea","_e$dataTransfer3","reNonWord","ITextBehavior","initBehavior","_tick","_onTickComplete","_animateCursor","toValue","_currentCursorOpacity","renderCursorOrSelection","_currentTickState","cursorDuration","_this$_currentTickCom","_currentTickCompleteState","restart","cursorDelay","shouldClear","cursorAnimation","restartCursorIfNeeded","selectAll","_fireSelectionChanged","getSelectedText","findWordBoundaryLeft","startFrom","_reSpace","findWordBoundaryRight","findLineBoundaryLeft","findLineBoundaryRight","searchWordBoundary","selectWord","newSelectionStart","newSelectionEnd","selectLine","enterEditingImpl","initHiddenTextarea","_saveEditingProps","_setEditingProps","_textBeforeEdit","activeElement","currentStart","currentEnd","__selectionStartOnMouseDown","editingBorderColor","fromStringToGraphemeSelection","smallerTextStart","graphemeStart","smallerTextEnd","fromGraphemeToStringSelection","cursorOffsetCache","inCompositionMode","updateTextareaPosition","updateFromTextArea","textarea","_calcTextareaPosition","desiredPosition","compositionStart","cursorLocation","charHeight","upperCanvas","upperCanvasWidth","upperCanvasHeight","clientWidth","clientHeight","_savedProps","_restoreEditingProps","_exitEditing","exitEditingImpl","isTextChanged","_removeExtraneousStyles","removeStyleFromTo","lineStart","charStart","lineEnd","charEnd","styleObj","shiftLineStyles","numericChar","clonedStyles","numericLine","insertNewlineStyleObject","qty","copiedStyle","newLineStyles","originalLineLength","isEndOfLine","someStyleIsCarryingOver","currentCharStyle","numIndex","styleCarriedOver","insertCharStyleObject","quantity","currentLineStyles","currentLineStylesCloned","numericIndex","insertNewStyleBlock","insertedText","cursorLoc","addedLines","linesLength","setSelectionStartEndWithShift","_selectionDirection","ITextKeyBehavior","autocapitalize","autocorrect","autocomplete","spellcheck","wrap","hiddenTextareaContainer","keydown","keyup","input","copy","cut","paste","compositionstart","compositionupdate","compositionend","onKeyDown","keyMap","keysMapRtl","keysMap","keyCode","ctrlKeysMapDown","ctrlKey","metaKey","stopImmediatePropagation","onKeyUp","_copyDone","ctrlKeysMapUp","onInput","fromPaste","updateAndFire","nextText","charCount","nextCharCount","removedText","removeFrom","removeTo","charDiff","textareaSelection","backDelete","copiedText","disableStyleCopyPaste","copiedTextStyle","onCompositionStart","onCompositionEnd","onCompositionUpdate","compositionEnd","_getWidthBeforeCursor","bound","widthBeforeCursor","getDownCursorOffset","isRight","selectionProp","_getSelectionForOffset","indexOnOtherLine","_getIndexOnLine","getUpCursorOffset","textBeforeCursor","charWidth","foundMatch","widthOfCharsOnLine","indexOnLine","leftEdge","rightEdge","offsetFromLeftEdge","moveCursorDown","_moveCursorUpOrDown","moveCursorUp","moveCursorWithShift","moveCursorWithoutShift","moveCursorLeft","_moveCursorLeftOrRight","_move","newValue","_moveLeft","_moveRight","moveCursorLeftWithoutShift","moveCursorLeftWithShift","moveCursorRight","moveCursorRightWithShift","moveCursorRightWithoutShift","notALeftClick","ITextClickBehavior","_mouseDownHandler","_mouseDownHandlerBefore","doubleClickHandler","tripleClickHandler","__lastClickTime","__lastLastClickTime","__lastPointer","draggableTextDelegate","__newClickTime","newPointer","isTripleClick","__lastSelected","didDrag","mouseOffset","charLength","widthAfter","MOVE_CURSOR_UP","MOVE_CURSOR_DOWN","MOVE_CURSOR_LEFT","MOVE_CURSOR_RIGHT","EXIT_EDITING","iTextDefaultValues","cursorColor","caching","IText","setSelectionStart","_updateAndFire","setSelectionEnd","renderSelection","renderCursor","skipCaching","_getCursorBoundariesOffsets","__getCursorBoundariesOffsets","renderCursorAt","_renderCursor","getCursorRenderingData","_renderSelection","dragSelection","startLine","endLine","startChar","endChar","realLineHeight","boxEnd","drawHeight","extraTop","drawWidth","compositionColor","getCurrentCharFontSize","cp","_getCurrentCharIndex","getCurrentCharColor","cursorPosition","Textbox","dynamicMinWidth","_styleMap","_generateStyleMap","textInfo","realLineCount","realLineCharCount","splitByGrapheme","isWrapping","nextOffset","nextLineIndex","shouldLimit","mapNextLine","p2Number","_wrapText","desiredWidth","getGraphemeDataForRender","wrapped","wordsData","_wrapLine","infix","largestWordWidth","wordsOrGraphemes","wordSplit","word","graphemeArray","_measureWord","charOffset","_wordJoiners","reservedSpace","additionalSpace","infixWidth","lineJustStarted","wordWidth","getMinWidth","minWidth","linesToKeep","propNumber","ClipPathLayout","clipPathCenter","FixedLayout","ActiveSelectionLayoutManager","parents","Set","selectedObjects","ActiveSelection","multiSelectionStacking","findIndex","groups","childrenOverride","Canvas2dFilterBackend","applyFilters","filters","sourceElement","sourceWidth","sourceHeight","pipelineState","imageData","originalEl","originalImageData","filterBackend","applyTo","imageDataPostFilter","putImageData","WebGLFilterBackend","tileSize","Float32Array","setupGLContext","captureGPUInfo","createWebGLCanvas","premultipliedAlpha","depth","stencil","antialias","clearColor","cachedTexture","getCachedTexture","destinationWidth","destinationHeight","sourceTexture","createTexture","targetTexture","originalTexture","passes","webgl","aPosition","programCache","pass","tempFbo","createFramebuffer","bindFramebuffer","FRAMEBUFFER","dWidth","dHeight","resizeCanvasIfNeeded","copyGLTo2D","bindTexture","TEXTURE_2D","deleteTexture","deleteFramebuffer","clearWebGLCaches","textureCache","textureImageSource","NEAREST","RGBA","UNSIGNED_BYTE","CLAMP_TO_EDGE","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","texture","texParameteri","texImage2D","uniqueId","evictCachesForKey","glCanvas","sourceY","copyGLTo2DPutImageData","numBytes","u8","Uint8Array","imageBuffer","u8Clamped","Uint8ClampedArray","readPixels","imgData","ImageData","gpuInfo","renderer","vendor","ext","UNMASKED_RENDERER_WEBGL","UNMASKED_VENDOR_WEBGL","initFilterBackend","enableGLFiltering","getFilterBackend","IMAGE_PROPS","FabricImage","setElement","_element","removeTexture","_originalElement","CSS_CANVAS","resizeFilter","applyResizeFilters","backend","elementKey","getCrossOrigin","getOriginalSize","_stroke","filterObj","getSrc","hasCrop","imageMarkup","strokeSvg","imageRendering","imageSmoothing","getSvgSrc","origFill","filtered","srcFromAttribute","setSrc","minimumScale","minimumScaleTrigger","elementToFilter","_filteredEl","_filterScalingX","_filterScalingY","_lastScaleX","_lastScaleY","isNeutralState","imgElement","_needsResize","elementToDraw","elWidth","elHeight","sX","sY","sW","sH","maxDestW","maxDestH","_resetWidthHeight","pAR","preserveAspectRatio","pWidth","pHeight","rWidth","rHeight","f","rf","hydratedProps","fromURL","imageOptions","applyViewboxTransform","viewBoxAttr","widthAttr","heightAttr","missingViewBox","missingDimAttr","translateMatrix","widthDiff","heightDiff","parsedDim","pasedViewBox","createElementNS","firstChild","getTagName","node","tagName","svgInvalidAncestorsRegEx","getMultipleNodes","nodeNames","nodeList","nodeArray","getElementsByTagNameNS","gradientsAttrs","xlinkAttr","recursivelyParseGradientsXlink","_gradient$getAttribut","xLink","referencedGradient","children","referenceClone","cloneNode","tagArray","getCSSRules","allRules","styleContents","ruleObj","propertyValuePairs","pair","_rule","findTag","ElementsParser","clipPaths","regexUrl","gradientDefs","elList","getGradientDefs","createObject","resolveGradient","resolveClipPath","extractPropertyDefinition","storage","gradientDef","usingElement","exactOwner","clipPathElements","objTransformInv","clipPathTag","clipPathOwner","clipPathElement","enlivedClippath","clipRule","gTransform","isValidSvgTag","createEmptyResponse","allElements","async","parseSVGDocument","nodelist","skipAttributes","useElement","useAttributes","useAttrMap","xlink","href","referencedElement","clonedOriginal","originalAttributes","originalAttrMap","currentTrans","el3","setAttributeNS","childNodes","styleRecord","mergedStyles","entry","parseUseDirectives","descendants","hasInvalidAncestor","localClipPaths","elementParser","ACTION_NAME","createPolyPositionHandler","pointIndex","polyObject","polyActionHandler","poly","mouseLocalPosition","factoryPolyActionHandler","anchorPoint","anchorPointInParentPlane","createPolyActionHandler","calcPathPointPosition","pathObject","commandIndex","pathPositionHandler","pathActionHandler","movePathPoint","anchorCommand","PathPointControl","controlFill","controlStroke","PathControlPointControl","connectToCommandIndex","connectToPointIndex","connectionDashArray","commandType","createControl","commandIndexPos","pointIndexPos","isControlPoint","controlPointStyle","pointStyle","previousCommandType","indexFromPrevCommand","isWebGLPipelineState","highPsourceCode","identityFragmentShader","BaseFilter","getFragmentSource","getVertexSource","createProgram","vertexSource","vertexShader","VERTEX_SHADER","program","getShaderInfoLog","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","uniformLocations","getUniformLocations","uStepW","getUniformLocation","uStepH","attributeLocations","getAttributeLocations","getAttribLocation","locations","sendAttributeData","aPositionData","attributeLocation","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","FLOAT","bufferData","STATIC_DRAW","_setupFrameBuffer","framebufferTexture2D","COLOR_ATTACHMENT0","finish","_swapTextures","temp","applyToWebGL","applyTo2d","getCacheKey","retrieveShader","shader","useProgram","uniform1f","sendUniformData","viewport","drawArrays","TRIANGLE_STRIP","bindAdditionalTexture","textureUnit","activeTexture","TEXTURE0","unbindAdditionalTexture","_gl","_uniformLocations","createHelpLayer","helpLayer","defaultKeys","blendColorFragmentSource","screen","difference","lighten","darken","exclusion","tint","BlendColor","mode","tg","alpha1","uniform4fv","uColor","mask","BlendImage","image","TEXTURE1","calculateMatrix","resources","blendImage","canvas1","blendData","uniform1i","uImage","uniformMatrix3fv","uTransformMatrix","filterOptions","enlivedImage","Blur","aspectRatio","horizontal","simpleBlur","blurLayer1","blurLayer2","canvas2","ctx1","ctx2","nSamples","percent","newImageData","delta","chooseRightDelta","uniform2fv","uDelta","blurScale","Brightness","brightness","uBrightness","ColorMatrix","colorsOnly","constants","uniformMatrix4fv","uColorMatrix","uConstants","createColorMatrixFilter","_Class","newClass","Brownie","Vintage","Kodachrome","Technicolor","Polaroid","Sepia","BlackWhite","Composed","subFilters","enlivedFilters","Contrast","contrast","contrastF","uContrast","Convolute_3_1","Convolute_3_0","Convolute_5_1","Convolute_5_0","Convolute_7_1","Convolute_7_0","Convolute_9_1","Convolute_9_0","Convolute","opaque","weights","side","halfSide","sw","sh","createImageData","dst","alphaFac","dstOff","scx","scy","srcOff","wt","uniform1fv","uMatrix","GAMMA","Gamma","gamma","rInv","gInv","bInv","rgbValues","rgb","uniform3fv","uGamma","lightness","luminosity","Grayscale","uMode","HueRotation","rotation","cosine","sine","aThird","aThirdSqtSin","OneMinusCos","Invert","invert","uInvert","uAlpha","Noise","noise","rand","uNoise","uSeed","Pixelate","blocksize","_i","_j","uBlocksize","RemoveColor","lowC","highC","uLow","uHigh","useAlpha","Resize","uTaps","taps","getFilterWindow","tempScale","lanczosLobes","filterWindow","generateShader","getTaps","lobeFunction","lanczosCreate","applyToForWebgl","dW","dH","lobes","xx","rcpScaleX","rcpScaleY","oW","oH","newData","resizeType","sliceByTwo","hermiteFastResize","bilinearFiltering","lanczosResize","mult","doneW","doneH","stepW","stepH","dX","dY","tmpCanvas","srcData","destImg","destData","lanczos","ratioX","ratioY","rcpRatioX","rcpRatioY","range2X","range2Y","cacheLanc","icenter","process","u","weight","fX","fY","xDiff","yDiff","chnl","origPix","w4","pixels","destImage","destPixels","ratioW","ratioH","ratioWHalf","ratioHHalf","img2","data2","weightsAlpha","gxR","gxG","gxB","gxA","yy","w0","Saturation","adjust","saturation","uSaturation","Vibrance","vibrance","amt","uVibrance","drawDot","addPoint","dot","originalRenderOnAddRemove","circles","circle","pointerPoint","getPatternSrc","patternCanvas","patternCtx","dotWidth","getPattern","pattern","topLeft","sprayChunks","sprayChunk","addSprayChunk","renderChunck","rects","chunck","rect","optimizeOverlapping","uniqueRects","uniqueRectsArray","getUniqueRects","sprayChunck","density","dotWidthVariance","randomOpacity","isPutImageFaster","testContext","ArrayBuffer","testPipelineState","performance","now","drawImageTime","parseFromString","xml","responseXML","parsedDoc"],"mappings":"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"}